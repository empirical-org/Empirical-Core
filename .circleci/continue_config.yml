version: 2.1

orbs:
  maven: circleci/maven@1.2.0

jobs:
  lms_rails_build:
    parameters: &should_run_params
      should-run:
        type: boolean
        default: false
    working_directory: ~/Empirical-Core
    parallelism: 8
    docker:
      - image: cimg/ruby:3.2.2
        environment:
          PG_DB: quill_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: pgvector/pgvector:pg15
        environment:
          POSTGRES_DB: quill_test_db
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: password
      - image: pgvector/pgvector:pg15
        name: test_replica
        environment:
          POSTGRES_DB: quill_test_db
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: password
    steps:
      - run: &blank_required_step
          name: Required first step in case following condition is false (A job must have one step or it errors)
          command: echo 'About to check whether to run these tests'
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - restore_cache:
                keys:
                  - bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                  - bundle-cache-lms-v3
            - run:
                name: Bundle Install if cache isn't present.
                command: |
                  cd services/QuillLMS
                  gem install bundler:2.2.33
                  # BUNDLE_GEMS__CONTRIBSYS__COM defined in https://circleci.com/gh/empirical-org/Empirical-Core/edit#env-vars
                  bundle config --local gems.contribsys.com ${BUNDLE_GEMS__CONTRIBSYS__COM}
                  bundle check || bundle install --path vendor/bundle
            - save_cache:
                key: bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                paths:
                  - services/QuillLMS/vendor/bundle
            - run:
                name: Install postgres dependencies
                command: |
                  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
                  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
                  sudo apt-get update
                  sudo apt-get install -y postgresql-client-15
            - run:
                name: Copy Config files
                command: |
                  cd services/QuillLMS
                  cp .env-sample .env
                  cp config/database.yml.circle config/database.yml
            - run:
                name: Set up DB
                command: |
                  cd services/QuillLMS
                  bundle exec rake db:schema:load
                  bundle exec rake db:migrate
                environment:
                  DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_test_db"
            - run:
                name: Run tests
                command: |
                  cd services/QuillLMS
                  TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | grep -v "spec/system/" | circleci tests split)
                  bin/rspec -- ${TESTFILES}
  lms_integration_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    parallelism: 4
    docker:
      - image: cimg/ruby:3.2.2-node
        environment:
          PG_DB: quill_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
          SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
          DEFAULT_URL: http://localhost:3000
      - image: pgvector/pgvector:pg15
        environment:
          POSTGRES_DB: quill_test_db
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: password
      - image: selenium/standalone-chrome:4.11.0
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - restore_cache:
                keys:
                  - npm-cache-lms-client-v8-{{ checksum "services/QuillLMS/client/package.json" }}-{{ checksum "services/QuillLMS/client/package-lock.json" }}
                  - npm-cache-lms-client-v8-{{ checksum "services/QuillLMS/client/package.json" }}-
                  - npm-cache-lms-client-v8
            - run:
                name: Install NPM dependencies
                command: |
                  cd services/QuillLMS
                  npm install
                  npm rebuild node-sass
            - save_cache:
                key: npm-cache-lms-client-v8-{{ checksum "services/QuillLMS/client/package.json" }}-{{ checksum "services/QuillLMS/client/package-lock.json" }}
                paths:
                  - services/QuillLMS/client/node_modules
            - restore_cache:
                keys:
                  - bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                  - bundle-cache-lms-v3
            - run:
                name: Bundle Install if cache isn't present.
                command: |
                  cd services/QuillLMS
                  # BUNDLE_GEMS__CONTRIBSYS__COM defined in https://circleci.com/gh/empirical-org/Empirical-Core/edit#env-vars
                  bundle config --local gems.contribsys.com ${BUNDLE_GEMS__CONTRIBSYS__COM}
                  bundle check || bundle install --path vendor/bundle
                  gem install foreman
            - save_cache:
                key: bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                paths:
                  - services/QuillLMS/vendor/bundle
            - run:
                name: Install postgres dependencies
                command: |
                  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
                  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
                  sudo apt-get update
                  sudo apt-get install -y postgresql-client-15

            - run:
                name: Copy Config files
                command: |
                  cd services/QuillLMS
                  cp .env-sample .env
                  cp config/database.yml.circle config/database.yml
            - run:
                name: Set up DB
                command: |
                  cd services/QuillLMS
                  bundle exec rake db:schema:load
                  bundle exec rake db:migrate
                environment:
                  DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_test_db"
            - run:
                name: debugging
                command: |
                  echo 'hi'
            - run:
                name: Start services with Foreman
                command: cd services/QuillLMS && foreman start -f Procfile.ci
                background: true
            - run:
                name: Wait for Rails server
                command: |
                  for i in {1..20}
                  do
                    nc -z localhost 5000 && echo Success && exit 0
                    echo -n .
                    sleep 1
                  done
                  echo Failed waiting for Rails && exit 1

            - run:
                name: Run tests
                command: |
                  cd services/QuillLMS
                  npx playwright install
                  npx playwright test
            - store_artifacts:
                path: /home/circleci/Empirical-Core/services/QuillLMS/tmp/screenshots
  lms_big_query_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    parallelism: 4
    docker:
      - image: cimg/ruby:3.2.2
        environment:
          PG_DB: quill_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: pgvector/pgvector:pg15
        environment:
          POSTGRES_DB: quill_test_db
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: password
      - image: pgvector/pgvector:pg15
        name: test_replica
        environment:
          POSTGRES_DB: quill_test_db
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: password
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - restore_cache:
                keys:
                  - bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                  - bundle-cache-lms-v3
            - run:
                name: Bundle Install if cache isn't present.
                command: |
                  cd services/QuillLMS
                  gem install bundler:2.2.33
                  # BUNDLE_GEMS__CONTRIBSYS__COM defined in https://circleci.com/gh/empirical-org/Empirical-Core/edit#env-vars
                  bundle config --local gems.contribsys.com ${BUNDLE_GEMS__CONTRIBSYS__COM}
                  bundle check || bundle install --path vendor/bundle
            - save_cache:
                key: bundle-cache-lms-v3-{{ checksum "services/QuillLMS/Gemfile.lock" }}
                paths:
                  - services/QuillLMS/vendor/bundle
            - run:
                name: Install postgres dependencies
                command: |
                  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
                  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
                  sudo apt-get update
                  sudo apt-get install -y postgresql-client-15
            - run:
                name: Copy Config files
                command: |
                  cd services/QuillLMS
                  cp .env-sample .env
                  cp config/database.yml.circle config/database.yml
            - run:
                name: Set up DB
                command: |
                  cd services/QuillLMS
                  bundle exec rake db:schema:load
                  bundle exec rake db:migrate
                environment:
                  DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_test_db"
            - run:
                name: Run tests
                command: |
                  cd services/QuillLMS
                  TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
                  bin/rspec ${TESTFILES} --tag big_query_snapshot
  lessons_server_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    parallelism: 4
    docker:
      - image: cimg/node:14.21
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - run:
                name: Install npm 8
                command: |
                  sudo npm install npm@8.19.2 -g
            - restore_cache:
                keys:
                  - npm-cache-lessons-server-v1-{{ checksum "services/QuillLessonsServer/package.json" }}-{{ checksum "services/QuillLessonsServer/package-lock.json" }}
                  - npm-cache-lessons-server-v1-{{ checksum "services/QuillLessonsServer/package.json" }}-
                  - npm-cache-lessons-server-v1-
            - run:
                name: Install NPM dependencies
                command: |
                  cd services/QuillLessonsServer
                  npm install --legacy-peer-deps
            - save_cache:
                key: npm-cache-lessons-server-v1-{{ checksum "services/QuillLessonsServer/package.json" }}-{{ checksum "services/QuillLessonsServer/package-lock.json" }}
                paths:
                  - services/QuillLessonsServer/node_modules
            - run:
                name: Run Lessons Server Jest Tests
                command: |
                  cd services/QuillLessonsServer
                  node --expose-gc ./node_modules/.bin/jest test --maxWorkers=2 --logHeapUsage

  lms_node_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    parallelism: 4
    docker:
      - image: cimg/node:14.21
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - run:
                name: Install npm 8
                command: |
                  sudo npm install npm@8.19.2 -g

            - restore_cache:
                keys:
                  - npm-cache-lms-client-v8-{{ checksum "services/QuillLMS/client/package.json" }}-{{ checksum "services/QuillLMS/client/package-lock.json" }}
                  - npm-cache-lms-client-v8-{{ checksum "services/QuillLMS/client/package.json" }}-
                  - npm-cache-lms-client-v8-
            - run:
                name: Install NPM dependencies
                command: |
                  cd services/QuillLMS/client
                  npm install --legacy-peer-deps
            - save_cache:
                key: npm-cache-lms-client-v6-{{ checksum "services/QuillLMS/client/package.json" }}-{{ checksum "services/QuillLMS/client/package-lock.json" }}
                paths:
                  - services/QuillLMS/client/node_modules
            - run:
                name: Run LMS Frontend Tests
                command: |
                  cd services/QuillLMS/client
                  TESTFILES=$(circleci tests glob "app/**/*.{test.*,spec.ts}" | circleci tests split)
                  node --expose-gc ./node_modules/.bin/jest $TESTFILES --maxWorkers=2 --logHeapUsage
  cms_rails_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    docker:
      - image: ruby:3.2.0
        environment:
          PG_DB: quill_cms_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:13.7-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: quill_cms_test_db
          POSTGRES_PASSWORD: password
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.0
        environment:
          xpack.security.enabled: false
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - restore_cache:
                keys:
                  - bundle-cache-cms{{ checksum "services/QuillCMS/Gemfile.lock" }}
            - run:
                name: Bundle Install if cache isn't present.
                command: |
                  cd services/QuillCMS
                  gem install bundler:2.3.26
                  bundle config --local gems.contribsys.com ${BUNDLE_GEMS__CONTRIBSYS__COM}
                  bundle check || bundle install --path vendor/bundle
            - save_cache:
                key: bundle-cache-cms{{ checksum "services/QuillCMS/Gemfile.lock" }}
                paths:
                  - services/QuillCMS/vendor/bundle
            - run:
                name: Copy Config files
                command: |
                  cd services/QuillCMS
                  cp config/database.yml.circle config/database.yml
            - run:
                name: Set up DB
                command: |
                  cd services/QuillCMS
                  bundle exec rake db:migrate
                environment:
                  DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_cms_test_db"
            - run:
                name: Run CMS tests
                command: |
                  cd services/QuillCMS
                  bundle exec rake spec
  evidence_rails_build:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    parallelism: 1
    docker:
      - image: cimg/ruby:3.2.2
        environment:
          PG_DB: quill_evidence_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: pgvector/pgvector:pg15
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: quill_evidence_test_db
          POSTGRES_PASSWORD: password
      - image: cimg/redis:6.0.20
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - restore_cache:
                keys:
                  - bundle-cache-evidence-v3-{{ checksum "services/QuillLMS/engines/evidence/Gemfile.lock" }}
                  - bundle-cache-evidence-v3
            - run:
                name: Bundle Install if cache isn't present.
                command: |
                  cd services/QuillLMS/engines/evidence
                  # BUNDLE_GEMS__CONTRIBSYS__COM defined in https://circleci.com/gh/empirical-org/Empirical-Core/edit#env-vars
                  bundle config --local gems.contribsys.com ${BUNDLE_GEMS__CONTRIBSYS__COM}
                  bundle check || bundle install --path vendor/bundle
            - save_cache:
                key: bundle-cache-evidence-v3-{{ checksum "services/QuillLMS/engines/evidence/Gemfile.lock" }}
                paths:
                  - services/QuillLMS/engines/evidence/vendor/bundle
            - run:
                name: Install postgres dependencies
                command: |
                  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
                  echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
                  sudo apt-get update
                  sudo apt-get install -y postgresql-client-15
            - run:
                name: Copy Config files
                command: |
                  cd services/QuillLMS/engines/evidence/spec/dummy
                  cp config/database.yml.circle config/database.yml
            - run:
                name: Set up DB
                command: |
                  cd services/QuillLMS/engines/evidence
                  bundle exec rake db:create RAILS_ENV=test
                  bundle exec rake db:schema:load RAILS_ENV=test
                environment:
                  DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_evidence_test_db"
            - run:
                name: Run tests
                command: |
                  cd services/QuillLMS/engines/evidence
                  bin/rspec
  node_lint:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    docker:
      - image: cimg/node:14.21
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - run:
                name: Install NPM Dependencies
                command: |
                  npm install
            - run:
                name: Run ESlint
                command: |
                  npm run eslint
  rubocop_lms_lint:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    docker:
      - image: cimg/ruby:3.2.2-node
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - run:
                name: Run Rubocop for LMS
                command: |
                  cd services/QuillLMS
                  ruby ./install_rubocop.rb
                  rubocop
  rubocop_cms_lint:
    parameters:
      <<: *should_run_params
    working_directory: ~/Empirical-Core
    docker:
      - image: cimg/ruby:3.2.0-node
    steps:
      - run:
          <<: *blank_required_step
      - when:
          condition: << parameters.should-run >>
          steps:
            - checkout
            - run:
                name: Run Rubocop for CMS
                command: |
                  cd services/QuillCMS
                  ruby ./install_rubocop.rb
                  rubocop

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  lms-run-backend:
    type: boolean
    default: false
  lms-run-javascript:
    type: boolean
    default: false
  lessons-server-run:
    type: boolean
    default: false
  lms-run-queries:
    type: boolean
    default: false
  lms-run-integration:
    type: boolean
    default: true # temporarily hardcoded for testing
  lms-run-evidence:
    type: boolean
    default: false
  lms-run-ruby-lint:
    type: boolean
    default: false
  cms-run:
    type: boolean
    default: false
  marking-logic-run:
    type: boolean
    default: false

# here we specify our workflows, most of which are conditionally
# executed based upon pipeline parameter values. Each workflow calls a
# specific job defined above, in the jobs section.
define: &default_filter
  filters:
    branches:
      ignore: /^deploy-.*/

workflows:
  build-test:
    jobs:
      - lms_rails_build:
          should-run: << pipeline.parameters.lms-run-backend >>
          <<: *default_filter
      - lms_node_build:
          should-run: << pipeline.parameters.lms-run-javascript >>
          <<: *default_filter
      - lessons_server_build:
          should-run: << pipeline.parameters.lessons-server-run >>
          <<: *default_filter
      - lms_big_query_build:
          should-run: << pipeline.parameters.lms-run-queries >>
          <<: *default_filter
      - lms_integration_build:
          should-run: << pipeline.parameters.lms-run-integration >>
          <<: *default_filter
      - evidence_rails_build:
          should-run: << pipeline.parameters.lms-run-evidence >>
          <<: *default_filter
      - cms_rails_build:
          should-run: << pipeline.parameters.cms-run >>
          <<: *default_filter

  lint-code:
    jobs:
      - node_lint:
          should-run: << pipeline.parameters.lms-run-javascript >>
          <<: *default_filter
      - rubocop_lms_lint:
          should-run: << pipeline.parameters.lms-run-ruby-lint >>
          <<: *default_filter
      - rubocop_cms_lint:
          should-run: << pipeline.parameters.cms-run >>
          <<: *default_filter
