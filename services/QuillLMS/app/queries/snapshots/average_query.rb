# frozen_string_literal: true

module Snapshots
  class AverageQuery < PeriodQuery
    attr_reader :params

    def initialize(**params)
      # We pull params here because we're going to do a naive pass-through to sibling queries below
      @params = params

      super
    end

    def query
      raise NotImplementedError 'Intentionally not implemented because this class relies on queries generated by other classes'
    end

    def run
      {
        'count': calculate_average
      }
    end

    def calculate_average
      numerator = numerator_query.run(**params)[:count]
      denominator = denominator_query.run(**params)[:count]
      Utils::Numeric.safe_division(numerator, denominator)
    end

    def numerator_query
      raise NotImplementedError
    end

    def denominator_query
      raise NotImplementedError
    end
  end
end

