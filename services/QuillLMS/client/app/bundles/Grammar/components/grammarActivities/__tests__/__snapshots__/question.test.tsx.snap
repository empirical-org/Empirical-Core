// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuestionComponent /> should render 1`] = `
<QuestionComponent
  activity={
    Object {
      "concepts": Object {
        "1ohLyApTz7lZ3JszrA98Xg": Object {
          "quantity": 9,
        },
      },
      "description": "Write nine sentences using parallel structure.",
      "title": "Parallel Structure",
    }
  }
  answeredQuestions={Array []}
  checkAnswer={[Function]}
  concepts={Object {}}
  conceptsFeedback={
    Object {
      "data": Object {},
      "hasreceiveddata": false,
      "newConceptModalOpen": false,
      "states": Object {},
      "submittingnew": false,
    }
  }
  currentQuestion={
    Object {
      "answers": Array [
        Object {
          "text": "The team stretched their legs, {practiced} their drills, and then rehearsed their set plays.",
        },
      ],
      "attempts": Array [],
      "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
      "instructions": "Rewrite the sentence so that it has proper parallel structure.",
      "prompt": "The team stretched their legs, practice their drills, and then rehearsed their set plays.",
      "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
      "uid": "-Jzw0qjO5owyFPUAwDGx",
    }
  }
  goToNextQuestion={[Function]}
  unansweredQuestions={
    Array [
      Object {
        "answers": Array [
          Object {
            "text": "I prefer {reading the book than watching the movie adaptation}.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence with the correct parallel structure.",
        "prompt": "I prefer <u>reading the book than to watch the movie adaptation</u>.",
        "rule_description": "<b>Correct: </b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect: </b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAg9xwXu4o93MS_0NjR",
      },
      Object {
        "answers": Array [
          Object {
            "text": "The crossing guard {was holding out his stop sign and ushering} students across the street.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence with the correct parallel structure.",
        "prompt": "The crossing guard <u>was holding out his stop sign and ushered</u> students across the street.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAg9y8hvHU0-OXp1Buq",
      },
      Object {
        "answers": Array [
          Object {
            "text": "On my vacation to Universal Studios, I will {ride roller coasters and play carnival games}.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence with the correct parallel structure.",
        "prompt": "On my vacation to Universal Studios, I will <u>ride roller coasters and playing carnival games</u>.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAg9yDOc5nKBI-kEeHI",
      },
      Object {
        "answers": Array [
          Object {
            "text": "Shannon loves to play the flute, march in the band, and {watch} the football games.",
          },
          Object {
            "text": "Shannon loves {playing the flute, marching in the band, and} watching the football games.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence so that it has proper parallel structure.",
        "prompt": "Shannon loves to play the flute, march in the band, and watching the football games.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAfz8_NHXJ2hrQZRyxU",
      },
      Object {
        "answers": Array [
          Object {
            "text": "The boss wanted to hire people who arrived on time, {smiled} at customers, and didn't take too many breaks.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence so that it has proper parallel structure.",
        "prompt": "The boss wanted to hire people who arrived on time, would smile at customers, and didn't take too many breaks.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAfxB8z_R1vkm8-WuWY",
      },
      Object {
        "answers": Array [
          Object {
            "text": "The Rocky Mountains are a great place {for skiing, hiking, and mountain biking}.",
          },
          Object {
            "text": "The Rocky Mountains are a great place {to ski, hike, and to mountain bike}.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence with the correct parallel structure.",
        "prompt": "The Rocky Mountains are a great place <u>for skiing, hiking, and to mountain bike</u>.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAg9yAQ_YyWuT9x4e17",
      },
      Object {
        "answers": Array [
          Object {
            "text": "During a conversation, talking is just as important as {listening}.",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence so that it has proper parallel structure.",
        "prompt": "During a conversation, talking is just as important as to listen.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAfwKGn8uN5BGLgXEDa",
      },
      Object {
        "answers": Array [
          Object {
            "text": "The teacher graded the students' work quickly, accurately, and {thoroughly.}",
          },
        ],
        "concept_uid": "1ohLyApTz7lZ3JszrA98Xg",
        "instructions": "Rewrite the sentence so that it has proper parallel structure.",
        "prompt": "The teacher graded the students' work quickly, accurately, and thorough.",
        "rule_description": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.
<b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.
Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
        "uid": "-KAfwjD8pcldAXkHjxA8",
      },
    ]
  }
>
  <div
    className="question"
  >
    <div
      className="top-section"
    >
      <ProgressBar
        answeredQuestionCount={1}
        label="questions"
        percent={11.11111111111111}
        questionCount={9}
      >
        <div
          className="progress-bar-container"
        >
          <progress
            className="progress activity-progress"
            max="100"
            value={11.11111111111111}
          />
          <p>
            1
             of 
            9
             
            questions
          </p>
        </div>
      </ProgressBar>
      <div
        className="flex-space-between"
      >
        <h1>
          Parallel Structure
        </h1>
      </div>
      <div
        className="example-container flex-start show"
      >
        <div
          className="example"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<b>Correct:</b> I laughed, I cried, and I shouted during the performance.<br /><b>Incorrect:</b> I laughed, I was crying, and I shout during the performance.<br />Sentences flow easily when all the actions in a list have the same ending. This means that each and every action in a list stays in the past, present, or future tense.",
            }
          }
        />
      </div>
    </div>
    <div
      className="question-section"
    >
      <div
        className="flex-start"
      >
        <div
          className="prompt"
          dangerouslySetInnerHTML={
            Object {
              "__html": "The team stretched their legs, practice their drills, and then rehearsed their set plays.",
            }
          }
        />
      </div>
      <div
        className="flex-start"
      >
        <Cues>
          <span />
        </Cues>
      </div>
      <div
        className="flex-start"
        key="instructions"
      >
        <Feedback
          feedback={
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Rewrite the sentence so that it has proper parallel structure.",
                }
              }
            />
          }
          feedbackType="instructions"
        >
          <div
            aria-live="assertive"
            className="student-feedback-container default"
            role="status"
          >
            <div
              className="feedback-row student-feedback-inner-container"
            >
              <img
                alt="Directions Icon"
                className="info"
                src="https://assets.quill.org/images/icons/direction.svg"
              />
              <p
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "Rewrite the sentence so that it has proper parallel structure.",
                  }
                }
              />
            </div>
          </div>
        </Feedback>
      </div>
      <div
        className="flex-start"
      >
        <ContentEditable
          className="input-field "
          data-gramm={false}
          disabled={false}
          html=""
          onChange={[Function]}
          onDrop={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your answer here."
          spellCheck={false}
        >
          <div
            className="input-field "
            contentEditable={true}
            dangerouslySetInnerHTML={
              Object {
                "__html": "",
              }
            }
            data-gramm={false}
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onDrop={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            placeholder="Type your answer here."
            spellCheck={false}
          />
        </ContentEditable>
      </div>
      <div
        className="flex-end"
      >
        <button
          className="quill-button-archived primary contained large focus-on-light disabled"
          type="submit"
        >
          Get feedback
        </button>
      </div>
      <div
        className="flex-start"
      />
    </div>
  </div>
</QuestionComponent>
`;
