// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClassroomStudentSection component classroom without students should render 1`] = `
<div
  className="students-section"
>
  <div
    className="students-section-header"
  >
    <h3>
      Students
    </h3>
    <div
      className="invite-quill-classroom-students"
    >
      <button
        className="quill-button primary outlined small"
        onClick={[Function]}
        type="button"
      >
        Invite students
      </button>
    </div>
  </div>
  <div
    className="no-students"
  >
    <img
      alt="Three empty desks"
      src="undefined/images/illustrations/empty-desks.svg"
    />
    <p>
      Click on the "Invite students" button to get started with your writing instruction!
    </p>
  </div>
</div>
`;

exports[`ClassroomStudentSection component with students should render 1`] = `
<div
  className="students-section"
>
  <div
    className="students-section-header with-students"
  >
    <h3>
      Students
    </h3>
    <div
      className="students-section-header-buttons"
    >
      <div
        className="login-pdf-and-view-as-student top-buttons-container"
      >
        <a
          className="quill-button secondary outlined small"
          href="/teachers/classrooms/285383/student_logins"
          rel="noopener noreferrer"
          target="_blank"
        >
          Download student log-in instructions
        </a>
        <button
          className="quill-button secondary outlined small"
          onClick={[Function]}
          type="button"
        >
          View as student
        </button>
      </div>
      <div
        className="invite-quill-classroom-students"
      >
        <button
          className="quill-button primary outlined small"
          onClick={[Function]}
          type="button"
        >
          Invite students
        </button>
      </div>
    </div>
  </div>
  <div
    className="student-actions-dropdown-wrapper"
  >
    <DropdownInput
      className="student-actions-dropdown"
      disabled={true}
      handleChange={[Function]}
      label="Actions"
      options={
        Array [
          Object {
            "label": "View as student",
            "value": undefined,
          },
          Object {
            "label": "Remove from class",
            "value": [Function],
          },
        ]
      }
    />
    <Tooltip
      isTabbable={true}
      tooltipText="Please select students from the list below to take action"
      tooltipTriggerText={
        <img
          alt="Warning icon"
          src="undefined/images/icons/warning-icon.svg"
        />
      }
    />
  </div>
  <DataTable
    averageFontWidth={7}
    checkAllRows={[Function]}
    checkRow={[Function]}
    className="show-overflow"
    headers={
      Array [
        Object {
          "attribute": "name",
          "name": "Name",
          "width": "220px",
        },
        Object {
          "attribute": "usernameOrEmail",
          "name": "Username/Email",
          "width": "330px",
        },
        Object {
          "attribute": "logInMethod",
          "name": "Log-in Method",
          "width": "110px",
        },
        Object {
          "attribute": "lastActive",
          "name": "Last Active",
          "rowSectionClassName": "show-overflow",
          "width": "110px",
        },
        Object {
          "attribute": "activities",
          "name": "Activities",
          "rowSectionClassName": "left-align",
          "width": "70px",
        },
        Object {
          "attribute": "actions",
          "isActions": true,
          "name": "Actions",
        },
      ]
    }
    rows={
      Array [
        Object {
          "actions": Array [
            Object {
              "action": [Function],
              "name": "Edit account",
            },
            Object {
              "action": [Function],
              "name": "Reset password",
            },
            Object {
              "action": [Function],
              "name": "View as student",
            },
            Object {
              "action": [Function],
              "name": "Remove from class",
            },
          ],
          "activities": undefined,
          "checked": false,
          "id": 2851870,
          "lastActive": "Invalid date",
          "logInMethod": "Username",
          "name": "Maya Angelou",
          "synced": "",
          "usernameOrEmail": "maya_angelou_demo@quill.org",
        },
        Object {
          "actions": Array [
            Object {
              "action": [Function],
              "name": "Edit account",
            },
            Object {
              "action": [Function],
              "name": "Reset password",
            },
            Object {
              "action": [Function],
              "name": "View as student",
            },
            Object {
              "action": [Function],
              "name": "Remove from class",
            },
          ],
          "activities": undefined,
          "checked": false,
          "id": 2851866,
          "lastActive": "",
          "logInMethod": "Username",
          "name": "William Shakespeare",
          "synced": "",
          "usernameOrEmail": "william.shakespeare.285383@demo-teacher",
        },
      ]
    }
    showActions={true}
    showCheckboxes={true}
    uncheckAllRows={[Function]}
    uncheckRow={[Function]}
  />
  <div
    className="duplicate-account-pro-tip"
  >
    <img
      alt=""
      src="undefined/images/pages/classrooms/lightbulb.svg"
    />
    <div
      className="duplicate-account-pro-tip-text"
    >
      <h4>
        Pro Tip - How to manage duplicate accounts
      </h4>
      <p>
        If a student has multiple accounts that were created manually (with a Quill password), you can merge those accounts together. However, Google, Clever or Canvas accounts cannot be merged together. Instead, if a student has a duplicate Google, Clever or Canvas account, go to the “Actions” menu and select the “remove the student” option for the duplicate account.
      </p>
    </div>
  </div>
</div>
`;
