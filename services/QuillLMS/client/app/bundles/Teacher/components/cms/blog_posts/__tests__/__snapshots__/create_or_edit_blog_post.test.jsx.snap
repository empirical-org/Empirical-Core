// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateOrEditBlogPost component renders for a new blog post 1`] = `
<CreateOrEditBlogPost
  action="new"
  authors={
    Array [
      Object {
        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
        "id": 32,
        "name": "Edgar O.",
      },
    ]
  }
  postToEdit={
    Object {
      "author_id": 11,
      "body": "",
      "center_images": false,
      "draft": true,
      "external_link": null,
      "id": null,
      "image_link": "",
      "premium": false,
      "press_name": null,
      "preview_card_content": "<div class='preview-card-body'>
   <h3>Party Parrot Parade</h3>
   <p>There exist many excellent party parrots.</p>
</div>
<div class='preview-card-footer'>
  <p class='author'>by Quill Staff</p>
</div>",
      "published_at": null,
      "slug": true,
      "subtitle": "",
      "title": "Write Your Title Here",
      "topic": "Webinars",
    }
  }
  topics={
    Array [
      Object {
        "name": "What's new?",
        "slug": "what%27s-new%3F",
      },
      Object {
        "name": "Using quill for reading comprehension",
        "slug": "using-quill-for-reading-comprehension",
      },
      Object {
        "name": "Getting started",
        "slug": "getting-started",
      },
      Object {
        "name": "Best practices",
        "slug": "best-practices",
      },
      Object {
        "name": "Webinars",
        "slug": "webinars",
      },
      Object {
        "name": "Video tutorials",
        "slug": "video-tutorials",
      },
      Object {
        "name": "Teacher materials",
        "slug": "teacher-materials",
      },
      Object {
        "name": "Writing instruction research",
        "slug": "writing-instruction-research",
      },
      Object {
        "name": "Teacher stories",
        "slug": "teacher-stories",
      },
      Object {
        "name": "Case studies",
        "slug": "case-studies",
      },
      Object {
        "name": "Support",
        "slug": "support",
      },
      Object {
        "name": "Twitter love",
        "slug": "twitter-love",
      },
    ]
  }
>
  <div>
    <a
      className="quill-button fun outlined secondary focus-on-light"
      href="/cms/blog_posts"
    >
      <i
        className="fas fa-chevron-left"
      />
      Â Back to All Blog Posts
    </a>
    <form>
      <div
        className="left-column"
      >
        <label>
          Title:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value="Write Your Title Here"
        />
        <label>
          SEO Meta Description:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value=""
        />
        <label>
          SEO Meta Image:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value=""
        />
        <label>
          Press Name (optional):
        </label>
        <input
          onChange={[Function]}
          type="text"
          value={null}
        />
        <div
          className="short-fields"
        >
          <div>
            <label>
              Author:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  Object {
                    "id": null,
                    "name": "None",
                  },
                  Object {
                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                    "id": 32,
                    "name": "Edgar O.",
                  },
                ]
              }
              selectedItem={
                Object {
                  "id": null,
                  "name": "None",
                }
              }
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": null,
                      "label": "None",
                      "value": Object {
                        "id": null,
                        "name": "None",
                      },
                    },
                    Object {
                      "id": 32,
                      "label": "Edgar O.",
                      "value": Object {
                        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                        "id": 32,
                        "name": "Edgar O.",
                      },
                    },
                  ]
                }
                value={
                  Object {
                    "id": null,
                    "label": "None",
                    "value": Object {
                      "id": null,
                      "name": "None",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "id": null,
                          "label": "None",
                          "value": Object {
                            "id": null,
                            "name": "None",
                          },
                        },
                        Object {
                          "id": 32,
                          "label": "Edgar O.",
                          "value": Object {
                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                            "id": 32,
                            "name": "Edgar O.",
                          },
                        },
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "id": null,
                        "label": "None",
                        "value": Object {
                          "id": null,
                          "name": "None",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "id": null,
                            "label": "None",
                            "value": Object {
                              "id": null,
                              "name": "None",
                            },
                          },
                          Object {
                            "id": 32,
                            "label": "Edgar O.",
                            "value": Object {
                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                              "id": 32,
                              "name": "Edgar O.",
                            },
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "id": null,
                          "label": "None",
                          "value": Object {
                            "id": null,
                            "name": "None",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "id": null,
                              "label": "None",
                              "value": Object {
                                "id": null,
                                "name": "None",
                              },
                            },
                            Object {
                              "id": 32,
                              "label": "Edgar O.",
                              "value": Object {
                                "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                "id": 32,
                                "name": "Edgar O.",
                              },
                            },
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "id": null,
                                "label": "None",
                                "value": Object {
                                  "id": null,
                                  "name": "None",
                                },
                              },
                              Object {
                                "id": 32,
                                "label": "Edgar O.",
                                "value": Object {
                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                  "id": 32,
                                  "name": "Edgar O.",
                                },
                              },
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "id": null,
                              "label": "None",
                              "value": Object {
                                "id": null,
                                "name": "None",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "id": null,
                                    "label": "None",
                                    "value": Object {
                                      "id": null,
                                      "name": "None",
                                    },
                                  },
                                  Object {
                                    "id": 32,
                                    "label": "Edgar O.",
                                    "value": Object {
                                      "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                      "id": 32,
                                      "name": "Edgar O.",
                                    },
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "id": null,
                                      "label": "None",
                                      "value": Object {
                                        "id": null,
                                        "name": "None",
                                      },
                                    },
                                    Object {
                                      "id": 32,
                                      "label": "Edgar O.",
                                      "value": Object {
                                        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                        "id": 32,
                                        "name": "Edgar O.",
                                      },
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "id": null,
                                    "label": "None",
                                    "value": Object {
                                      "id": null,
                                      "name": "None",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                        Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "None",
                                            "value": Object {
                                              "id": null,
                                              "name": "None",
                                            },
                                          },
                                          Object {
                                            "id": 32,
                                            "label": "Edgar O.",
                                            "value": Object {
                                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                              "id": 32,
                                              "name": "Edgar O.",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "id": null,
                                              "label": "None",
                                              "value": Object {
                                                "id": null,
                                                "name": "None",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              None
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-2-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-2-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-2-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                        Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "None",
                                            "value": Object {
                                              "id": null,
                                              "name": "None",
                                            },
                                          },
                                          Object {
                                            "id": 32,
                                            "label": "Edgar O.",
                                            "value": Object {
                                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                              "id": 32,
                                              "name": "Edgar O.",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JJIiwiZmlsZSI6ImluZGljYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyB0eXBlIE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3gsIGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgdHlwZSB7IENvbW1vblByb3BzLCBUaGVtZSB9IGZyb20gJy4uL3R5cGVzJztcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEljb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgU3ZnID0gKHsgc2l6ZSwgLi4ucHJvcHMgfTogeyBzaXplOiBudW1iZXIgfSkgPT4gKFxuICA8c3ZnXG4gICAgaGVpZ2h0PXtzaXplfVxuICAgIHdpZHRoPXtzaXplfVxuICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgZm9jdXNhYmxlPVwiZmFsc2VcIlxuICAgIGNzcz17e1xuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBmaWxsOiAnY3VycmVudENvbG9yJyxcbiAgICAgIGxpbmVIZWlnaHQ6IDEsXG4gICAgICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICAgICAgc3Ryb2tlV2lkdGg6IDAsXG4gICAgfX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pO1xuXG5leHBvcnQgY29uc3QgQ3Jvc3NJY29uID0gKHByb3BzOiBhbnkpID0+IChcbiAgPFN2ZyBzaXplPXsyMH0gey4uLnByb3BzfT5cbiAgICA8cGF0aCBkPVwiTTE0LjM0OCAxNC44NDljLTAuNDY5IDAuNDY5LTEuMjI5IDAuNDY5LTEuNjk3IDBsLTIuNjUxLTMuMDMwLTIuNjUxIDMuMDI5Yy0wLjQ2OSAwLjQ2OS0xLjIyOSAwLjQ2OS0xLjY5NyAwLTAuNDY5LTAuNDY5LTAuNDY5LTEuMjI5IDAtMS42OTdsMi43NTgtMy4xNS0yLjc1OS0zLjE1MmMtMC40NjktMC40NjktMC40NjktMS4yMjggMC0xLjY5N3MxLjIyOC0wLjQ2OSAxLjY5NyAwbDIuNjUyIDMuMDMxIDIuNjUxLTMuMDMxYzAuNDY5LTAuNDY5IDEuMjI4LTAuNDY5IDEuNjk3IDBzMC40NjkgMS4yMjkgMCAxLjY5N2wtMi43NTggMy4xNTIgMi43NTggMy4xNWMwLjQ2OSAwLjQ2OSAwLjQ2OSAxLjIyOSAwIDEuNjk4elwiIC8+XG4gIDwvU3ZnPlxuKTtcbmV4cG9ydCBjb25zdCBEb3duQ2hldnJvbiA9IChwcm9wczogYW55KSA9PiAoXG4gIDxTdmcgc2l6ZT17MjB9IHsuLi5wcm9wc30+XG4gICAgPHBhdGggZD1cIk00LjUxNiA3LjU0OGMwLjQzNi0wLjQ0NiAxLjA0My0wLjQ4MSAxLjU3NiAwbDMuOTA4IDMuNzQ3IDMuOTA4LTMuNzQ3YzAuNTMzLTAuNDgxIDEuMTQxLTAuNDQ2IDEuNTc0IDAgMC40MzYgMC40NDUgMC40MDggMS4xOTcgMCAxLjYxNS0wLjQwNiAwLjQxOC00LjY5NSA0LjUwMi00LjY5NSA0LjUwMi0wLjIxNyAwLjIyMy0wLjUwMiAwLjMzNS0wLjc4NyAwLjMzNXMtMC41Ny0wLjExMi0wLjc4OS0wLjMzNWMwIDAtNC4yODctNC4wODQtNC42OTUtNC41MDJzLTAuNDM2LTEuMTcgMC0xLjYxNXpcIiAvPlxuICA8L1N2Zz5cbik7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRHJvcGRvd24gJiBDbGVhciBCdXR0b25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IHR5cGUgSW5kaWNhdG9yUHJvcHMgPSBDb21tb25Qcm9wcyAmIHtcbiAgLyoqIFRoZSBjaGlsZHJlbiB0byBiZSByZW5kZXJlZCBpbnNpZGUgdGhlIGluZGljYXRvci4gKi9cbiAgY2hpbGRyZW46IE5vZGUsXG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufTtcblxuY29uc3QgYmFzZUNTUyA9ICh7XG4gIGlzRm9jdXNlZCxcbiAgdGhlbWU6IHtcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gICAgY29sb3JzLFxuICB9LFxufTogSW5kaWNhdG9yUHJvcHMpID0+ICh7XG4gIGxhYmVsOiAnaW5kaWNhdG9yQ29udGFpbmVyJyxcbiAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICBkaXNwbGF5OiAnZmxleCcsXG4gIHBhZGRpbmc6IGJhc2VVbml0ICogMixcbiAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcblxuICAnOmhvdmVyJzoge1xuICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDgwIDogY29sb3JzLm5ldXRyYWw0MCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZHJvcGRvd25JbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IERyb3Bkb3duSW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnZHJvcGRvd24taW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8RG93bkNoZXZyb24gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xuZXhwb3J0IGNvbnN0IENsZWFySW5kaWNhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGN4LCBnZXRTdHlsZXMsIGlubmVyUHJvcHMgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2NsZWFySW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnY2xlYXItaW5kaWNhdG9yJzogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbiB8fCA8Q3Jvc3NJY29uIC8+fVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTZXBhcmF0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG50eXBlIFNlcGFyYXRvclN0YXRlID0geyBpc0Rpc2FibGVkOiBib29sZWFuIH07XG5cbmV4cG9ydCBjb25zdCBpbmRpY2F0b3JTZXBhcmF0b3JDU1MgPSAoe1xuICBpc0Rpc2FibGVkLFxuICB0aGVtZToge1xuICAgIHNwYWNpbmc6IHsgYmFzZVVuaXQgfSxcbiAgICBjb2xvcnMsXG4gIH0sXG59OiBDb21tb25Qcm9wcyAmIFNlcGFyYXRvclN0YXRlKSA9PiAoe1xuICBsYWJlbDogJ2luZGljYXRvclNlcGFyYXRvcicsXG4gIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgbWFyZ2luQm90dG9tOiBiYXNlVW5pdCAqIDIsXG4gIG1hcmdpblRvcDogYmFzZVVuaXQgKiAyLFxuICB3aWR0aDogMSxcbn0pO1xuXG5leHBvcnQgY29uc3QgSW5kaWNhdG9yU2VwYXJhdG9yID0gKHByb3BzOiBJbmRpY2F0b3JQcm9wcykgPT4ge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgY3gsIGdldFN0eWxlcywgaW5uZXJQcm9wcyB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPHNwYW5cbiAgICAgIHsuLi5pbm5lclByb3BzfVxuICAgICAgY3NzPXtnZXRTdHlsZXMoJ2luZGljYXRvclNlcGFyYXRvcicsIHByb3BzKX1cbiAgICAgIGNsYXNzTmFtZT17Y3goeyAnaW5kaWNhdG9yLXNlcGFyYXRvcic6IHRydWUgfSwgY2xhc3NOYW1lKX1cbiAgICAvPlxuICApO1xufTtcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMb2FkaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuY29uc3QgbG9hZGluZ0RvdEFuaW1hdGlvbnMgPSBrZXlmcmFtZXNgXG4gIDAlLCA4MCUsIDEwMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cbmA7XG5cbmV4cG9ydCBjb25zdCBsb2FkaW5nSW5kaWNhdG9yQ1NTID0gKHtcbiAgaXNGb2N1c2VkLFxuICBzaXplLFxuICB0aGVtZToge1xuICAgIGNvbG9ycyxcbiAgICBzcGFjaW5nOiB7IGJhc2VVbml0IH0sXG4gIH0sXG59OiB7XG4gIGlzRm9jdXNlZDogYm9vbGVhbixcbiAgc2l6ZTogbnVtYmVyLFxuICB0aGVtZTogVGhlbWUsXG59KSA9PiAoe1xuICBsYWJlbDogJ2xvYWRpbmdJbmRpY2F0b3InLFxuICBjb2xvcjogaXNGb2N1c2VkID8gY29sb3JzLm5ldXRyYWw2MCA6IGNvbG9ycy5uZXV0cmFsMjAsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgcGFkZGluZzogYmFzZVVuaXQgKiAyLFxuICB0cmFuc2l0aW9uOiAnY29sb3IgMTUwbXMnLFxuICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICBmb250U2l6ZTogc2l6ZSxcbiAgbGluZUhlaWdodDogMSxcbiAgbWFyZ2luUmlnaHQ6IHNpemUsXG4gIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxufSk7XG5cbnR5cGUgRG90UHJvcHMgPSB7IGRlbGF5OiBudW1iZXIsIG9mZnNldDogYm9vbGVhbiB9O1xuY29uc3QgTG9hZGluZ0RvdCA9ICh7IGRlbGF5LCBvZmZzZXQgfTogRG90UHJvcHMpID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGFuaW1hdGlvbjogYCR7bG9hZGluZ0RvdEFuaW1hdGlvbnN9IDFzIGVhc2UtaW4tb3V0ICR7ZGVsYXl9bXMgaW5maW5pdGU7YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2N1cnJlbnRDb2xvcicsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxZW0nLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBtYXJnaW5MZWZ0OiBvZmZzZXQgPyAnMWVtJyA6IG51bGwsXG4gICAgICBoZWlnaHQ6ICcxZW0nLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsXG4gICAgICB3aWR0aDogJzFlbScsXG4gICAgfX1cbiAgLz5cbik7XG5cbmV4cG9ydCB0eXBlIExvYWRpbmdJY29uUHJvcHMgPSB7XG4gIC8qKiBQcm9wcyB0aGF0IHdpbGwgYmUgcGFzc2VkIG9uIHRvIHRoZSBjaGlsZHJlbi4gKi9cbiAgaW5uZXJQcm9wczogYW55LFxuICAvKiogVGhlIGZvY3VzZWQgc3RhdGUgb2YgdGhlIHNlbGVjdC4gKi9cbiAgaXNGb2N1c2VkOiBib29sZWFuLFxuICAvKiogV2hldGhlciB0aGUgdGV4dCBpcyByaWdodCB0byBsZWZ0ICovXG4gIGlzUnRsOiBib29sZWFuLFxufSAmIENvbW1vblByb3BzICYge1xuICAgIC8qKiBTZXQgc2l6ZSBvZiB0aGUgY29udGFpbmVyLiAqL1xuICAgIHNpemU6IG51bWJlcixcbiAgfTtcbmV4cG9ydCBjb25zdCBMb2FkaW5nSW5kaWNhdG9yID0gKHByb3BzOiBMb2FkaW5nSWNvblByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lLCBjeCwgZ2V0U3R5bGVzLCBpbm5lclByb3BzLCBpc1J0bCB9ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICB7Li4uaW5uZXJQcm9wc31cbiAgICAgIGNzcz17Z2V0U3R5bGVzKCdsb2FkaW5nSW5kaWNhdG9yJywgcHJvcHMpfVxuICAgICAgY2xhc3NOYW1lPXtjeChcbiAgICAgICAge1xuICAgICAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICAgICAnbG9hZGluZy1pbmRpY2F0b3InOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgPlxuICAgICAgPExvYWRpbmdEb3QgZGVsYXk9ezB9IG9mZnNldD17aXNSdGx9IC8+XG4gICAgICA8TG9hZGluZ0RvdCBkZWxheT17MTYwfSBvZmZzZXQgLz5cbiAgICAgIDxMb2FkaW5nRG90IGRlbGF5PXszMjB9IG9mZnNldD17IWlzUnRsfSAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcbkxvYWRpbmdJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0geyBzaXplOiA0IH07XG4iXX0= */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
            <a
              className="quill-button fun outlined secondary focus-on-light"
              href="/cms/authors/new"
              target="_blank"
            >
              Create New Author
            </a>
          </div>
          <div>
            <label>
              Topic:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  Object {
                    "name": "What's new?",
                    "slug": "what%27s-new%3F",
                  },
                  Object {
                    "name": "Using quill for reading comprehension",
                    "slug": "using-quill-for-reading-comprehension",
                  },
                  Object {
                    "name": "Getting started",
                    "slug": "getting-started",
                  },
                  Object {
                    "name": "Best practices",
                    "slug": "best-practices",
                  },
                  Object {
                    "name": "Webinars",
                    "slug": "webinars",
                  },
                  Object {
                    "name": "Video tutorials",
                    "slug": "video-tutorials",
                  },
                  Object {
                    "name": "Teacher materials",
                    "slug": "teacher-materials",
                  },
                  Object {
                    "name": "Writing instruction research",
                    "slug": "writing-instruction-research",
                  },
                  Object {
                    "name": "Teacher stories",
                    "slug": "teacher-stories",
                  },
                  Object {
                    "name": "Case studies",
                    "slug": "case-studies",
                  },
                  Object {
                    "name": "Support",
                    "slug": "support",
                  },
                  Object {
                    "name": "Twitter love",
                    "slug": "twitter-love",
                  },
                  undefined,
                ]
              }
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": null,
                      "label": "What's new?",
                      "value": Object {
                        "name": "What's new?",
                        "slug": "what%27s-new%3F",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Using quill for reading comprehension",
                      "value": Object {
                        "name": "Using quill for reading comprehension",
                        "slug": "using-quill-for-reading-comprehension",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Getting started",
                      "value": Object {
                        "name": "Getting started",
                        "slug": "getting-started",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Best practices",
                      "value": Object {
                        "name": "Best practices",
                        "slug": "best-practices",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Webinars",
                      "value": Object {
                        "name": "Webinars",
                        "slug": "webinars",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Video tutorials",
                      "value": Object {
                        "name": "Video tutorials",
                        "slug": "video-tutorials",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Teacher materials",
                      "value": Object {
                        "name": "Teacher materials",
                        "slug": "teacher-materials",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Writing instruction research",
                      "value": Object {
                        "name": "Writing instruction research",
                        "slug": "writing-instruction-research",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Teacher stories",
                      "value": Object {
                        "name": "Teacher stories",
                        "slug": "teacher-stories",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Case studies",
                      "value": Object {
                        "name": "Case studies",
                        "slug": "case-studies",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Support",
                      "value": Object {
                        "name": "Support",
                        "slug": "support",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Twitter love",
                      "value": Object {
                        "name": "Twitter love",
                        "slug": "twitter-love",
                      },
                    },
                    undefined,
                  ]
                }
                value={
                  Object {
                    "id": null,
                    "label": "What's new?",
                    "value": Object {
                      "name": "What's new?",
                      "slug": "what%27s-new%3F",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "id": null,
                          "label": "What's new?",
                          "value": Object {
                            "name": "What's new?",
                            "slug": "what%27s-new%3F",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Using quill for reading comprehension",
                          "value": Object {
                            "name": "Using quill for reading comprehension",
                            "slug": "using-quill-for-reading-comprehension",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Getting started",
                          "value": Object {
                            "name": "Getting started",
                            "slug": "getting-started",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Best practices",
                          "value": Object {
                            "name": "Best practices",
                            "slug": "best-practices",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Webinars",
                          "value": Object {
                            "name": "Webinars",
                            "slug": "webinars",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Video tutorials",
                          "value": Object {
                            "name": "Video tutorials",
                            "slug": "video-tutorials",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Teacher materials",
                          "value": Object {
                            "name": "Teacher materials",
                            "slug": "teacher-materials",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Writing instruction research",
                          "value": Object {
                            "name": "Writing instruction research",
                            "slug": "writing-instruction-research",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Teacher stories",
                          "value": Object {
                            "name": "Teacher stories",
                            "slug": "teacher-stories",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Case studies",
                          "value": Object {
                            "name": "Case studies",
                            "slug": "case-studies",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Support",
                          "value": Object {
                            "name": "Support",
                            "slug": "support",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Twitter love",
                          "value": Object {
                            "name": "Twitter love",
                            "slug": "twitter-love",
                          },
                        },
                        undefined,
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "id": null,
                        "label": "What's new?",
                        "value": Object {
                          "name": "What's new?",
                          "slug": "what%27s-new%3F",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "id": null,
                            "label": "What's new?",
                            "value": Object {
                              "name": "What's new?",
                              "slug": "what%27s-new%3F",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Using quill for reading comprehension",
                            "value": Object {
                              "name": "Using quill for reading comprehension",
                              "slug": "using-quill-for-reading-comprehension",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Getting started",
                            "value": Object {
                              "name": "Getting started",
                              "slug": "getting-started",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Best practices",
                            "value": Object {
                              "name": "Best practices",
                              "slug": "best-practices",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Webinars",
                            "value": Object {
                              "name": "Webinars",
                              "slug": "webinars",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Video tutorials",
                            "value": Object {
                              "name": "Video tutorials",
                              "slug": "video-tutorials",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Teacher materials",
                            "value": Object {
                              "name": "Teacher materials",
                              "slug": "teacher-materials",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Writing instruction research",
                            "value": Object {
                              "name": "Writing instruction research",
                              "slug": "writing-instruction-research",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Teacher stories",
                            "value": Object {
                              "name": "Teacher stories",
                              "slug": "teacher-stories",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Case studies",
                            "value": Object {
                              "name": "Case studies",
                              "slug": "case-studies",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Support",
                            "value": Object {
                              "name": "Support",
                              "slug": "support",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Twitter love",
                            "value": Object {
                              "name": "Twitter love",
                              "slug": "twitter-love",
                            },
                          },
                          undefined,
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "id": null,
                          "label": "What's new?",
                          "value": Object {
                            "name": "What's new?",
                            "slug": "what%27s-new%3F",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "id": null,
                              "label": "What's new?",
                              "value": Object {
                                "name": "What's new?",
                                "slug": "what%27s-new%3F",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Using quill for reading comprehension",
                              "value": Object {
                                "name": "Using quill for reading comprehension",
                                "slug": "using-quill-for-reading-comprehension",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Getting started",
                              "value": Object {
                                "name": "Getting started",
                                "slug": "getting-started",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Best practices",
                              "value": Object {
                                "name": "Best practices",
                                "slug": "best-practices",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Webinars",
                              "value": Object {
                                "name": "Webinars",
                                "slug": "webinars",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Video tutorials",
                              "value": Object {
                                "name": "Video tutorials",
                                "slug": "video-tutorials",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Teacher materials",
                              "value": Object {
                                "name": "Teacher materials",
                                "slug": "teacher-materials",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Writing instruction research",
                              "value": Object {
                                "name": "Writing instruction research",
                                "slug": "writing-instruction-research",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Teacher stories",
                              "value": Object {
                                "name": "Teacher stories",
                                "slug": "teacher-stories",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Case studies",
                              "value": Object {
                                "name": "Case studies",
                                "slug": "case-studies",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Support",
                              "value": Object {
                                "name": "Support",
                                "slug": "support",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Twitter love",
                              "value": Object {
                                "name": "Twitter love",
                                "slug": "twitter-love",
                              },
                            },
                            undefined,
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "id": null,
                                "label": "What's new?",
                                "value": Object {
                                  "name": "What's new?",
                                  "slug": "what%27s-new%3F",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Using quill for reading comprehension",
                                "value": Object {
                                  "name": "Using quill for reading comprehension",
                                  "slug": "using-quill-for-reading-comprehension",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Getting started",
                                "value": Object {
                                  "name": "Getting started",
                                  "slug": "getting-started",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Best practices",
                                "value": Object {
                                  "name": "Best practices",
                                  "slug": "best-practices",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Webinars",
                                "value": Object {
                                  "name": "Webinars",
                                  "slug": "webinars",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Video tutorials",
                                "value": Object {
                                  "name": "Video tutorials",
                                  "slug": "video-tutorials",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Teacher materials",
                                "value": Object {
                                  "name": "Teacher materials",
                                  "slug": "teacher-materials",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Writing instruction research",
                                "value": Object {
                                  "name": "Writing instruction research",
                                  "slug": "writing-instruction-research",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Teacher stories",
                                "value": Object {
                                  "name": "Teacher stories",
                                  "slug": "teacher-stories",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Case studies",
                                "value": Object {
                                  "name": "Case studies",
                                  "slug": "case-studies",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Support",
                                "value": Object {
                                  "name": "Support",
                                  "slug": "support",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Twitter love",
                                "value": Object {
                                  "name": "Twitter love",
                                  "slug": "twitter-love",
                                },
                              },
                              undefined,
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "id": null,
                              "label": "What's new?",
                              "value": Object {
                                "name": "What's new?",
                                "slug": "what%27s-new%3F",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "id": null,
                                    "label": "What's new?",
                                    "value": Object {
                                      "name": "What's new?",
                                      "slug": "what%27s-new%3F",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Using quill for reading comprehension",
                                    "value": Object {
                                      "name": "Using quill for reading comprehension",
                                      "slug": "using-quill-for-reading-comprehension",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Getting started",
                                    "value": Object {
                                      "name": "Getting started",
                                      "slug": "getting-started",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Best practices",
                                    "value": Object {
                                      "name": "Best practices",
                                      "slug": "best-practices",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Webinars",
                                    "value": Object {
                                      "name": "Webinars",
                                      "slug": "webinars",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Video tutorials",
                                    "value": Object {
                                      "name": "Video tutorials",
                                      "slug": "video-tutorials",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Teacher materials",
                                    "value": Object {
                                      "name": "Teacher materials",
                                      "slug": "teacher-materials",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Writing instruction research",
                                    "value": Object {
                                      "name": "Writing instruction research",
                                      "slug": "writing-instruction-research",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Teacher stories",
                                    "value": Object {
                                      "name": "Teacher stories",
                                      "slug": "teacher-stories",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Case studies",
                                    "value": Object {
                                      "name": "Case studies",
                                      "slug": "case-studies",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Support",
                                    "value": Object {
                                      "name": "Support",
                                      "slug": "support",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Twitter love",
                                    "value": Object {
                                      "name": "Twitter love",
                                      "slug": "twitter-love",
                                    },
                                  },
                                  undefined,
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "id": null,
                                      "label": "What's new?",
                                      "value": Object {
                                        "name": "What's new?",
                                        "slug": "what%27s-new%3F",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Using quill for reading comprehension",
                                      "value": Object {
                                        "name": "Using quill for reading comprehension",
                                        "slug": "using-quill-for-reading-comprehension",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Getting started",
                                      "value": Object {
                                        "name": "Getting started",
                                        "slug": "getting-started",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Best practices",
                                      "value": Object {
                                        "name": "Best practices",
                                        "slug": "best-practices",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Webinars",
                                      "value": Object {
                                        "name": "Webinars",
                                        "slug": "webinars",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Video tutorials",
                                      "value": Object {
                                        "name": "Video tutorials",
                                        "slug": "video-tutorials",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Teacher materials",
                                      "value": Object {
                                        "name": "Teacher materials",
                                        "slug": "teacher-materials",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Writing instruction research",
                                      "value": Object {
                                        "name": "Writing instruction research",
                                        "slug": "writing-instruction-research",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Teacher stories",
                                      "value": Object {
                                        "name": "Teacher stories",
                                        "slug": "teacher-stories",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Case studies",
                                      "value": Object {
                                        "name": "Case studies",
                                        "slug": "case-studies",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Support",
                                      "value": Object {
                                        "name": "Support",
                                        "slug": "support",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Twitter love",
                                      "value": Object {
                                        "name": "Twitter love",
                                        "slug": "twitter-love",
                                      },
                                    },
                                    undefined,
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "id": null,
                                    "label": "What's new?",
                                    "value": Object {
                                      "name": "What's new?",
                                      "slug": "what%27s-new%3F",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Using quill for reading comprehension",
                                          "value": Object {
                                            "name": "Using quill for reading comprehension",
                                            "slug": "using-quill-for-reading-comprehension",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Getting started",
                                          "value": Object {
                                            "name": "Getting started",
                                            "slug": "getting-started",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Best practices",
                                          "value": Object {
                                            "name": "Best practices",
                                            "slug": "best-practices",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Webinars",
                                          "value": Object {
                                            "name": "Webinars",
                                            "slug": "webinars",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Video tutorials",
                                          "value": Object {
                                            "name": "Video tutorials",
                                            "slug": "video-tutorials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher materials",
                                          "value": Object {
                                            "name": "Teacher materials",
                                            "slug": "teacher-materials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Writing instruction research",
                                          "value": Object {
                                            "name": "Writing instruction research",
                                            "slug": "writing-instruction-research",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher stories",
                                          "value": Object {
                                            "name": "Teacher stories",
                                            "slug": "teacher-stories",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Case studies",
                                          "value": Object {
                                            "name": "Case studies",
                                            "slug": "case-studies",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Support",
                                          "value": Object {
                                            "name": "Support",
                                            "slug": "support",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Twitter love",
                                          "value": Object {
                                            "name": "Twitter love",
                                            "slug": "twitter-love",
                                          },
                                        },
                                        undefined,
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "What's new?",
                                            "value": Object {
                                              "name": "What's new?",
                                              "slug": "what%27s-new%3F",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Using quill for reading comprehension",
                                            "value": Object {
                                              "name": "Using quill for reading comprehension",
                                              "slug": "using-quill-for-reading-comprehension",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Getting started",
                                            "value": Object {
                                              "name": "Getting started",
                                              "slug": "getting-started",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Best practices",
                                            "value": Object {
                                              "name": "Best practices",
                                              "slug": "best-practices",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Webinars",
                                            "value": Object {
                                              "name": "Webinars",
                                              "slug": "webinars",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Video tutorials",
                                            "value": Object {
                                              "name": "Video tutorials",
                                              "slug": "video-tutorials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher materials",
                                            "value": Object {
                                              "name": "Teacher materials",
                                              "slug": "teacher-materials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Writing instruction research",
                                            "value": Object {
                                              "name": "Writing instruction research",
                                              "slug": "writing-instruction-research",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher stories",
                                            "value": Object {
                                              "name": "Teacher stories",
                                              "slug": "teacher-stories",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Case studies",
                                            "value": Object {
                                              "name": "Case studies",
                                              "slug": "case-studies",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Support",
                                            "value": Object {
                                              "name": "Support",
                                              "slug": "support",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Twitter love",
                                            "value": Object {
                                              "name": "Twitter love",
                                              "slug": "twitter-love",
                                            },
                                          },
                                          undefined,
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "id": null,
                                              "label": "What's new?",
                                              "value": Object {
                                                "name": "What's new?",
                                                "slug": "what%27s-new%3F",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              What's new?
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-3-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-3-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-3-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Using quill for reading comprehension",
                                          "value": Object {
                                            "name": "Using quill for reading comprehension",
                                            "slug": "using-quill-for-reading-comprehension",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Getting started",
                                          "value": Object {
                                            "name": "Getting started",
                                            "slug": "getting-started",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Best practices",
                                          "value": Object {
                                            "name": "Best practices",
                                            "slug": "best-practices",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Webinars",
                                          "value": Object {
                                            "name": "Webinars",
                                            "slug": "webinars",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Video tutorials",
                                          "value": Object {
                                            "name": "Video tutorials",
                                            "slug": "video-tutorials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher materials",
                                          "value": Object {
                                            "name": "Teacher materials",
                                            "slug": "teacher-materials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Writing instruction research",
                                          "value": Object {
                                            "name": "Writing instruction research",
                                            "slug": "writing-instruction-research",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher stories",
                                          "value": Object {
                                            "name": "Teacher stories",
                                            "slug": "teacher-stories",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Case studies",
                                          "value": Object {
                                            "name": "Case studies",
                                            "slug": "case-studies",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Support",
                                          "value": Object {
                                            "name": "Support",
                                            "slug": "support",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Twitter love",
                                          "value": Object {
                                            "name": "Twitter love",
                                            "slug": "twitter-love",
                                          },
                                        },
                                        undefined,
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "What's new?",
                                            "value": Object {
                                              "name": "What's new?",
                                              "slug": "what%27s-new%3F",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Using quill for reading comprehension",
                                            "value": Object {
                                              "name": "Using quill for reading comprehension",
                                              "slug": "using-quill-for-reading-comprehension",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Getting started",
                                            "value": Object {
                                              "name": "Getting started",
                                              "slug": "getting-started",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Best practices",
                                            "value": Object {
                                              "name": "Best practices",
                                              "slug": "best-practices",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Webinars",
                                            "value": Object {
                                              "name": "Webinars",
                                              "slug": "webinars",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Video tutorials",
                                            "value": Object {
                                              "name": "Video tutorials",
                                              "slug": "video-tutorials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher materials",
                                            "value": Object {
                                              "name": "Teacher materials",
                                              "slug": "teacher-materials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Writing instruction research",
                                            "value": Object {
                                              "name": "Writing instruction research",
                                              "slug": "writing-instruction-research",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher stories",
                                            "value": Object {
                                              "name": "Teacher stories",
                                              "slug": "teacher-stories",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Case studies",
                                            "value": Object {
                                              "name": "Case studies",
                                              "slug": "case-studies",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Support",
                                            "value": Object {
                                              "name": "Support",
                                              "slug": "support",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Twitter love",
                                            "value": Object {
                                              "name": "Twitter love",
                                              "slug": "twitter-love",
                                            },
                                          },
                                          undefined,
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
          </div>
        </div>
        <div
          className="short-fields"
        >
          <div
            className="preview-card-container"
          >
            <label>
              Preview Card Template:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  "Standard",
                  "Custom HTML",
                ]
              }
              selectedItem="Standard"
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Standard",
                      "value": Object {
                        "name": "Standard",
                      },
                    },
                    Object {
                      "label": "Custom HTML",
                      "value": Object {
                        "name": "Custom HTML",
                      },
                    },
                  ]
                }
                value={
                  Object {
                    "label": "Standard",
                    "value": Object {
                      "name": "Standard",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Standard",
                          "value": Object {
                            "name": "Standard",
                          },
                        },
                        Object {
                          "label": "Custom HTML",
                          "value": Object {
                            "name": "Custom HTML",
                          },
                        },
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "label": "Standard",
                        "value": Object {
                          "name": "Standard",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "label": "Standard",
                            "value": Object {
                              "name": "Standard",
                            },
                          },
                          Object {
                            "label": "Custom HTML",
                            "value": Object {
                              "name": "Custom HTML",
                            },
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "label": "Standard",
                          "value": Object {
                            "name": "Standard",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "label": "Standard",
                              "value": Object {
                                "name": "Standard",
                              },
                            },
                            Object {
                              "label": "Custom HTML",
                              "value": Object {
                                "name": "Custom HTML",
                              },
                            },
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "label": "Standard",
                                "value": Object {
                                  "name": "Standard",
                                },
                              },
                              Object {
                                "label": "Custom HTML",
                                "value": Object {
                                  "name": "Custom HTML",
                                },
                              },
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "label": "Standard",
                              "value": Object {
                                "name": "Standard",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "label": "Standard",
                                    "value": Object {
                                      "name": "Standard",
                                    },
                                  },
                                  Object {
                                    "label": "Custom HTML",
                                    "value": Object {
                                      "name": "Custom HTML",
                                    },
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "Standard",
                                      "value": Object {
                                        "name": "Standard",
                                      },
                                    },
                                    Object {
                                      "label": "Custom HTML",
                                      "value": Object {
                                        "name": "Custom HTML",
                                      },
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "label": "Standard",
                                    "value": Object {
                                      "name": "Standard",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                        Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "label": "Standard",
                                            "value": Object {
                                              "name": "Standard",
                                            },
                                          },
                                          Object {
                                            "label": "Custom HTML",
                                            "value": Object {
                                              "name": "Custom HTML",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "Standard",
                                              "value": Object {
                                                "name": "Standard",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              Standard
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-4-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-4-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-4-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                        Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "label": "Standard",
                                            "value": Object {
                                              "name": "Standard",
                                            },
                                          },
                                          Object {
                                            "label": "Custom HTML",
                                            "value": Object {
                                              "name": "Custom HTML",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
          </div>
          <div>
            <label>
              Published At Date:
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={false}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={
                <img
                  alt="dropdown indicator"
                  src="https://assets.quill.org/images/icons/dropdown.svg"
                  style={null}
                />
              }
              date={null}
              dayPickerNavigationInlineStyles={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date-picker"
              initialVisibleMonth={null}
              inputIconPosition="after"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext="âº"
              navPosition="navPositionTop"
              navPrev="â¹"
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "roleDescription": "datepicker",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              renderNavNextButton={null}
              renderNavPrevButton={null}
              renderWeekHeaderElement={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            >
              <WithStyles
                anchorDirection="left"
                appendToBody={false}
                block={false}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={
                  <img
                    alt="dropdown indicator"
                    src="https://assets.quill.org/images/icons/dropdown.svg"
                    style={null}
                  />
                }
                date={null}
                dayPickerNavigationInlineStyles={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                forwardedRef={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date-picker"
                initialVisibleMonth={null}
                inputIconPosition="after"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext="âº"
                navPosition="navPositionTop"
                navPrev="â¹"
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "roleDescription": "datepicker",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                renderNavNextButton={null}
                renderNavPrevButton={null}
                renderWeekHeaderElement={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              >
                <SingleDatePicker
                  anchorDirection="left"
                  appendToBody={false}
                  block={false}
                  calendarInfoPosition="bottom"
                  css={[Function]}
                  customCloseIcon={null}
                  customInputIcon={
                    <img
                      alt="dropdown indicator"
                      src="https://assets.quill.org/images/icons/dropdown.svg"
                      style={null}
                    />
                  }
                  date={null}
                  dayPickerNavigationInlineStyles={null}
                  daySize={39}
                  disableScroll={false}
                  disabled={false}
                  displayFormat={[Function]}
                  enableOutsideDays={false}
                  firstDayOfWeek={null}
                  focused={false}
                  hideKeyboardShortcutsPanel={false}
                  horizontalMargin={0}
                  horizontalMonthPadding={13}
                  id="date-picker"
                  initialVisibleMonth={null}
                  inputIconPosition="after"
                  isDayBlocked={[Function]}
                  isDayHighlighted={[Function]}
                  isOutsideRange={[Function]}
                  isRTL={false}
                  keepFocusOnInput={false}
                  keepOpenOnDateSelect={false}
                  monthFormat="MMMM YYYY"
                  navNext="âº"
                  navPosition="navPositionTop"
                  navPrev="â¹"
                  noBorder={false}
                  numberOfMonths={1}
                  onClose={[Function]}
                  onDateChange={[Function]}
                  onFocusChange={[Function]}
                  onNextMonthClick={[Function]}
                  onPrevMonthClick={[Function]}
                  openDirection="down"
                  orientation="horizontal"
                  phrases={
                    Object {
                      "calendarLabel": "Calendar",
                      "chooseAvailableDate": [Function],
                      "clearDate": "Clear Date",
                      "closeDatePicker": "Close",
                      "dateIsSelected": [Function],
                      "dateIsUnavailable": [Function],
                      "enterKey": "Enter key",
                      "escape": "Escape key",
                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                      "homeEnd": "Home and end keys",
                      "jumpToNextMonth": "Move forward to switch to the next month.",
                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                      "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardShortcuts": "Keyboard Shortcuts",
                      "leftArrowRightArrow": "Right and left arrow keys",
                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                      "moveFocusByOneMonth": "Switch months.",
                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                      "openThisPanel": "Open this panel.",
                      "pageUpPageDown": "page up and page down keys",
                      "questionMark": "Question mark",
                      "returnFocusToInput": "Return to the date input field.",
                      "roleDescription": "datepicker",
                      "selectFocusedDate": "Select the date in focus.",
                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                      "upArrowDownArrow": "up and down arrow keys",
                    }
                  }
                  placeholder="Date"
                  readOnly={false}
                  regular={false}
                  renderCalendarInfo={null}
                  renderDayContents={null}
                  renderMonthElement={null}
                  renderMonthText={null}
                  renderNavNextButton={null}
                  renderNavPrevButton={null}
                  renderWeekHeaderElement={null}
                  reopenPickerOnClearDate={false}
                  required={false}
                  screenReaderInputMessage=""
                  showClearDate={false}
                  showDefaultInputIcon={false}
                  small={false}
                  styles={
                    Object {
                      "SingleDatePicker": "SingleDatePicker",
                      "SingleDatePicker__block": "SingleDatePicker__block",
                      "SingleDatePicker_closeButton": "SingleDatePicker_closeButton",
                      "SingleDatePicker_closeButton_svg": "SingleDatePicker_closeButton_svg",
                      "SingleDatePicker_picker": "SingleDatePicker_picker",
                      "SingleDatePicker_picker__directionLeft": "SingleDatePicker_picker__directionLeft",
                      "SingleDatePicker_picker__directionRight": "SingleDatePicker_picker__directionRight",
                      "SingleDatePicker_picker__fullScreenPortal": "SingleDatePicker_picker__fullScreenPortal",
                      "SingleDatePicker_picker__portal": "SingleDatePicker_picker__portal",
                      "SingleDatePicker_picker__rtl": "SingleDatePicker_picker__rtl",
                    }
                  }
                  theme={
                    Object {
                      "reactDates": Object {
                        "border": Object {
                          "input": Object {
                            "border": 0,
                            "borderBottom": "2px solid transparent",
                            "borderBottomFocused": "2px solid #008489",
                            "borderFocused": 0,
                            "borderLeft": 0,
                            "borderLeftFocused": 0,
                            "borderRadius": 0,
                            "borderRight": 0,
                            "borderRightFocused": 0,
                            "borderTop": 0,
                            "borderTopFocused": 0,
                            "outlineFocused": 0,
                          },
                          "pickerInput": Object {
                            "borderRadius": 2,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                          },
                        },
                        "color": Object {
                          "background": "#fff",
                          "backgroundDark": "#f2f2f2",
                          "backgroundFocused": "#fff",
                          "blocked_calendar": Object {
                            "backgroundColor": "#cacccd",
                            "backgroundColor_active": "#cacccd",
                            "backgroundColor_hover": "#cacccd",
                            "borderColor": "#cacccd",
                            "borderColor_active": "#cacccd",
                            "borderColor_hover": "#cacccd",
                            "color": "#82888a",
                            "color_active": "#82888a",
                            "color_hover": "#82888a",
                          },
                          "blocked_out_of_range": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "borderColor": "#e4e7e7",
                            "borderColor_active": "#e4e7e7",
                            "borderColor_hover": "#e4e7e7",
                            "color": "#cacccd",
                            "color_active": "#cacccd",
                            "color_hover": "#cacccd",
                          },
                          "border": "rgb(219, 219, 219)",
                          "core": Object {
                            "border": "#dbdbdb",
                            "borderBright": "#f4f5f5",
                            "borderLight": "#e4e7e7",
                            "borderLighter": "#eceeee",
                            "borderMedium": "#c4c4c4",
                            "gray": "#484848",
                            "grayLight": "#82888a",
                            "grayLighter": "#cacccd",
                            "grayLightest": "#f2f2f2",
                            "primary": "#00a699",
                            "primaryShade_1": "#33dacd",
                            "primaryShade_2": "#66e2da",
                            "primaryShade_3": "#80e8e0",
                            "primaryShade_4": "#b2f1ec",
                            "primary_dark": "#008489",
                            "secondary": "#007a87",
                            "white": "#fff",
                            "yellow": "#ffe8bc",
                            "yellow_dark": "#ffce71",
                          },
                          "disabled": "#f2f2f2",
                          "highlighted": Object {
                            "backgroundColor": "#ffe8bc",
                            "backgroundColor_active": "#ffce71",
                            "backgroundColor_hover": "#ffce71",
                            "color": "#484848",
                            "color_active": "#484848",
                            "color_hover": "#484848",
                          },
                          "hoveredSpan": Object {
                            "backgroundColor": "#b2f1ec",
                            "backgroundColor_active": "#80e8e0",
                            "backgroundColor_hover": "#b2f1ec",
                            "borderColor": "#80e8e0",
                            "borderColor_active": "#80e8e0",
                            "borderColor_hover": "#80e8e0",
                            "color": "#007a87",
                            "color_active": "#007a87",
                            "color_hover": "#007a87",
                          },
                          "minimumNights": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "borderColor": "#eceeee",
                            "color": "#cacccd",
                            "color_active": "#cacccd",
                            "color_hover": "#cacccd",
                          },
                          "outside": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "color": "#484848",
                            "color_active": "#484848",
                            "color_hover": "#484848",
                          },
                          "placeholderText": "#757575",
                          "selected": Object {
                            "backgroundColor": "#00a699",
                            "backgroundColor_active": "#00a699",
                            "backgroundColor_hover": "#00a699",
                            "borderColor": "#00a699",
                            "borderColor_active": "#00a699",
                            "borderColor_hover": "#00a699",
                            "color": "#fff",
                            "color_active": "#fff",
                            "color_hover": "#fff",
                          },
                          "selectedSpan": Object {
                            "backgroundColor": "#66e2da",
                            "backgroundColor_active": "#33dacd",
                            "backgroundColor_hover": "#33dacd",
                            "borderColor": "#33dacd",
                            "borderColor_active": "#00a699",
                            "borderColor_hover": "#00a699",
                            "color": "#fff",
                            "color_active": "#fff",
                            "color_hover": "#fff",
                          },
                          "text": "#484848",
                          "textDisabled": "#dbdbdb",
                          "textFocused": "#007a87",
                        },
                        "font": Object {
                          "captionSize": 18,
                          "input": Object {
                            "letterSpacing_small": "0.2px",
                            "lineHeight": "24px",
                            "lineHeight_small": "18px",
                            "size": 19,
                            "size_small": 15,
                            "styleDisabled": "italic",
                            "weight": 200,
                          },
                          "size": 14,
                        },
                        "noScrollBarOnVerticalScrollable": false,
                        "sizing": Object {
                          "arrowWidth": 24,
                          "inputWidth": 130,
                          "inputWidth_small": 97,
                        },
                        "spacing": Object {
                          "captionPaddingBottom": 37,
                          "captionPaddingTop": 22,
                          "dayPickerHorizontalPadding": 9,
                          "displayTextPaddingBottom": 9,
                          "displayTextPaddingBottom_small": 5,
                          "displayTextPaddingHorizontal": undefined,
                          "displayTextPaddingHorizontal_small": undefined,
                          "displayTextPaddingLeft": 11,
                          "displayTextPaddingLeft_small": 7,
                          "displayTextPaddingRight": 11,
                          "displayTextPaddingRight_small": 7,
                          "displayTextPaddingTop": 11,
                          "displayTextPaddingTop_small": 7,
                          "displayTextPaddingVertical": undefined,
                          "displayTextPaddingVertical_small": undefined,
                          "inputPadding": 0,
                        },
                        "zIndex": 0,
                      },
                    }
                  }
                  verticalHeight={null}
                  verticalSpacing={22}
                  weekDayFormat="dd"
                  withFullScreenPortal={false}
                  withPortal={false}
                >
                  <div
                    className="SingleDatePicker SingleDatePicker_1"
                  >
                    <OutsideClickHandler
                      disabled={false}
                      display="block"
                      onOutsideClick={[Function]}
                      useCapture={true}
                    >
                      <div>
                        <SingleDatePickerInputController
                          block={false}
                          customCloseIcon={null}
                          customInputIcon={
                            <img
                              alt="dropdown indicator"
                              src="https://assets.quill.org/images/icons/dropdown.svg"
                              style={null}
                            />
                          }
                          date={null}
                          disabled={false}
                          displayFormat={[Function]}
                          focused={false}
                          id="date-picker"
                          inputIconPosition="after"
                          isFocused={false}
                          isOutsideRange={[Function]}
                          isRTL={false}
                          keepOpenOnDateSelect={false}
                          noBorder={false}
                          onClose={[Function]}
                          onDateChange={[Function]}
                          onFocusChange={[Function]}
                          onKeyDownArrowDown={[Function]}
                          onKeyDownQuestionMark={[Function]}
                          openDirection="down"
                          phrases={
                            Object {
                              "calendarLabel": "Calendar",
                              "chooseAvailableDate": [Function],
                              "clearDate": "Clear Date",
                              "closeDatePicker": "Close",
                              "dateIsSelected": [Function],
                              "dateIsUnavailable": [Function],
                              "enterKey": "Enter key",
                              "escape": "Escape key",
                              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                              "homeEnd": "Home and end keys",
                              "jumpToNextMonth": "Move forward to switch to the next month.",
                              "jumpToPrevMonth": "Move backward to switch to the previous month.",
                              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                              "keyboardShortcuts": "Keyboard Shortcuts",
                              "leftArrowRightArrow": "Right and left arrow keys",
                              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                              "moveFocusByOneMonth": "Switch months.",
                              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                              "openThisPanel": "Open this panel.",
                              "pageUpPageDown": "page up and page down keys",
                              "questionMark": "Question mark",
                              "returnFocusToInput": "Return to the date input field.",
                              "roleDescription": "datepicker",
                              "selectFocusedDate": "Select the date in focus.",
                              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                              "upArrowDownArrow": "up and down arrow keys",
                            }
                          }
                          placeholder="Date"
                          readOnly={false}
                          regular={false}
                          reopenPickerOnClearDate={false}
                          required={false}
                          screenReaderMessage=""
                          showCaret={true}
                          showClearDate={false}
                          showDefaultInputIcon={false}
                          small={false}
                          verticalSpacing={22}
                        >
                          <withStyles(SingleDatePickerInput)
                            block={false}
                            customCloseIcon={null}
                            customInputIcon={
                              <img
                                alt="dropdown indicator"
                                src="https://assets.quill.org/images/icons/dropdown.svg"
                                style={null}
                              />
                            }
                            disabled={false}
                            displayValue={null}
                            focused={false}
                            id="date-picker"
                            inputIconPosition="after"
                            isFocused={false}
                            isRTL={false}
                            noBorder={false}
                            onChange={[Function]}
                            onClearDate={[Function]}
                            onFocus={[Function]}
                            onKeyDownArrowDown={[Function]}
                            onKeyDownQuestionMark={[Function]}
                            onKeyDownShiftTab={[Function]}
                            onKeyDownTab={[Function]}
                            openDirection="down"
                            phrases={
                              Object {
                                "calendarLabel": "Calendar",
                                "chooseAvailableDate": [Function],
                                "clearDate": "Clear Date",
                                "closeDatePicker": "Close",
                                "dateIsSelected": [Function],
                                "dateIsUnavailable": [Function],
                                "enterKey": "Enter key",
                                "escape": "Escape key",
                                "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                "homeEnd": "Home and end keys",
                                "jumpToNextMonth": "Move forward to switch to the next month.",
                                "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardShortcuts": "Keyboard Shortcuts",
                                "leftArrowRightArrow": "Right and left arrow keys",
                                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                "moveFocusByOneMonth": "Switch months.",
                                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                "openThisPanel": "Open this panel.",
                                "pageUpPageDown": "page up and page down keys",
                                "questionMark": "Question mark",
                                "returnFocusToInput": "Return to the date input field.",
                                "roleDescription": "datepicker",
                                "selectFocusedDate": "Select the date in focus.",
                                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                "upArrowDownArrow": "up and down arrow keys",
                              }
                            }
                            placeholder="Date"
                            readOnly={false}
                            regular={false}
                            required={false}
                            screenReaderMessage=""
                            showCaret={true}
                            showClearDate={false}
                            showDefaultInputIcon={false}
                            small={false}
                            verticalSpacing={22}
                          >
                            <WithStyles
                              block={false}
                              customCloseIcon={null}
                              customInputIcon={
                                <img
                                  alt="dropdown indicator"
                                  src="https://assets.quill.org/images/icons/dropdown.svg"
                                  style={null}
                                />
                              }
                              disabled={false}
                              displayValue={null}
                              focused={false}
                              forwardedRef={null}
                              id="date-picker"
                              inputIconPosition="after"
                              isFocused={false}
                              isRTL={false}
                              noBorder={false}
                              onChange={[Function]}
                              onClearDate={[Function]}
                              onFocus={[Function]}
                              onKeyDownArrowDown={[Function]}
                              onKeyDownQuestionMark={[Function]}
                              onKeyDownShiftTab={[Function]}
                              onKeyDownTab={[Function]}
                              openDirection="down"
                              phrases={
                                Object {
                                  "calendarLabel": "Calendar",
                                  "chooseAvailableDate": [Function],
                                  "clearDate": "Clear Date",
                                  "closeDatePicker": "Close",
                                  "dateIsSelected": [Function],
                                  "dateIsUnavailable": [Function],
                                  "enterKey": "Enter key",
                                  "escape": "Escape key",
                                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                  "homeEnd": "Home and end keys",
                                  "jumpToNextMonth": "Move forward to switch to the next month.",
                                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                  "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardShortcuts": "Keyboard Shortcuts",
                                  "leftArrowRightArrow": "Right and left arrow keys",
                                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                  "moveFocusByOneMonth": "Switch months.",
                                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                  "openThisPanel": "Open this panel.",
                                  "pageUpPageDown": "page up and page down keys",
                                  "questionMark": "Question mark",
                                  "returnFocusToInput": "Return to the date input field.",
                                  "roleDescription": "datepicker",
                                  "selectFocusedDate": "Select the date in focus.",
                                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                  "upArrowDownArrow": "up and down arrow keys",
                                }
                              }
                              placeholder="Date"
                              readOnly={false}
                              regular={false}
                              required={false}
                              screenReaderMessage=""
                              showCaret={true}
                              showClearDate={false}
                              showDefaultInputIcon={false}
                              small={false}
                              verticalSpacing={22}
                            >
                              <SingleDatePickerInput
                                block={false}
                                css={[Function]}
                                customCloseIcon={null}
                                customInputIcon={
                                  <img
                                    alt="dropdown indicator"
                                    src="https://assets.quill.org/images/icons/dropdown.svg"
                                    style={null}
                                  />
                                }
                                disabled={false}
                                displayValue={null}
                                focused={false}
                                id="date-picker"
                                inputIconPosition="after"
                                isFocused={false}
                                isRTL={false}
                                noBorder={false}
                                onChange={[Function]}
                                onClearDate={[Function]}
                                onFocus={[Function]}
                                onKeyDownArrowDown={[Function]}
                                onKeyDownQuestionMark={[Function]}
                                onKeyDownShiftTab={[Function]}
                                onKeyDownTab={[Function]}
                                openDirection="down"
                                phrases={
                                  Object {
                                    "calendarLabel": "Calendar",
                                    "chooseAvailableDate": [Function],
                                    "clearDate": "Clear Date",
                                    "closeDatePicker": "Close",
                                    "dateIsSelected": [Function],
                                    "dateIsUnavailable": [Function],
                                    "enterKey": "Enter key",
                                    "escape": "Escape key",
                                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                    "homeEnd": "Home and end keys",
                                    "jumpToNextMonth": "Move forward to switch to the next month.",
                                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                    "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardShortcuts": "Keyboard Shortcuts",
                                    "leftArrowRightArrow": "Right and left arrow keys",
                                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                    "moveFocusByOneMonth": "Switch months.",
                                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                    "openThisPanel": "Open this panel.",
                                    "pageUpPageDown": "page up and page down keys",
                                    "questionMark": "Question mark",
                                    "returnFocusToInput": "Return to the date input field.",
                                    "roleDescription": "datepicker",
                                    "selectFocusedDate": "Select the date in focus.",
                                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                    "upArrowDownArrow": "up and down arrow keys",
                                  }
                                }
                                placeholder="Date"
                                readOnly={false}
                                regular={false}
                                required={false}
                                screenReaderMessage=""
                                showCaret={true}
                                showClearDate={false}
                                showDefaultInputIcon={false}
                                small={false}
                                styles={
                                  Object {
                                    "SingleDatePickerInput": "SingleDatePickerInput",
                                    "SingleDatePickerInput__block": "SingleDatePickerInput__block",
                                    "SingleDatePickerInput__disabled": "SingleDatePickerInput__disabled",
                                    "SingleDatePickerInput__rtl": "SingleDatePickerInput__rtl",
                                    "SingleDatePickerInput__showClearDate": "SingleDatePickerInput__showClearDate",
                                    "SingleDatePickerInput__withBorder": "SingleDatePickerInput__withBorder",
                                    "SingleDatePickerInput_calendarIcon": "SingleDatePickerInput_calendarIcon",
                                    "SingleDatePickerInput_calendarIcon_svg": "SingleDatePickerInput_calendarIcon_svg",
                                    "SingleDatePickerInput_clearDate": "SingleDatePickerInput_clearDate",
                                    "SingleDatePickerInput_clearDate__default": "SingleDatePickerInput_clearDate__default",
                                    "SingleDatePickerInput_clearDate__hide": "SingleDatePickerInput_clearDate__hide",
                                    "SingleDatePickerInput_clearDate__small": "SingleDatePickerInput_clearDate__small",
                                    "SingleDatePickerInput_clearDate_svg": "SingleDatePickerInput_clearDate_svg",
                                    "SingleDatePickerInput_clearDate_svg__small": "SingleDatePickerInput_clearDate_svg__small",
                                  }
                                }
                                theme={
                                  Object {
                                    "reactDates": Object {
                                      "border": Object {
                                        "input": Object {
                                          "border": 0,
                                          "borderBottom": "2px solid transparent",
                                          "borderBottomFocused": "2px solid #008489",
                                          "borderFocused": 0,
                                          "borderLeft": 0,
                                          "borderLeftFocused": 0,
                                          "borderRadius": 0,
                                          "borderRight": 0,
                                          "borderRightFocused": 0,
                                          "borderTop": 0,
                                          "borderTopFocused": 0,
                                          "outlineFocused": 0,
                                        },
                                        "pickerInput": Object {
                                          "borderRadius": 2,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                        },
                                      },
                                      "color": Object {
                                        "background": "#fff",
                                        "backgroundDark": "#f2f2f2",
                                        "backgroundFocused": "#fff",
                                        "blocked_calendar": Object {
                                          "backgroundColor": "#cacccd",
                                          "backgroundColor_active": "#cacccd",
                                          "backgroundColor_hover": "#cacccd",
                                          "borderColor": "#cacccd",
                                          "borderColor_active": "#cacccd",
                                          "borderColor_hover": "#cacccd",
                                          "color": "#82888a",
                                          "color_active": "#82888a",
                                          "color_hover": "#82888a",
                                        },
                                        "blocked_out_of_range": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#e4e7e7",
                                          "borderColor_active": "#e4e7e7",
                                          "borderColor_hover": "#e4e7e7",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "border": "rgb(219, 219, 219)",
                                        "core": Object {
                                          "border": "#dbdbdb",
                                          "borderBright": "#f4f5f5",
                                          "borderLight": "#e4e7e7",
                                          "borderLighter": "#eceeee",
                                          "borderMedium": "#c4c4c4",
                                          "gray": "#484848",
                                          "grayLight": "#82888a",
                                          "grayLighter": "#cacccd",
                                          "grayLightest": "#f2f2f2",
                                          "primary": "#00a699",
                                          "primaryShade_1": "#33dacd",
                                          "primaryShade_2": "#66e2da",
                                          "primaryShade_3": "#80e8e0",
                                          "primaryShade_4": "#b2f1ec",
                                          "primary_dark": "#008489",
                                          "secondary": "#007a87",
                                          "white": "#fff",
                                          "yellow": "#ffe8bc",
                                          "yellow_dark": "#ffce71",
                                        },
                                        "disabled": "#f2f2f2",
                                        "highlighted": Object {
                                          "backgroundColor": "#ffe8bc",
                                          "backgroundColor_active": "#ffce71",
                                          "backgroundColor_hover": "#ffce71",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "hoveredSpan": Object {
                                          "backgroundColor": "#b2f1ec",
                                          "backgroundColor_active": "#80e8e0",
                                          "backgroundColor_hover": "#b2f1ec",
                                          "borderColor": "#80e8e0",
                                          "borderColor_active": "#80e8e0",
                                          "borderColor_hover": "#80e8e0",
                                          "color": "#007a87",
                                          "color_active": "#007a87",
                                          "color_hover": "#007a87",
                                        },
                                        "minimumNights": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#eceeee",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "outside": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "placeholderText": "#757575",
                                        "selected": Object {
                                          "backgroundColor": "#00a699",
                                          "backgroundColor_active": "#00a699",
                                          "backgroundColor_hover": "#00a699",
                                          "borderColor": "#00a699",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "selectedSpan": Object {
                                          "backgroundColor": "#66e2da",
                                          "backgroundColor_active": "#33dacd",
                                          "backgroundColor_hover": "#33dacd",
                                          "borderColor": "#33dacd",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "text": "#484848",
                                        "textDisabled": "#dbdbdb",
                                        "textFocused": "#007a87",
                                      },
                                      "font": Object {
                                        "captionSize": 18,
                                        "input": Object {
                                          "letterSpacing_small": "0.2px",
                                          "lineHeight": "24px",
                                          "lineHeight_small": "18px",
                                          "size": 19,
                                          "size_small": 15,
                                          "styleDisabled": "italic",
                                          "weight": 200,
                                        },
                                        "size": 14,
                                      },
                                      "noScrollBarOnVerticalScrollable": false,
                                      "sizing": Object {
                                        "arrowWidth": 24,
                                        "inputWidth": 130,
                                        "inputWidth_small": 97,
                                      },
                                      "spacing": Object {
                                        "captionPaddingBottom": 37,
                                        "captionPaddingTop": 22,
                                        "dayPickerHorizontalPadding": 9,
                                        "displayTextPaddingBottom": 9,
                                        "displayTextPaddingBottom_small": 5,
                                        "displayTextPaddingHorizontal": undefined,
                                        "displayTextPaddingHorizontal_small": undefined,
                                        "displayTextPaddingLeft": 11,
                                        "displayTextPaddingLeft_small": 7,
                                        "displayTextPaddingRight": 11,
                                        "displayTextPaddingRight_small": 7,
                                        "displayTextPaddingTop": 11,
                                        "displayTextPaddingTop_small": 7,
                                        "displayTextPaddingVertical": undefined,
                                        "displayTextPaddingVertical_small": undefined,
                                        "inputPadding": 0,
                                      },
                                      "zIndex": 0,
                                    },
                                  }
                                }
                                verticalSpacing={22}
                              >
                                <div
                                  className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__withBorder SingleDatePickerInput__withBorder_2"
                                >
                                  <withStyles(DateInput)
                                    block={false}
                                    disabled={false}
                                    displayValue={null}
                                    focused={false}
                                    id="date-picker"
                                    isFocused={false}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDownArrowDown={[Function]}
                                    onKeyDownQuestionMark={[Function]}
                                    onKeyDownShiftTab={[Function]}
                                    onKeyDownTab={[Function]}
                                    openDirection="down"
                                    placeholder="Date"
                                    readOnly={false}
                                    regular={false}
                                    required={false}
                                    screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                    showCaret={true}
                                    small={false}
                                    verticalSpacing={22}
                                  >
                                    <WithStyles
                                      block={false}
                                      disabled={false}
                                      displayValue={null}
                                      focused={false}
                                      forwardedRef={null}
                                      id="date-picker"
                                      isFocused={false}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDownArrowDown={[Function]}
                                      onKeyDownQuestionMark={[Function]}
                                      onKeyDownShiftTab={[Function]}
                                      onKeyDownTab={[Function]}
                                      openDirection="down"
                                      placeholder="Date"
                                      readOnly={false}
                                      regular={false}
                                      required={false}
                                      screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                      showCaret={true}
                                      small={false}
                                      verticalSpacing={22}
                                    >
                                      <DateInput
                                        block={false}
                                        css={[Function]}
                                        disabled={false}
                                        displayValue={null}
                                        focused={false}
                                        id="date-picker"
                                        isFocused={false}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDownArrowDown={[Function]}
                                        onKeyDownQuestionMark={[Function]}
                                        onKeyDownShiftTab={[Function]}
                                        onKeyDownTab={[Function]}
                                        openDirection="down"
                                        placeholder="Date"
                                        readOnly={false}
                                        regular={false}
                                        required={false}
                                        screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                        showCaret={true}
                                        small={false}
                                        styles={
                                          Object {
                                            "DateInput": "DateInput",
                                            "DateInput__block": "DateInput__block",
                                            "DateInput__disabled": "DateInput__disabled",
                                            "DateInput__small": "DateInput__small",
                                            "DateInput_fang": "DateInput_fang",
                                            "DateInput_fangShape": "DateInput_fangShape",
                                            "DateInput_fangStroke": "DateInput_fangStroke",
                                            "DateInput_input": "DateInput_input",
                                            "DateInput_input__disabled": "DateInput_input__disabled",
                                            "DateInput_input__focused": "DateInput_input__focused",
                                            "DateInput_input__readOnly": "DateInput_input__readOnly",
                                            "DateInput_input__regular": "DateInput_input__regular",
                                            "DateInput_input__small": "DateInput_input__small",
                                            "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                          }
                                        }
                                        theme={
                                          Object {
                                            "reactDates": Object {
                                              "border": Object {
                                                "input": Object {
                                                  "border": 0,
                                                  "borderBottom": "2px solid transparent",
                                                  "borderBottomFocused": "2px solid #008489",
                                                  "borderFocused": 0,
                                                  "borderLeft": 0,
                                                  "borderLeftFocused": 0,
                                                  "borderRadius": 0,
                                                  "borderRight": 0,
                                                  "borderRightFocused": 0,
                                                  "borderTop": 0,
                                                  "borderTopFocused": 0,
                                                  "outlineFocused": 0,
                                                },
                                                "pickerInput": Object {
                                                  "borderRadius": 2,
                                                  "borderStyle": "solid",
                                                  "borderWidth": 1,
                                                },
                                              },
                                              "color": Object {
                                                "background": "#fff",
                                                "backgroundDark": "#f2f2f2",
                                                "backgroundFocused": "#fff",
                                                "blocked_calendar": Object {
                                                  "backgroundColor": "#cacccd",
                                                  "backgroundColor_active": "#cacccd",
                                                  "backgroundColor_hover": "#cacccd",
                                                  "borderColor": "#cacccd",
                                                  "borderColor_active": "#cacccd",
                                                  "borderColor_hover": "#cacccd",
                                                  "color": "#82888a",
                                                  "color_active": "#82888a",
                                                  "color_hover": "#82888a",
                                                },
                                                "blocked_out_of_range": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "borderColor": "#e4e7e7",
                                                  "borderColor_active": "#e4e7e7",
                                                  "borderColor_hover": "#e4e7e7",
                                                  "color": "#cacccd",
                                                  "color_active": "#cacccd",
                                                  "color_hover": "#cacccd",
                                                },
                                                "border": "rgb(219, 219, 219)",
                                                "core": Object {
                                                  "border": "#dbdbdb",
                                                  "borderBright": "#f4f5f5",
                                                  "borderLight": "#e4e7e7",
                                                  "borderLighter": "#eceeee",
                                                  "borderMedium": "#c4c4c4",
                                                  "gray": "#484848",
                                                  "grayLight": "#82888a",
                                                  "grayLighter": "#cacccd",
                                                  "grayLightest": "#f2f2f2",
                                                  "primary": "#00a699",
                                                  "primaryShade_1": "#33dacd",
                                                  "primaryShade_2": "#66e2da",
                                                  "primaryShade_3": "#80e8e0",
                                                  "primaryShade_4": "#b2f1ec",
                                                  "primary_dark": "#008489",
                                                  "secondary": "#007a87",
                                                  "white": "#fff",
                                                  "yellow": "#ffe8bc",
                                                  "yellow_dark": "#ffce71",
                                                },
                                                "disabled": "#f2f2f2",
                                                "highlighted": Object {
                                                  "backgroundColor": "#ffe8bc",
                                                  "backgroundColor_active": "#ffce71",
                                                  "backgroundColor_hover": "#ffce71",
                                                  "color": "#484848",
                                                  "color_active": "#484848",
                                                  "color_hover": "#484848",
                                                },
                                                "hoveredSpan": Object {
                                                  "backgroundColor": "#b2f1ec",
                                                  "backgroundColor_active": "#80e8e0",
                                                  "backgroundColor_hover": "#b2f1ec",
                                                  "borderColor": "#80e8e0",
                                                  "borderColor_active": "#80e8e0",
                                                  "borderColor_hover": "#80e8e0",
                                                  "color": "#007a87",
                                                  "color_active": "#007a87",
                                                  "color_hover": "#007a87",
                                                },
                                                "minimumNights": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "borderColor": "#eceeee",
                                                  "color": "#cacccd",
                                                  "color_active": "#cacccd",
                                                  "color_hover": "#cacccd",
                                                },
                                                "outside": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "color": "#484848",
                                                  "color_active": "#484848",
                                                  "color_hover": "#484848",
                                                },
                                                "placeholderText": "#757575",
                                                "selected": Object {
                                                  "backgroundColor": "#00a699",
                                                  "backgroundColor_active": "#00a699",
                                                  "backgroundColor_hover": "#00a699",
                                                  "borderColor": "#00a699",
                                                  "borderColor_active": "#00a699",
                                                  "borderColor_hover": "#00a699",
                                                  "color": "#fff",
                                                  "color_active": "#fff",
                                                  "color_hover": "#fff",
                                                },
                                                "selectedSpan": Object {
                                                  "backgroundColor": "#66e2da",
                                                  "backgroundColor_active": "#33dacd",
                                                  "backgroundColor_hover": "#33dacd",
                                                  "borderColor": "#33dacd",
                                                  "borderColor_active": "#00a699",
                                                  "borderColor_hover": "#00a699",
                                                  "color": "#fff",
                                                  "color_active": "#fff",
                                                  "color_hover": "#fff",
                                                },
                                                "text": "#484848",
                                                "textDisabled": "#dbdbdb",
                                                "textFocused": "#007a87",
                                              },
                                              "font": Object {
                                                "captionSize": 18,
                                                "input": Object {
                                                  "letterSpacing_small": "0.2px",
                                                  "lineHeight": "24px",
                                                  "lineHeight_small": "18px",
                                                  "size": 19,
                                                  "size_small": 15,
                                                  "styleDisabled": "italic",
                                                  "weight": 200,
                                                },
                                                "size": 14,
                                              },
                                              "noScrollBarOnVerticalScrollable": false,
                                              "sizing": Object {
                                                "arrowWidth": 24,
                                                "inputWidth": 130,
                                                "inputWidth_small": 97,
                                              },
                                              "spacing": Object {
                                                "captionPaddingBottom": 37,
                                                "captionPaddingTop": 22,
                                                "dayPickerHorizontalPadding": 9,
                                                "displayTextPaddingBottom": 9,
                                                "displayTextPaddingBottom_small": 5,
                                                "displayTextPaddingHorizontal": undefined,
                                                "displayTextPaddingHorizontal_small": undefined,
                                                "displayTextPaddingLeft": 11,
                                                "displayTextPaddingLeft_small": 7,
                                                "displayTextPaddingRight": 11,
                                                "displayTextPaddingRight_small": 7,
                                                "displayTextPaddingTop": 11,
                                                "displayTextPaddingTop_small": 7,
                                                "displayTextPaddingVertical": undefined,
                                                "displayTextPaddingVertical_small": undefined,
                                                "inputPadding": 0,
                                              },
                                              "zIndex": 0,
                                            },
                                          }
                                        }
                                        verticalSpacing={22}
                                      >
                                        <div
                                          className="DateInput DateInput_1"
                                        >
                                          <input
                                            aria-describedby="DateInput__screen-reader-message-date-picker"
                                            aria-label="Date"
                                            autoComplete="off"
                                            className="DateInput_input DateInput_input_1"
                                            disabled={false}
                                            id="date-picker"
                                            name="date-picker"
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Date"
                                            readOnly={false}
                                            required={false}
                                            type="text"
                                            value=""
                                          />
                                          <p
                                            className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                            id="DateInput__screen-reader-message-date-picker"
                                          >
                                            Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                          </p>
                                        </div>
                                      </DateInput>
                                    </WithStyles>
                                  </withStyles(DateInput)>
                                  <button
                                    className="SingleDatePickerInput_calendarIcon SingleDatePickerInput_calendarIcon_1"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <img
                                      alt="dropdown indicator"
                                      src="https://assets.quill.org/images/icons/dropdown.svg"
                                      style={null}
                                    />
                                  </button>
                                </div>
                              </SingleDatePickerInput>
                            </WithStyles>
                          </withStyles(SingleDatePickerInput)>
                        </SingleDatePickerInputController>
                      </div>
                    </OutsideClickHandler>
                  </div>
                </SingleDatePicker>
              </WithStyles>
            </withStyles(SingleDatePicker)>
          </div>
        </div>
        <div>
          <label>
            External Link: (Optional, use only if this card should point to another website)
          </label>
          <input
            onChange={[Function]}
            value={null}
          />
        </div>
        <div
          className="media-upload-container"
        >
          <label>
            Click the square below or drag an image into it to upload an image or video:
          </label>
          <div
            className="dropzone-container"
          >
            <t
              disableClick={false}
              disablePreview={false}
              disabled={false}
              getDataTransferItems={[Function]}
              inputProps={Object {}}
              maxSize={Infinity}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
            >
              <div
                aria-disabled={false}
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "borderColor": "#666",
                    "borderRadius": 5,
                    "borderStyle": "dashed",
                    "borderWidth": 2,
                    "height": 200,
                    "position": "relative",
                    "width": 200,
                  }
                }
              >
                <input
                  autoComplete="off"
                  disabled={false}
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0.00001,
                      "pointerEvents": "none",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                  type="file"
                />
              </div>
            </t>
          </div>
          <label
            style={
              Object {
                "marginTop": "10px",
              }
            }
          >
            Here is the link to your uploaded image or video:
          </label>
          <input />
          <a
            className="quill-button fun secondary outlined focus-on-light"
            href="/cms/images"
            target="_blank"
          >
            All Uploaded Media
          </a>
        </div>
        <div
          className="checkbox-wrapper"
        >
          <button
            aria-label="Unchecked checkbox"
            className="quill-checkbox unselected"
            onClick={[Function]}
            type="button"
          />
          <label
            className="premium-label"
          >
            Center Images
          </label>
        </div>
        <div
          className="checkbox-wrapper"
        >
          <button
            aria-label="Unchecked checkbox"
            className="quill-checkbox unselected"
            onClick={[Function]}
            type="button"
          />
          <label
            className="premium-label"
          >
            Show only to Premium Members
          </label>
        </div>
        <div>
          <div
            className="article-content-container"
          >
            <div
              id="article-preview-bar"
            >
              <div
                className="toolbar-left"
              >
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H1
                </button>
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H2
                </button>
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H3
                </button>
                <i
                  className="fas fa-bold"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-italic"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-list-ul"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-list-ol"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-quote-left"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-link"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-file-image"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-video"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-square"
                  onClick={[Function]}
                />
                <i
                  className="far fa-square"
                  onClick={[Function]}
                />
              </div>
              <div>
                <span
                  className="article-tab active"
                  onClick={[Function]}
                >
                  Edit
                </span>
                <span
                  className="article-tab null"
                  onClick={[Function]}
                >
                  Preview
                </span>
              </div>
            </div>
            <textarea
              id="markdown-content"
              onChange={[Function]}
              rows={20}
              type="text"
              value=""
            />
          </div>
          <a
            className="quill-button fun outlined secondary focus-on-light"
            href="http://commonmark.org/help/"
            rel="noopener noreferrer"
            target="_blank"
          >
            Markdown Cheatsheet
          </a>
        </div>
        <div
          className="save-buttons"
        >
          <input
            className="quill-button large outlined secondary focus-on-light"
            onClick={[Function]}
            type="button"
            value="Save Draft"
          />
          <input
            className="quill-button contained large primary focus-on-light"
            onClick={[Function]}
            type="button"
            value="Publish"
          />
        </div>
      </div>
      <div
        className="right-column"
      >
        <div>
          <label>
            Card Preview:
          </label>
          <PreviewCard
            color="red"
            content="<img class='preview-card-image' src='http://placehold.it/300x135' />
    <div class='preview-card-body'>
       <h3>Write Your Title Here</h3>
       <p>Write your description here, but be careful not to make it too long!</p>
    </div>
    <div class='preview-card-footer'>
      <span/>
    </div>"
          >
            <a
              className="preview-card-link red"
              target="_self"
            >
              <ReactMarkdown
                className="preview-card"
                containerTagName="div"
                parserOptions={Object {}}
                source="<img class='preview-card-image' src='http://placehold.it/300x135' />
    <div class='preview-card-body'>
       <h3>Write Your Title Here</h3>
       <p>Write your description here, but be careful not to make it too long!</p>
    </div>
    <div class='preview-card-footer'>
      <span/>
    </div>"
              >
                <div
                  className="preview-card"
                >
                  <HtmlRenderer
                    escapeHtml={false}
                    isBlock={true}
                    key="1:1-8:100"
                    literal="<img class='preview-card-image' src='http://placehold.it/300x135' />
    <div class='preview-card-body'>
       <h3>Write Your Title Here</h3>
       <p>Write your description here, but be careful not to make it too long!</p>
    </div>
    <div class='preview-card-footer'>
      <span/>
    </div>"
                    nodeKey="1:1-8:100"
                    skipHtml={false}
                  >
                    <div
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<img class='preview-card-image' src='http://placehold.it/300x135' />
    <div class='preview-card-body'>
       <h3>Write Your Title Here</h3>
       <p>Write your description here, but be careful not to make it too long!</p>
    </div>
    <div class='preview-card-footer'>
      <span/>
    </div>",
                        }
                      }
                      key="1:1-8:100"
                    />
                  </HtmlRenderer>
                </div>
              </ReactMarkdown>
              <a
                className="quill-button fun contained primary focus-on-light"
                target="_self"
              >
                Read
              </a>
            </a>
          </PreviewCard>
        </div>
        <div
          className="preview-card-container"
        >
          <label>
            Preview Card Content:
          </label>
          <div
            id="preview-card-content-fields"
          >
            <label
              key="title-label"
            >
              Title:
            </label>
            <input
              key="title"
              onChange={[Function]}
              type="text"
              value="Write Your Title Here"
            />
            <label
              key="description-label"
            >
              Description: 
              <i>
                (Please, choose the juiciest quote from the article that makes you want to read it and you should aim for 200 characters for the card description., for example: "I put jazz on and my kids work on Quill.")
              </i>
            </label>
            <input
              key="description"
              onChange={[Function]}
              type="text"
              value="Write your description here, but be careful not to make it too long!"
            />
          </div>
        </div>
      </div>
    </form>
  </div>
</CreateOrEditBlogPost>
`;

exports[`CreateOrEditBlogPost component renders for an existing blog post 1`] = `
<CreateOrEditBlogPost
  action="edit"
  authors={
    Array [
      Object {
        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
        "id": 32,
        "name": "Edgar O.",
      },
    ]
  }
  postToEdit={
    Object {
      "author_id": 32,
      "body": "Brandon Reynolds, a middle school writing teacher at Milano Jr. High School in Milano, Texas, has witnessed his students make significant writing gains since introducing Quill in the classroom. âI noticed that even simple things like capitalization would sometimes throw them off. Whenever I noticed something like that, Quillâs a really easy resource just to go back and say âLook, there are so many different activities, so weâre going to work on this for a little while and just see how it goes.ââ\\\\n\\\\nIn addition to his middle school classes, Reynolds also teaches a remedial high school class. âIâve primarily been just a middle school teacher, so I didnât know some high school students really do struggle with some of these basic writing skills. I really noticed while Iâve been here âthey have gotten so much better about how sentences actually look, the structure of them, and putting things in place, so thatâs been one of the big success stories Iâve seen this year.â \\\\n\\\\nReynolds uses Quill Proofreader to help his students prepare for state standardized tests. âI really think that helps them because theyâre able to just identify, âHey, thereâs a mistake right here,â and I really guide them on those.â\\\\n\\\\nQuill Diagnostics gave Reynolds a good starting point to assess where his students were in terms of their writing level, which helped him determine the best plan of action for each individual student. âI think whatâs really good is to start off with the diagnostic. And I start every class off with the beginner diagnostic no matter where they are.â He then re-assigns the diagnostic later in the year to see how far his students have come. âWhat I do is at the beginning of the next six-week quarter, Iâll give them the same diagnostic again to see how they do on that and compare their results.â\\\\n\\\\n![](http://s3.amazonaws.com/quill-image-uploads/uploads/files/brandonteacherstory1.jpg)\\\\n\\\\nReynolds also recommends sifting through the diagnostic recommendations for each student and being strategic about what to assign for the moment, instead of assigning everything at once, which can be âreally overwhelmingâ for students. He says, pick âone thing, so you can look and see âokay thereâs checkmarks all the way down adjectives. We can work on that.â So I would just say âchunk by chunk,â going down.â\\\\n\\\\nReynolds found Quill Lessons ultimately helpful for finding and pinpointing those who need the most help, making it easy for him to work more closely with them. âWhatâs really nice is I can work with many of them individually.â Because of the interactive nature of Lessons, heâs been able to clearly and easily see which students are participating and then find ways to increase the participation of those who may be struggling more with the material, and flag them for more guided instruction afterward. âEven as theyâre working on their own, Iâll call on different students and say, âOkay whatâs this adjective? What adjectives can we put here?,â so I really try to take advantage of everything thatâs there.â\\\\nReynolds uses Quill to provide his students with skills that they can incorporate into their writing assignments afterwards. âI often challenge them, especially my eighth graders, whenever we do a higher level activity combining sentences together, to put that into their next essay. Itâll be something specific that I look for, and for the most part it becomes second nature to them.â He has noticed that students are taking the concepts theyâve learned through Quillâs activities and putting them into practice in essays, which further reinforces the material.\\\\n\\\\n**Brandon Reynoldâs Best Practices**\\\\n\\\\n* Give students a Diagnostic at the beginning and end of each quarter/semester to see the progress theyâve made between the first and second attempts. \\\\n* Use Lessons to determine which students need the most help, and flag those who may be struggling and could use extra support around the material. \\\\n* Assign Diagnostic Recommendations concept-by-concept, so that students arenât overwhelmed by everything on their dashboards and can focus on what the teacher deems most important at the moment. \\\\n\\\\nTo find more Teacher Stories like Brandon Reynold's, click [**here!**](https://www.quill.org/teacher-center/topic/teacher-stories)",
      "center_images": false,
      "created_at": "2019-05-10T18:45:06.855Z",
      "draft": false,
      "external_link": "",
      "featured_order_number": null,
      "id": 132,
      "image_link": "",
      "order_number": 0,
      "premium": false,
      "press_name": "",
      "preview_card_content": "",
      "published_at": "2019-05-10T18:45:06.000Z",
      "read_count": 2235,
      "slug": "chunk-by-chunk-brandon-reynolds-middle-school-writing-teacher",
      "subtitle": "This is a teacher story for Brandon Reynolds, a middle school writing teacher at Milano Jr. High in Milano, Texas, who uses Quill to help his students improve their writing skills.",
      "title": "Brandon Reynolds Encourages Students to Work at their Own Pace",
      "topic": "Teacher stories",
      "tsv": "'/quill-image-uploads/uploads/files/brandonteacherstory1.jpg)':337B '/teacher-center/topic/teacher-stories)':722B 'abl':204B,457B 'action':250B 'activ':77B,564B,610B 'actual':156B 'addit':97B 'adject':391B,513B,515B 'advantag':526B 'afterward':492B,549B 'also':104B,339B 'aren':688B 'around':675B 'assess':231B 'assign':287B,355B,361B,548B,678B 'attempt':652B 'back':68B 'basic':136B 'becom':590B 'begin':308B,634B 'beginn':276B 'best':247B,626B 'better':152B 'big':174B 'brandon':1A,11B,623B,715B,729B 'call':503B 'capit':47B 'challeng':552B 'checkmark':386B 'chunk':402B,404B 'class':102B,110B,272B 'classroom':39B 'clear':459B 'click':718B 'close':431B 'combin':565B 'come':301B 'compar':332B 'concept':603B,682B,684B 'concept-by-concept':681B 'could':671B 'dashboard':695B 'deem':703B 'determin':245B,656B 'diagnost':223B,267B,277B,289B,322B,344B,631B,679B 'didn':122B 'differ':76B,505B 'easi':63B,425B 'easili':461B 'eighth':556B 'encourag':3A 'end':636B 'especi':554B 'essay':574B,617B 'even':43B,493B 'everi':271B 'everyth':362B,528B,692B 'extra':673B 'far':297B 'find':414B,469B,710B 'first':649B 'flag':486B,664B 'focus':698B 'found':408B 'gain':33B 'gave':224B 'give':318B,628B 'go':67B,81B,405B 'goe':95B 'good':227B,260B 'gotten':149B 'grader':557B 'guid':218B,490B 'help':187B,199B,243B,412B,422B,662B,747B 'hey':208B 'high':21B,108B,126B,739B 'higher':562B 'identifi':207B 'import':705B 'improv':750B 'incorpor':544B 'increas':472B 'individu':253B,446B 'instead':359B 'instruct':491B 'interact':450B 'introduc':35B 'jr':20B,738B 'know':124B 'later':290B 'learn':606B 'lesson':410B,453B,654B 'level':241B,563B 'like':46B,57B,714B 'littl':88B 'll':317B,502B,576B 'look':71B,157B,380B,582B 'made':646B 'make':30B,423B 'mani':75B,443B 'materi':484B,622B,677B 'matter':279B 'may':478B,667B 'middl':14B,100B,117B,732B 'milano':19B,24B,737B,741B 'mistak':212B 'moment':358B,708B 'much':151B 'natur':451B,592B 'need':419B,659B 'next':311B,573B 'nice':437B 'notic':41B,55B,141B,597B 'often':551B 'okay':383B,509B 'one':171B,375B 'overwhelm':369B,690B 'pace':10A 'part':588B 'particip':466B,474B 'pick':374B 'pinpoint':416B 'place':166B 'plan':248B 'point':229B 'practic':615B,627B 'prepar':190B 'primarili':113B 'progress':643B 'proofread':185B 'provid':536B 'put':163B,518B,569B,612B 'quarter':315B 'quarter/semester':639B 'quill':36B,59B,184B,222B,409B,534B,608B,745B 're':80B,203B,286B,496B 're-assign':285B 'realli':62B,129B,140B,196B,217B,259B,368B,436B,522B 'recommend':340B,345B,680B 'reinforc':620B 'remedi':107B 'resourc':64B 'result':334B 'reynold':2A,12B,103B,182B,225B,338B,407B,532B,624B,716B,730B 'right':213B 's3.amazonaws.com':336B 's3.amazonaws.com/quill-image-uploads/uploads/files/brandonteacherstory1.jpg)':335B 'say':70B,373B,401B,508B 'school':15B,22B,101B,109B,118B,127B,733B 'second':591B,651B 'see':92B,295B,325B,382B,462B,641B 'seen':179B 'sentenc':155B,566B 'sift':341B 'signific':31B 'simpl':44B 'sinc':34B 'six':313B 'six-week':312B 'skill':138B,540B,753B 'someth':56B,578B 'sometim':49B 'specif':579B 'standard':193B 'start':228B,263B,270B 'state':192B 'stori':176B,713B,727B,755C 'strateg':351B 'structur':159B 'struggl':131B,480B,669B 'student':4A,29B,128B,189B,234B,254B,299B,348B,371B,464B,506B,538B,599B,629B,658B,687B,749B 'success':175B 'support':674B 'take':525B,601B 'teach':105B 'teacher':17B,119B,702B,712B,726B,735B,754C 'term':237B 'test':194B 'texa':25B,742B 'thing':45B,164B,376B 'think':197B,256B 'throw':50B 'togeth':567B 'tri':523B 'ultim':411B 'use':183B,533B,653B,672B,744B 've':112B,144B,178B,605B,645B 'way':389B,470B 'week':314B 'whenev':53B,558B 'wit':27B 'work':6A,83B,394B,429B,441B,497B 'would':48B,399B 'write':16B,32B,137B,240B,547B,734B,752B 'www.quill.org':721B 'www.quill.org/teacher-center/topic/teacher-stories)':720B 'year':181B,293B",
      "updated_at": "2023-01-27T17:25:32.210Z",
    }
  }
  topics={
    Array [
      Object {
        "name": "What's new?",
        "slug": "what%27s-new%3F",
      },
      Object {
        "name": "Using quill for reading comprehension",
        "slug": "using-quill-for-reading-comprehension",
      },
      Object {
        "name": "Getting started",
        "slug": "getting-started",
      },
      Object {
        "name": "Best practices",
        "slug": "best-practices",
      },
      Object {
        "name": "Webinars",
        "slug": "webinars",
      },
      Object {
        "name": "Video tutorials",
        "slug": "video-tutorials",
      },
      Object {
        "name": "Teacher materials",
        "slug": "teacher-materials",
      },
      Object {
        "name": "Writing instruction research",
        "slug": "writing-instruction-research",
      },
      Object {
        "name": "Teacher stories",
        "slug": "teacher-stories",
      },
      Object {
        "name": "Case studies",
        "slug": "case-studies",
      },
      Object {
        "name": "Support",
        "slug": "support",
      },
      Object {
        "name": "Twitter love",
        "slug": "twitter-love",
      },
    ]
  }
>
  <div>
    <a
      className="quill-button fun outlined secondary focus-on-light"
      href="/cms/blog_posts"
    >
      <i
        className="fas fa-chevron-left"
      />
      Â Back to All Blog Posts
    </a>
    <form>
      <div
        className="left-column"
      >
        <label>
          Title:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value="Brandon Reynolds Encourages Students to Work at their Own Pace"
        />
        <label>
          SEO Meta Description:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value="This is a teacher story for Brandon Reynolds, a middle school writing teacher at Milano Jr. High in Milano, Texas, who uses Quill to help his students improve their writing skills."
        />
        <label>
          SEO Meta Image:
        </label>
        <input
          onChange={[Function]}
          type="text"
          value=""
        />
        <label>
          Press Name (optional):
        </label>
        <input
          onChange={[Function]}
          type="text"
          value=""
        />
        <div
          className="short-fields"
        >
          <div>
            <label>
              Author:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  Object {
                    "id": null,
                    "name": "None",
                  },
                  Object {
                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                    "id": 32,
                    "name": "Edgar O.",
                  },
                ]
              }
              selectedItem={
                Object {
                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                  "id": 32,
                  "name": "Edgar O.",
                }
              }
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": null,
                      "label": "None",
                      "value": Object {
                        "id": null,
                        "name": "None",
                      },
                    },
                    Object {
                      "id": 32,
                      "label": "Edgar O.",
                      "value": Object {
                        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                        "id": 32,
                        "name": "Edgar O.",
                      },
                    },
                  ]
                }
                value={
                  Object {
                    "id": 32,
                    "label": "Edgar O.",
                    "value": Object {
                      "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                      "id": 32,
                      "name": "Edgar O.",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "id": null,
                          "label": "None",
                          "value": Object {
                            "id": null,
                            "name": "None",
                          },
                        },
                        Object {
                          "id": 32,
                          "label": "Edgar O.",
                          "value": Object {
                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                            "id": 32,
                            "name": "Edgar O.",
                          },
                        },
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "id": 32,
                        "label": "Edgar O.",
                        "value": Object {
                          "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                          "id": 32,
                          "name": "Edgar O.",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "id": null,
                            "label": "None",
                            "value": Object {
                              "id": null,
                              "name": "None",
                            },
                          },
                          Object {
                            "id": 32,
                            "label": "Edgar O.",
                            "value": Object {
                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                              "id": 32,
                              "name": "Edgar O.",
                            },
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "id": 32,
                          "label": "Edgar O.",
                          "value": Object {
                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                            "id": 32,
                            "name": "Edgar O.",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "id": null,
                              "label": "None",
                              "value": Object {
                                "id": null,
                                "name": "None",
                              },
                            },
                            Object {
                              "id": 32,
                              "label": "Edgar O.",
                              "value": Object {
                                "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                "id": 32,
                                "name": "Edgar O.",
                              },
                            },
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "id": null,
                                "label": "None",
                                "value": Object {
                                  "id": null,
                                  "name": "None",
                                },
                              },
                              Object {
                                "id": 32,
                                "label": "Edgar O.",
                                "value": Object {
                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                  "id": 32,
                                  "name": "Edgar O.",
                                },
                              },
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "id": 32,
                              "label": "Edgar O.",
                              "value": Object {
                                "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                "id": 32,
                                "name": "Edgar O.",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "id": null,
                                    "label": "None",
                                    "value": Object {
                                      "id": null,
                                      "name": "None",
                                    },
                                  },
                                  Object {
                                    "id": 32,
                                    "label": "Edgar O.",
                                    "value": Object {
                                      "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                      "id": 32,
                                      "name": "Edgar O.",
                                    },
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "id": null,
                                      "label": "None",
                                      "value": Object {
                                        "id": null,
                                        "name": "None",
                                      },
                                    },
                                    Object {
                                      "id": 32,
                                      "label": "Edgar O.",
                                      "value": Object {
                                        "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                        "id": 32,
                                        "name": "Edgar O.",
                                      },
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "id": 32,
                                    "label": "Edgar O.",
                                    "value": Object {
                                      "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                      "id": 32,
                                      "name": "Edgar O.",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                        Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "None",
                                            "value": Object {
                                              "id": null,
                                              "name": "None",
                                            },
                                          },
                                          Object {
                                            "id": 32,
                                            "label": "Edgar O.",
                                            "value": Object {
                                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                              "id": 32,
                                              "name": "Edgar O.",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "id": 32,
                                              "label": "Edgar O.",
                                              "value": Object {
                                                "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                "id": 32,
                                                "name": "Edgar O.",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              Edgar O.
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-5-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-5-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-5-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "None",
                                          "value": Object {
                                            "id": null,
                                            "name": "None",
                                          },
                                        },
                                        Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "None",
                                            "value": Object {
                                              "id": null,
                                              "name": "None",
                                            },
                                          },
                                          Object {
                                            "id": 32,
                                            "label": "Edgar O.",
                                            "value": Object {
                                              "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                              "id": 32,
                                              "name": "Edgar O.",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": 32,
                                          "label": "Edgar O.",
                                          "value": Object {
                                            "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                            "id": 32,
                                            "name": "Edgar O.",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "None",
                                                "value": Object {
                                                  "id": null,
                                                  "name": "None",
                                                },
                                              },
                                              Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "None",
                                                  "value": Object {
                                                    "id": null,
                                                    "name": "None",
                                                  },
                                                },
                                                Object {
                                                  "id": 32,
                                                  "label": "Edgar O.",
                                                  "value": Object {
                                                    "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                    "id": 32,
                                                    "name": "Edgar O.",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": 32,
                                                "label": "Edgar O.",
                                                "value": Object {
                                                  "avatar": "http://s3.amazonaws.com/quill-image-uploads/uploads/files/Edgar_small_headshot.jpg",
                                                  "id": 32,
                                                  "name": "Edgar O.",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
            <a
              className="quill-button fun outlined secondary focus-on-light"
              href="/cms/authors/new"
              target="_blank"
            >
              Create New Author
            </a>
          </div>
          <div>
            <label>
              Topic:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  Object {
                    "name": "What's new?",
                    "slug": "what%27s-new%3F",
                  },
                  Object {
                    "name": "Using quill for reading comprehension",
                    "slug": "using-quill-for-reading-comprehension",
                  },
                  Object {
                    "name": "Getting started",
                    "slug": "getting-started",
                  },
                  Object {
                    "name": "Best practices",
                    "slug": "best-practices",
                  },
                  Object {
                    "name": "Webinars",
                    "slug": "webinars",
                  },
                  Object {
                    "name": "Video tutorials",
                    "slug": "video-tutorials",
                  },
                  Object {
                    "name": "Teacher materials",
                    "slug": "teacher-materials",
                  },
                  Object {
                    "name": "Writing instruction research",
                    "slug": "writing-instruction-research",
                  },
                  Object {
                    "name": "Teacher stories",
                    "slug": "teacher-stories",
                  },
                  Object {
                    "name": "Case studies",
                    "slug": "case-studies",
                  },
                  Object {
                    "name": "Support",
                    "slug": "support",
                  },
                  Object {
                    "name": "Twitter love",
                    "slug": "twitter-love",
                  },
                  undefined,
                ]
              }
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "id": null,
                      "label": "What's new?",
                      "value": Object {
                        "name": "What's new?",
                        "slug": "what%27s-new%3F",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Using quill for reading comprehension",
                      "value": Object {
                        "name": "Using quill for reading comprehension",
                        "slug": "using-quill-for-reading-comprehension",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Getting started",
                      "value": Object {
                        "name": "Getting started",
                        "slug": "getting-started",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Best practices",
                      "value": Object {
                        "name": "Best practices",
                        "slug": "best-practices",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Webinars",
                      "value": Object {
                        "name": "Webinars",
                        "slug": "webinars",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Video tutorials",
                      "value": Object {
                        "name": "Video tutorials",
                        "slug": "video-tutorials",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Teacher materials",
                      "value": Object {
                        "name": "Teacher materials",
                        "slug": "teacher-materials",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Writing instruction research",
                      "value": Object {
                        "name": "Writing instruction research",
                        "slug": "writing-instruction-research",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Teacher stories",
                      "value": Object {
                        "name": "Teacher stories",
                        "slug": "teacher-stories",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Case studies",
                      "value": Object {
                        "name": "Case studies",
                        "slug": "case-studies",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Support",
                      "value": Object {
                        "name": "Support",
                        "slug": "support",
                      },
                    },
                    Object {
                      "id": null,
                      "label": "Twitter love",
                      "value": Object {
                        "name": "Twitter love",
                        "slug": "twitter-love",
                      },
                    },
                    undefined,
                  ]
                }
                value={
                  Object {
                    "id": null,
                    "label": "What's new?",
                    "value": Object {
                      "name": "What's new?",
                      "slug": "what%27s-new%3F",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "id": null,
                          "label": "What's new?",
                          "value": Object {
                            "name": "What's new?",
                            "slug": "what%27s-new%3F",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Using quill for reading comprehension",
                          "value": Object {
                            "name": "Using quill for reading comprehension",
                            "slug": "using-quill-for-reading-comprehension",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Getting started",
                          "value": Object {
                            "name": "Getting started",
                            "slug": "getting-started",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Best practices",
                          "value": Object {
                            "name": "Best practices",
                            "slug": "best-practices",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Webinars",
                          "value": Object {
                            "name": "Webinars",
                            "slug": "webinars",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Video tutorials",
                          "value": Object {
                            "name": "Video tutorials",
                            "slug": "video-tutorials",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Teacher materials",
                          "value": Object {
                            "name": "Teacher materials",
                            "slug": "teacher-materials",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Writing instruction research",
                          "value": Object {
                            "name": "Writing instruction research",
                            "slug": "writing-instruction-research",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Teacher stories",
                          "value": Object {
                            "name": "Teacher stories",
                            "slug": "teacher-stories",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Case studies",
                          "value": Object {
                            "name": "Case studies",
                            "slug": "case-studies",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Support",
                          "value": Object {
                            "name": "Support",
                            "slug": "support",
                          },
                        },
                        Object {
                          "id": null,
                          "label": "Twitter love",
                          "value": Object {
                            "name": "Twitter love",
                            "slug": "twitter-love",
                          },
                        },
                        undefined,
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "id": null,
                        "label": "What's new?",
                        "value": Object {
                          "name": "What's new?",
                          "slug": "what%27s-new%3F",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "id": null,
                            "label": "What's new?",
                            "value": Object {
                              "name": "What's new?",
                              "slug": "what%27s-new%3F",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Using quill for reading comprehension",
                            "value": Object {
                              "name": "Using quill for reading comprehension",
                              "slug": "using-quill-for-reading-comprehension",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Getting started",
                            "value": Object {
                              "name": "Getting started",
                              "slug": "getting-started",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Best practices",
                            "value": Object {
                              "name": "Best practices",
                              "slug": "best-practices",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Webinars",
                            "value": Object {
                              "name": "Webinars",
                              "slug": "webinars",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Video tutorials",
                            "value": Object {
                              "name": "Video tutorials",
                              "slug": "video-tutorials",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Teacher materials",
                            "value": Object {
                              "name": "Teacher materials",
                              "slug": "teacher-materials",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Writing instruction research",
                            "value": Object {
                              "name": "Writing instruction research",
                              "slug": "writing-instruction-research",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Teacher stories",
                            "value": Object {
                              "name": "Teacher stories",
                              "slug": "teacher-stories",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Case studies",
                            "value": Object {
                              "name": "Case studies",
                              "slug": "case-studies",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Support",
                            "value": Object {
                              "name": "Support",
                              "slug": "support",
                            },
                          },
                          Object {
                            "id": null,
                            "label": "Twitter love",
                            "value": Object {
                              "name": "Twitter love",
                              "slug": "twitter-love",
                            },
                          },
                          undefined,
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "id": null,
                          "label": "What's new?",
                          "value": Object {
                            "name": "What's new?",
                            "slug": "what%27s-new%3F",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "id": null,
                              "label": "What's new?",
                              "value": Object {
                                "name": "What's new?",
                                "slug": "what%27s-new%3F",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Using quill for reading comprehension",
                              "value": Object {
                                "name": "Using quill for reading comprehension",
                                "slug": "using-quill-for-reading-comprehension",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Getting started",
                              "value": Object {
                                "name": "Getting started",
                                "slug": "getting-started",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Best practices",
                              "value": Object {
                                "name": "Best practices",
                                "slug": "best-practices",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Webinars",
                              "value": Object {
                                "name": "Webinars",
                                "slug": "webinars",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Video tutorials",
                              "value": Object {
                                "name": "Video tutorials",
                                "slug": "video-tutorials",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Teacher materials",
                              "value": Object {
                                "name": "Teacher materials",
                                "slug": "teacher-materials",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Writing instruction research",
                              "value": Object {
                                "name": "Writing instruction research",
                                "slug": "writing-instruction-research",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Teacher stories",
                              "value": Object {
                                "name": "Teacher stories",
                                "slug": "teacher-stories",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Case studies",
                              "value": Object {
                                "name": "Case studies",
                                "slug": "case-studies",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Support",
                              "value": Object {
                                "name": "Support",
                                "slug": "support",
                              },
                            },
                            Object {
                              "id": null,
                              "label": "Twitter love",
                              "value": Object {
                                "name": "Twitter love",
                                "slug": "twitter-love",
                              },
                            },
                            undefined,
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "id": null,
                                "label": "What's new?",
                                "value": Object {
                                  "name": "What's new?",
                                  "slug": "what%27s-new%3F",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Using quill for reading comprehension",
                                "value": Object {
                                  "name": "Using quill for reading comprehension",
                                  "slug": "using-quill-for-reading-comprehension",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Getting started",
                                "value": Object {
                                  "name": "Getting started",
                                  "slug": "getting-started",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Best practices",
                                "value": Object {
                                  "name": "Best practices",
                                  "slug": "best-practices",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Webinars",
                                "value": Object {
                                  "name": "Webinars",
                                  "slug": "webinars",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Video tutorials",
                                "value": Object {
                                  "name": "Video tutorials",
                                  "slug": "video-tutorials",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Teacher materials",
                                "value": Object {
                                  "name": "Teacher materials",
                                  "slug": "teacher-materials",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Writing instruction research",
                                "value": Object {
                                  "name": "Writing instruction research",
                                  "slug": "writing-instruction-research",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Teacher stories",
                                "value": Object {
                                  "name": "Teacher stories",
                                  "slug": "teacher-stories",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Case studies",
                                "value": Object {
                                  "name": "Case studies",
                                  "slug": "case-studies",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Support",
                                "value": Object {
                                  "name": "Support",
                                  "slug": "support",
                                },
                              },
                              Object {
                                "id": null,
                                "label": "Twitter love",
                                "value": Object {
                                  "name": "Twitter love",
                                  "slug": "twitter-love",
                                },
                              },
                              undefined,
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "id": null,
                              "label": "What's new?",
                              "value": Object {
                                "name": "What's new?",
                                "slug": "what%27s-new%3F",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "id": null,
                                    "label": "What's new?",
                                    "value": Object {
                                      "name": "What's new?",
                                      "slug": "what%27s-new%3F",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Using quill for reading comprehension",
                                    "value": Object {
                                      "name": "Using quill for reading comprehension",
                                      "slug": "using-quill-for-reading-comprehension",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Getting started",
                                    "value": Object {
                                      "name": "Getting started",
                                      "slug": "getting-started",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Best practices",
                                    "value": Object {
                                      "name": "Best practices",
                                      "slug": "best-practices",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Webinars",
                                    "value": Object {
                                      "name": "Webinars",
                                      "slug": "webinars",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Video tutorials",
                                    "value": Object {
                                      "name": "Video tutorials",
                                      "slug": "video-tutorials",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Teacher materials",
                                    "value": Object {
                                      "name": "Teacher materials",
                                      "slug": "teacher-materials",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Writing instruction research",
                                    "value": Object {
                                      "name": "Writing instruction research",
                                      "slug": "writing-instruction-research",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Teacher stories",
                                    "value": Object {
                                      "name": "Teacher stories",
                                      "slug": "teacher-stories",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Case studies",
                                    "value": Object {
                                      "name": "Case studies",
                                      "slug": "case-studies",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Support",
                                    "value": Object {
                                      "name": "Support",
                                      "slug": "support",
                                    },
                                  },
                                  Object {
                                    "id": null,
                                    "label": "Twitter love",
                                    "value": Object {
                                      "name": "Twitter love",
                                      "slug": "twitter-love",
                                    },
                                  },
                                  undefined,
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "id": null,
                                      "label": "What's new?",
                                      "value": Object {
                                        "name": "What's new?",
                                        "slug": "what%27s-new%3F",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Using quill for reading comprehension",
                                      "value": Object {
                                        "name": "Using quill for reading comprehension",
                                        "slug": "using-quill-for-reading-comprehension",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Getting started",
                                      "value": Object {
                                        "name": "Getting started",
                                        "slug": "getting-started",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Best practices",
                                      "value": Object {
                                        "name": "Best practices",
                                        "slug": "best-practices",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Webinars",
                                      "value": Object {
                                        "name": "Webinars",
                                        "slug": "webinars",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Video tutorials",
                                      "value": Object {
                                        "name": "Video tutorials",
                                        "slug": "video-tutorials",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Teacher materials",
                                      "value": Object {
                                        "name": "Teacher materials",
                                        "slug": "teacher-materials",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Writing instruction research",
                                      "value": Object {
                                        "name": "Writing instruction research",
                                        "slug": "writing-instruction-research",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Teacher stories",
                                      "value": Object {
                                        "name": "Teacher stories",
                                        "slug": "teacher-stories",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Case studies",
                                      "value": Object {
                                        "name": "Case studies",
                                        "slug": "case-studies",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Support",
                                      "value": Object {
                                        "name": "Support",
                                        "slug": "support",
                                      },
                                    },
                                    Object {
                                      "id": null,
                                      "label": "Twitter love",
                                      "value": Object {
                                        "name": "Twitter love",
                                        "slug": "twitter-love",
                                      },
                                    },
                                    undefined,
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "id": null,
                                    "label": "What's new?",
                                    "value": Object {
                                      "name": "What's new?",
                                      "slug": "what%27s-new%3F",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Using quill for reading comprehension",
                                          "value": Object {
                                            "name": "Using quill for reading comprehension",
                                            "slug": "using-quill-for-reading-comprehension",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Getting started",
                                          "value": Object {
                                            "name": "Getting started",
                                            "slug": "getting-started",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Best practices",
                                          "value": Object {
                                            "name": "Best practices",
                                            "slug": "best-practices",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Webinars",
                                          "value": Object {
                                            "name": "Webinars",
                                            "slug": "webinars",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Video tutorials",
                                          "value": Object {
                                            "name": "Video tutorials",
                                            "slug": "video-tutorials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher materials",
                                          "value": Object {
                                            "name": "Teacher materials",
                                            "slug": "teacher-materials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Writing instruction research",
                                          "value": Object {
                                            "name": "Writing instruction research",
                                            "slug": "writing-instruction-research",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher stories",
                                          "value": Object {
                                            "name": "Teacher stories",
                                            "slug": "teacher-stories",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Case studies",
                                          "value": Object {
                                            "name": "Case studies",
                                            "slug": "case-studies",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Support",
                                          "value": Object {
                                            "name": "Support",
                                            "slug": "support",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Twitter love",
                                          "value": Object {
                                            "name": "Twitter love",
                                            "slug": "twitter-love",
                                          },
                                        },
                                        undefined,
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "What's new?",
                                            "value": Object {
                                              "name": "What's new?",
                                              "slug": "what%27s-new%3F",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Using quill for reading comprehension",
                                            "value": Object {
                                              "name": "Using quill for reading comprehension",
                                              "slug": "using-quill-for-reading-comprehension",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Getting started",
                                            "value": Object {
                                              "name": "Getting started",
                                              "slug": "getting-started",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Best practices",
                                            "value": Object {
                                              "name": "Best practices",
                                              "slug": "best-practices",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Webinars",
                                            "value": Object {
                                              "name": "Webinars",
                                              "slug": "webinars",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Video tutorials",
                                            "value": Object {
                                              "name": "Video tutorials",
                                              "slug": "video-tutorials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher materials",
                                            "value": Object {
                                              "name": "Teacher materials",
                                              "slug": "teacher-materials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Writing instruction research",
                                            "value": Object {
                                              "name": "Writing instruction research",
                                              "slug": "writing-instruction-research",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher stories",
                                            "value": Object {
                                              "name": "Teacher stories",
                                              "slug": "teacher-stories",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Case studies",
                                            "value": Object {
                                              "name": "Case studies",
                                              "slug": "case-studies",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Support",
                                            "value": Object {
                                              "name": "Support",
                                              "slug": "support",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Twitter love",
                                            "value": Object {
                                              "name": "Twitter love",
                                              "slug": "twitter-love",
                                            },
                                          },
                                          undefined,
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "id": null,
                                              "label": "What's new?",
                                              "value": Object {
                                                "name": "What's new?",
                                                "slug": "what%27s-new%3F",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              What's new?
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-6-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-6-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-6-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Using quill for reading comprehension",
                                          "value": Object {
                                            "name": "Using quill for reading comprehension",
                                            "slug": "using-quill-for-reading-comprehension",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Getting started",
                                          "value": Object {
                                            "name": "Getting started",
                                            "slug": "getting-started",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Best practices",
                                          "value": Object {
                                            "name": "Best practices",
                                            "slug": "best-practices",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Webinars",
                                          "value": Object {
                                            "name": "Webinars",
                                            "slug": "webinars",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Video tutorials",
                                          "value": Object {
                                            "name": "Video tutorials",
                                            "slug": "video-tutorials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher materials",
                                          "value": Object {
                                            "name": "Teacher materials",
                                            "slug": "teacher-materials",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Writing instruction research",
                                          "value": Object {
                                            "name": "Writing instruction research",
                                            "slug": "writing-instruction-research",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Teacher stories",
                                          "value": Object {
                                            "name": "Teacher stories",
                                            "slug": "teacher-stories",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Case studies",
                                          "value": Object {
                                            "name": "Case studies",
                                            "slug": "case-studies",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Support",
                                          "value": Object {
                                            "name": "Support",
                                            "slug": "support",
                                          },
                                        },
                                        Object {
                                          "id": null,
                                          "label": "Twitter love",
                                          "value": Object {
                                            "name": "Twitter love",
                                            "slug": "twitter-love",
                                          },
                                        },
                                        undefined,
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "id": null,
                                            "label": "What's new?",
                                            "value": Object {
                                              "name": "What's new?",
                                              "slug": "what%27s-new%3F",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Using quill for reading comprehension",
                                            "value": Object {
                                              "name": "Using quill for reading comprehension",
                                              "slug": "using-quill-for-reading-comprehension",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Getting started",
                                            "value": Object {
                                              "name": "Getting started",
                                              "slug": "getting-started",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Best practices",
                                            "value": Object {
                                              "name": "Best practices",
                                              "slug": "best-practices",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Webinars",
                                            "value": Object {
                                              "name": "Webinars",
                                              "slug": "webinars",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Video tutorials",
                                            "value": Object {
                                              "name": "Video tutorials",
                                              "slug": "video-tutorials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher materials",
                                            "value": Object {
                                              "name": "Teacher materials",
                                              "slug": "teacher-materials",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Writing instruction research",
                                            "value": Object {
                                              "name": "Writing instruction research",
                                              "slug": "writing-instruction-research",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Teacher stories",
                                            "value": Object {
                                              "name": "Teacher stories",
                                              "slug": "teacher-stories",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Case studies",
                                            "value": Object {
                                              "name": "Case studies",
                                              "slug": "case-studies",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Support",
                                            "value": Object {
                                              "name": "Support",
                                              "slug": "support",
                                            },
                                          },
                                          Object {
                                            "id": null,
                                            "label": "Twitter love",
                                            "value": Object {
                                              "name": "Twitter love",
                                              "slug": "twitter-love",
                                            },
                                          },
                                          undefined,
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "id": null,
                                          "label": "What's new?",
                                          "value": Object {
                                            "name": "What's new?",
                                            "slug": "what%27s-new%3F",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Using quill for reading comprehension",
                                                "value": Object {
                                                  "name": "Using quill for reading comprehension",
                                                  "slug": "using-quill-for-reading-comprehension",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Getting started",
                                                "value": Object {
                                                  "name": "Getting started",
                                                  "slug": "getting-started",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Best practices",
                                                "value": Object {
                                                  "name": "Best practices",
                                                  "slug": "best-practices",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Webinars",
                                                "value": Object {
                                                  "name": "Webinars",
                                                  "slug": "webinars",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Video tutorials",
                                                "value": Object {
                                                  "name": "Video tutorials",
                                                  "slug": "video-tutorials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher materials",
                                                "value": Object {
                                                  "name": "Teacher materials",
                                                  "slug": "teacher-materials",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Writing instruction research",
                                                "value": Object {
                                                  "name": "Writing instruction research",
                                                  "slug": "writing-instruction-research",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Teacher stories",
                                                "value": Object {
                                                  "name": "Teacher stories",
                                                  "slug": "teacher-stories",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Case studies",
                                                "value": Object {
                                                  "name": "Case studies",
                                                  "slug": "case-studies",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Support",
                                                "value": Object {
                                                  "name": "Support",
                                                  "slug": "support",
                                                },
                                              },
                                              Object {
                                                "id": null,
                                                "label": "Twitter love",
                                                "value": Object {
                                                  "name": "Twitter love",
                                                  "slug": "twitter-love",
                                                },
                                              },
                                              undefined,
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "id": null,
                                                  "label": "What's new?",
                                                  "value": Object {
                                                    "name": "What's new?",
                                                    "slug": "what%27s-new%3F",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Using quill for reading comprehension",
                                                  "value": Object {
                                                    "name": "Using quill for reading comprehension",
                                                    "slug": "using-quill-for-reading-comprehension",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Getting started",
                                                  "value": Object {
                                                    "name": "Getting started",
                                                    "slug": "getting-started",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Best practices",
                                                  "value": Object {
                                                    "name": "Best practices",
                                                    "slug": "best-practices",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Webinars",
                                                  "value": Object {
                                                    "name": "Webinars",
                                                    "slug": "webinars",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Video tutorials",
                                                  "value": Object {
                                                    "name": "Video tutorials",
                                                    "slug": "video-tutorials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher materials",
                                                  "value": Object {
                                                    "name": "Teacher materials",
                                                    "slug": "teacher-materials",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Writing instruction research",
                                                  "value": Object {
                                                    "name": "Writing instruction research",
                                                    "slug": "writing-instruction-research",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Teacher stories",
                                                  "value": Object {
                                                    "name": "Teacher stories",
                                                    "slug": "teacher-stories",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Case studies",
                                                  "value": Object {
                                                    "name": "Case studies",
                                                    "slug": "case-studies",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Support",
                                                  "value": Object {
                                                    "name": "Support",
                                                    "slug": "support",
                                                  },
                                                },
                                                Object {
                                                  "id": null,
                                                  "label": "Twitter love",
                                                  "value": Object {
                                                    "name": "Twitter love",
                                                    "slug": "twitter-love",
                                                  },
                                                },
                                                undefined,
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "id": null,
                                                "label": "What's new?",
                                                "value": Object {
                                                  "name": "What's new?",
                                                  "slug": "what%27s-new%3F",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
          </div>
        </div>
        <div
          className="short-fields"
        >
          <div
            className="preview-card-container"
          >
            <label>
              Preview Card Template:
            </label>
            <ItemDropdown
              callback={[Function]}
              className="blog-dropdown"
              items={
                Array [
                  "Standard",
                  "Custom HTML",
                ]
              }
              selectedItem="Custom HTML"
            >
              <DropdownInput
                className="blog-dropdown"
                handleChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "Standard",
                      "value": Object {
                        "name": "Standard",
                      },
                    },
                    Object {
                      "label": "Custom HTML",
                      "value": Object {
                        "name": "Custom HTML",
                      },
                    },
                  ]
                }
                value={
                  Object {
                    "label": "Custom HTML",
                    "value": Object {
                      "name": "Custom HTML",
                    },
                  }
                }
              >
                <div
                  className="dropdown-container input-container inactive has-text not-editable blog-dropdown "
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <label />
                  <StateManager
                    className="dropdown"
                    classNamePrefix="dropdown"
                    components={
                      Object {
                        "Option": [Function],
                      }
                    }
                    cursor={null}
                    defaultInputValue=""
                    defaultMenuIsOpen={false}
                    defaultValue={null}
                    filterOption={null}
                    inputValue=""
                    isClearable={false}
                    menuIsOpen={false}
                    onInputChange={[Function]}
                    onKeyDown={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Standard",
                          "value": Object {
                            "name": "Standard",
                          },
                        },
                        Object {
                          "label": "Custom HTML",
                          "value": Object {
                            "name": "Custom HTML",
                          },
                        },
                      ]
                    }
                    placeholder=""
                    tabIndex={-1}
                    updateCursor={[Function]}
                    value={
                      Object {
                        "label": "Custom HTML",
                        "value": Object {
                          "name": "Custom HTML",
                        },
                      }
                    }
                  >
                    <Select
                      backspaceRemovesValue={true}
                      blurInputOnSelect={true}
                      captureMenuScroll={false}
                      className="dropdown"
                      classNamePrefix="dropdown"
                      closeMenuOnScroll={false}
                      closeMenuOnSelect={true}
                      components={
                        Object {
                          "Option": [Function],
                        }
                      }
                      controlShouldRenderValue={true}
                      cursor={null}
                      escapeClearsValue={false}
                      filterOption={null}
                      formatGroupLabel={[Function]}
                      getOptionLabel={[Function]}
                      getOptionValue={[Function]}
                      inputValue=""
                      isClearable={false}
                      isDisabled={false}
                      isLoading={false}
                      isMulti={false}
                      isOptionDisabled={[Function]}
                      isRtl={false}
                      isSearchable={true}
                      loadingMessage={[Function]}
                      maxMenuHeight={300}
                      menuIsOpen={false}
                      menuPlacement="bottom"
                      menuPosition="absolute"
                      menuShouldBlockScroll={false}
                      menuShouldScrollIntoView={true}
                      minMenuHeight={140}
                      noOptionsMessage={[Function]}
                      onChange={[Function]}
                      onInputChange={[Function]}
                      onKeyDown={[Function]}
                      onMenuClose={[Function]}
                      onMenuOpen={[Function]}
                      openMenuOnClick={true}
                      openMenuOnFocus={false}
                      options={
                        Array [
                          Object {
                            "label": "Standard",
                            "value": Object {
                              "name": "Standard",
                            },
                          },
                          Object {
                            "label": "Custom HTML",
                            "value": Object {
                              "name": "Custom HTML",
                            },
                          },
                        ]
                      }
                      pageSize={5}
                      placeholder=""
                      screenReaderStatus={[Function]}
                      styles={Object {}}
                      tabIndex={-1}
                      tabSelectsValue={true}
                      updateCursor={[Function]}
                      value={
                        Object {
                          "label": "Custom HTML",
                          "value": Object {
                            "name": "Custom HTML",
                          },
                        }
                      }
                    >
                      <SelectContainer
                        className="dropdown"
                        clearValue={[Function]}
                        cx={[Function]}
                        getStyles={[Function]}
                        getValue={[Function]}
                        hasValue={true}
                        innerProps={
                          Object {
                            "id": undefined,
                            "onKeyDown": [Function],
                          }
                        }
                        isDisabled={false}
                        isFocused={false}
                        isMulti={false}
                        isRtl={false}
                        options={
                          Array [
                            Object {
                              "label": "Standard",
                              "value": Object {
                                "name": "Standard",
                              },
                            },
                            Object {
                              "label": "Custom HTML",
                              "value": Object {
                                "name": "Custom HTML",
                              },
                            },
                          ]
                        }
                        selectOption={[Function]}
                        selectProps={
                          Object {
                            "backspaceRemovesValue": true,
                            "blurInputOnSelect": true,
                            "captureMenuScroll": false,
                            "className": "dropdown",
                            "classNamePrefix": "dropdown",
                            "closeMenuOnScroll": false,
                            "closeMenuOnSelect": true,
                            "components": Object {
                              "Option": [Function],
                            },
                            "controlShouldRenderValue": true,
                            "cursor": null,
                            "escapeClearsValue": false,
                            "filterOption": null,
                            "formatGroupLabel": [Function],
                            "getOptionLabel": [Function],
                            "getOptionValue": [Function],
                            "id": undefined,
                            "inputValue": "",
                            "isClearable": false,
                            "isDisabled": false,
                            "isLoading": false,
                            "isMulti": false,
                            "isOptionDisabled": [Function],
                            "isRtl": false,
                            "isSearchable": true,
                            "loadingMessage": [Function],
                            "maxMenuHeight": 300,
                            "menuIsOpen": false,
                            "menuPlacement": "bottom",
                            "menuPosition": "absolute",
                            "menuShouldBlockScroll": false,
                            "menuShouldScrollIntoView": true,
                            "minMenuHeight": 140,
                            "noOptionsMessage": [Function],
                            "onChange": [Function],
                            "onInputChange": [Function],
                            "onKeyDown": [Function],
                            "onMenuClose": [Function],
                            "onMenuOpen": [Function],
                            "openMenuOnClick": true,
                            "openMenuOnFocus": false,
                            "options": Array [
                              Object {
                                "label": "Standard",
                                "value": Object {
                                  "name": "Standard",
                                },
                              },
                              Object {
                                "label": "Custom HTML",
                                "value": Object {
                                  "name": "Custom HTML",
                                },
                              },
                            ],
                            "pageSize": 5,
                            "placeholder": "",
                            "screenReaderStatus": [Function],
                            "styles": Object {},
                            "tabIndex": -1,
                            "tabSelectsValue": true,
                            "type": undefined,
                            "updateCursor": [Function],
                            "value": Object {
                              "label": "Custom HTML",
                              "value": Object {
                                "name": "Custom HTML",
                              },
                            },
                          }
                        }
                        setValue={[Function]}
                        theme={
                          Object {
                            "borderRadius": 4,
                            "colors": Object {
                              "danger": "#DE350B",
                              "dangerLight": "#FFBDAD",
                              "neutral0": "hsl(0, 0%, 100%)",
                              "neutral10": "hsl(0, 0%, 90%)",
                              "neutral20": "hsl(0, 0%, 80%)",
                              "neutral30": "hsl(0, 0%, 70%)",
                              "neutral40": "hsl(0, 0%, 60%)",
                              "neutral5": "hsl(0, 0%, 95%)",
                              "neutral50": "hsl(0, 0%, 50%)",
                              "neutral60": "hsl(0, 0%, 40%)",
                              "neutral70": "hsl(0, 0%, 30%)",
                              "neutral80": "hsl(0, 0%, 20%)",
                              "neutral90": "hsl(0, 0%, 10%)",
                              "primary": "#2684FF",
                              "primary25": "#DEEBFF",
                              "primary50": "#B2D4FF",
                              "primary75": "#4C9AFF",
                            },
                            "spacing": Object {
                              "baseUnit": 4,
                              "controlHeight": 38,
                              "menuGutter": 8,
                            },
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="dropdown"
                          css={
                            Object {
                              "boxSizing": "border-box",
                              "direction": null,
                              "label": "container",
                              "pointerEvents": null,
                              "position": "relative",
                            }
                          }
                          onKeyDown={[Function]}
                        >
                          <div
                            className="dropdown css-2b097c-container"
                            onKeyDown={[Function]}
                          >
                            <Control
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              innerRef={[Function]}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              menuIsOpen={false}
                              options={
                                Array [
                                  Object {
                                    "label": "Standard",
                                    "value": Object {
                                      "name": "Standard",
                                    },
                                  },
                                  Object {
                                    "label": "Custom HTML",
                                    "value": Object {
                                      "name": "Custom HTML",
                                    },
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "dropdown",
                                  "classNamePrefix": "dropdown",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "Option": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "cursor": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "id": undefined,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onKeyDown": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "Standard",
                                      "value": Object {
                                        "name": "Standard",
                                      },
                                    },
                                    Object {
                                      "label": "Custom HTML",
                                      "value": Object {
                                        "name": "Custom HTML",
                                      },
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": -1,
                                  "tabSelectsValue": true,
                                  "type": undefined,
                                  "updateCursor": [Function],
                                  "value": Object {
                                    "label": "Custom HTML",
                                    "value": Object {
                                      "name": "Custom HTML",
                                    },
                                  },
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="dropdown__control"
                                css={
                                  Object {
                                    "&:hover": Object {
                                      "borderColor": "hsl(0, 0%, 70%)",
                                    },
                                    "alignItems": "center",
                                    "backgroundColor": "hsl(0, 0%, 100%)",
                                    "borderColor": "hsl(0, 0%, 80%)",
                                    "borderRadius": 4,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "boxShadow": null,
                                    "boxSizing": "border-box",
                                    "cursor": "default",
                                    "display": "flex",
                                    "flexWrap": "wrap",
                                    "justifyContent": "space-between",
                                    "label": "control",
                                    "minHeight": 38,
                                    "outline": "0 !important",
                                    "position": "relative",
                                    "transition": "all 100ms",
                                  }
                                }
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <div
                                  className="dropdown__control css-yk16xz-control"
                                  onMouseDown={[Function]}
                                  onTouchEnd={[Function]}
                                >
                                  <ValueContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                        Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "label": "Standard",
                                            "value": Object {
                                              "name": "Standard",
                                            },
                                          },
                                          Object {
                                            "label": "Custom HTML",
                                            "value": Object {
                                              "name": "Custom HTML",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__value-container dropdown__value-container--has-value"
                                      css={
                                        Object {
                                          "WebkitOverflowScrolling": "touch",
                                          "alignItems": "center",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flex": 1,
                                          "flexWrap": "wrap",
                                          "overflow": "hidden",
                                          "padding": "2px 8px",
                                          "position": "relative",
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__value-container dropdown__value-container--has-value css-g1d714-ValueContainer"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "Custom HTML",
                                              "value": Object {
                                                "name": "Custom HTML",
                                              },
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SingleValue"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            className="dropdown__single-value"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "label": "singleValue",
                                                "marginLeft": 2,
                                                "marginRight": 2,
                                                "maxWidth": "calc(100% - 8px)",
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "textOverflow": "ellipsis",
                                                "top": "50%",
                                                "transform": "translateY(-50%)",
                                                "whiteSpace": "nowrap",
                                              }
                                            }
                                          >
                                            <div
                                              className="dropdown__single-value css-1uccc91-singleValue"
                                            >
                                              Custom HTML
                                            </div>
                                          </EmotionCssPropInternal>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-7-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex={-1}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            css={
                                              Object {
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 20%)",
                                                "margin": 2,
                                                "paddingBottom": 2,
                                                "paddingTop": 2,
                                                "visibility": "visible",
                                              }
                                            }
                                          >
                                            <div
                                              className="css-b8ldur-Input"
                                            >
                                              <AutosizeInput
                                                aria-autocomplete="list"
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoCorrect="off"
                                                className="dropdown__input"
                                                disabled={false}
                                                id="react-select-7-input"
                                                injectStyles={true}
                                                inputRef={[Function]}
                                                inputStyle={
                                                  Object {
                                                    "background": 0,
                                                    "border": 0,
                                                    "color": "inherit",
                                                    "fontSize": "inherit",
                                                    "label": "input",
                                                    "opacity": 1,
                                                    "outline": 0,
                                                    "padding": 0,
                                                  }
                                                }
                                                minWidth={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                spellCheck="false"
                                                tabIndex={-1}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="dropdown__input"
                                                  style={
                                                    Object {
                                                      "display": "inline-block",
                                                    }
                                                  }
                                                >
                                                  <input
                                                    aria-autocomplete="list"
                                                    autoCapitalize="none"
                                                    autoComplete="off"
                                                    autoCorrect="off"
                                                    disabled={false}
                                                    id="react-select-7-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    spellCheck="false"
                                                    style={
                                                      Object {
                                                        "background": 0,
                                                        "border": 0,
                                                        "boxSizing": "content-box",
                                                        "color": "inherit",
                                                        "fontSize": "inherit",
                                                        "label": "input",
                                                        "opacity": 1,
                                                        "outline": 0,
                                                        "padding": 0,
                                                        "width": "2px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    type="text"
                                                    value=""
                                                  />
                                                  <div
                                                    style={
                                                      Object {
                                                        "height": 0,
                                                        "left": 0,
                                                        "overflow": "scroll",
                                                        "position": "absolute",
                                                        "top": 0,
                                                        "visibility": "hidden",
                                                        "whiteSpace": "pre",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </AutosizeInput>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </Input>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </ValueContainer>
                                  <IndicatorsContainer
                                    clearValue={[Function]}
                                    cx={[Function]}
                                    getStyles={[Function]}
                                    getValue={[Function]}
                                    hasValue={true}
                                    isDisabled={false}
                                    isMulti={false}
                                    isRtl={false}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Standard",
                                          "value": Object {
                                            "name": "Standard",
                                          },
                                        },
                                        Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      ]
                                    }
                                    selectOption={[Function]}
                                    selectProps={
                                      Object {
                                        "backspaceRemovesValue": true,
                                        "blurInputOnSelect": true,
                                        "captureMenuScroll": false,
                                        "className": "dropdown",
                                        "classNamePrefix": "dropdown",
                                        "closeMenuOnScroll": false,
                                        "closeMenuOnSelect": true,
                                        "components": Object {
                                          "Option": [Function],
                                        },
                                        "controlShouldRenderValue": true,
                                        "cursor": null,
                                        "escapeClearsValue": false,
                                        "filterOption": null,
                                        "formatGroupLabel": [Function],
                                        "getOptionLabel": [Function],
                                        "getOptionValue": [Function],
                                        "id": undefined,
                                        "inputValue": "",
                                        "isClearable": false,
                                        "isDisabled": false,
                                        "isLoading": false,
                                        "isMulti": false,
                                        "isOptionDisabled": [Function],
                                        "isRtl": false,
                                        "isSearchable": true,
                                        "loadingMessage": [Function],
                                        "maxMenuHeight": 300,
                                        "menuIsOpen": false,
                                        "menuPlacement": "bottom",
                                        "menuPosition": "absolute",
                                        "menuShouldBlockScroll": false,
                                        "menuShouldScrollIntoView": true,
                                        "minMenuHeight": 140,
                                        "noOptionsMessage": [Function],
                                        "onChange": [Function],
                                        "onInputChange": [Function],
                                        "onKeyDown": [Function],
                                        "onMenuClose": [Function],
                                        "onMenuOpen": [Function],
                                        "openMenuOnClick": true,
                                        "openMenuOnFocus": false,
                                        "options": Array [
                                          Object {
                                            "label": "Standard",
                                            "value": Object {
                                              "name": "Standard",
                                            },
                                          },
                                          Object {
                                            "label": "Custom HTML",
                                            "value": Object {
                                              "name": "Custom HTML",
                                            },
                                          },
                                        ],
                                        "pageSize": 5,
                                        "placeholder": "",
                                        "screenReaderStatus": [Function],
                                        "styles": Object {},
                                        "tabIndex": -1,
                                        "tabSelectsValue": true,
                                        "type": undefined,
                                        "updateCursor": [Function],
                                        "value": Object {
                                          "label": "Custom HTML",
                                          "value": Object {
                                            "name": "Custom HTML",
                                          },
                                        },
                                      }
                                    }
                                    setValue={[Function]}
                                    theme={
                                      Object {
                                        "borderRadius": 4,
                                        "colors": Object {
                                          "danger": "#DE350B",
                                          "dangerLight": "#FFBDAD",
                                          "neutral0": "hsl(0, 0%, 100%)",
                                          "neutral10": "hsl(0, 0%, 90%)",
                                          "neutral20": "hsl(0, 0%, 80%)",
                                          "neutral30": "hsl(0, 0%, 70%)",
                                          "neutral40": "hsl(0, 0%, 60%)",
                                          "neutral5": "hsl(0, 0%, 95%)",
                                          "neutral50": "hsl(0, 0%, 50%)",
                                          "neutral60": "hsl(0, 0%, 40%)",
                                          "neutral70": "hsl(0, 0%, 30%)",
                                          "neutral80": "hsl(0, 0%, 20%)",
                                          "neutral90": "hsl(0, 0%, 10%)",
                                          "primary": "#2684FF",
                                          "primary25": "#DEEBFF",
                                          "primary50": "#B2D4FF",
                                          "primary75": "#4C9AFF",
                                        },
                                        "spacing": Object {
                                          "baseUnit": 4,
                                          "controlHeight": 38,
                                          "menuGutter": 8,
                                        },
                                      }
                                    }
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="dropdown__indicators"
                                      css={
                                        Object {
                                          "alignItems": "center",
                                          "alignSelf": "stretch",
                                          "boxSizing": "border-box",
                                          "display": "flex",
                                          "flexShrink": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="dropdown__indicators css-1hb7zxy-IndicatorsContainer"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                            className="dropdown__indicator-separator"
                                            css={
                                              Object {
                                                "alignSelf": "stretch",
                                                "backgroundColor": "hsl(0, 0%, 80%)",
                                                "boxSizing": "border-box",
                                                "label": "indicatorSeparator",
                                                "marginBottom": 8,
                                                "marginTop": 8,
                                                "width": 1,
                                              }
                                            }
                                          >
                                            <span
                                              className="dropdown__indicator-separator css-1okebmr-indicatorSeparator"
                                            />
                                          </EmotionCssPropInternal>
                                        </IndicatorSeparator>
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "Standard",
                                                "value": Object {
                                                  "name": "Standard",
                                                },
                                              },
                                              Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "dropdown",
                                              "classNamePrefix": "dropdown",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "Option": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "cursor": null,
                                              "escapeClearsValue": false,
                                              "filterOption": null,
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "id": undefined,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onKeyDown": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "Standard",
                                                  "value": Object {
                                                    "name": "Standard",
                                                  },
                                                },
                                                Object {
                                                  "label": "Custom HTML",
                                                  "value": Object {
                                                    "name": "Custom HTML",
                                                  },
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "",
                                              "screenReaderStatus": [Function],
                                              "styles": Object {},
                                              "tabIndex": -1,
                                              "tabSelectsValue": true,
                                              "type": undefined,
                                              "updateCursor": [Function],
                                              "value": Object {
                                                "label": "Custom HTML",
                                                "value": Object {
                                                  "name": "Custom HTML",
                                                },
                                              },
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#DE350B",
                                                "dangerLight": "#FFBDAD",
                                                "neutral0": "hsl(0, 0%, 100%)",
                                                "neutral10": "hsl(0, 0%, 90%)",
                                                "neutral20": "hsl(0, 0%, 80%)",
                                                "neutral30": "hsl(0, 0%, 70%)",
                                                "neutral40": "hsl(0, 0%, 60%)",
                                                "neutral5": "hsl(0, 0%, 95%)",
                                                "neutral50": "hsl(0, 0%, 50%)",
                                                "neutral60": "hsl(0, 0%, 40%)",
                                                "neutral70": "hsl(0, 0%, 30%)",
                                                "neutral80": "hsl(0, 0%, 20%)",
                                                "neutral90": "hsl(0, 0%, 10%)",
                                                "primary": "#2684FF",
                                                "primary25": "#DEEBFF",
                                                "primary50": "#B2D4FF",
                                                "primary75": "#4C9AFF",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <EmotionCssPropInternal
                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                            aria-hidden="true"
                                            className="dropdown__indicator dropdown__dropdown-indicator"
                                            css={
                                              Object {
                                                ":hover": Object {
                                                  "color": "hsl(0, 0%, 60%)",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "hsl(0, 0%, 80%)",
                                                "display": "flex",
                                                "label": "indicatorContainer",
                                                "padding": 8,
                                                "transition": "color 150ms",
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                          >
                                            <div
                                              aria-hidden="true"
                                              className="dropdown__indicator dropdown__dropdown-indicator css-tlfecz-indicatorContainer"
                                              onMouseDown={[Function]}
                                              onTouchEnd={[Function]}
                                            >
                                              <DownChevron>
                                                <Svg
                                                  size={20}
                                                >
                                                  <EmotionCssPropInternal
                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                    aria-hidden="true"
                                                    css={
                                                      Object {
                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                        "name": "19bqh2r",
                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;",
                                                        "toString": [Function],
                                                      }
                                                    }
                                                    focusable="false"
                                                    height={20}
                                                    viewBox="0 0 20 20"
                                                    width={20}
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-6q0nyr-Svg"
                                                      focusable="false"
                                                      height={20}
                                                      viewBox="0 0 20 20"
                                                      width={20}
                                                    >
                                                      <path
                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                      />
                                                    </svg>
                                                  </EmotionCssPropInternal>
                                                </Svg>
                                              </DownChevron>
                                            </div>
                                          </EmotionCssPropInternal>
                                        </DropdownIndicator>
                                      </div>
                                    </EmotionCssPropInternal>
                                  </IndicatorsContainer>
                                </div>
                              </EmotionCssPropInternal>
                            </Control>
                          </div>
                        </EmotionCssPropInternal>
                      </SelectContainer>
                    </Select>
                  </StateManager>
                </div>
              </DropdownInput>
            </ItemDropdown>
          </div>
          <div>
            <label>
              Published At Date:
            </label>
            <withStyles(SingleDatePicker)
              anchorDirection="left"
              appendToBody={false}
              block={false}
              calendarInfoPosition="bottom"
              customCloseIcon={null}
              customInputIcon={
                <img
                  alt="dropdown indicator"
                  src="https://assets.quill.org/images/icons/dropdown.svg"
                  style={null}
                />
              }
              date={"2019-05-10T18:45:06.000Z"}
              dayPickerNavigationInlineStyles={null}
              daySize={39}
              disableScroll={false}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              firstDayOfWeek={null}
              focused={false}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              horizontalMonthPadding={13}
              id="date-picker"
              initialVisibleMonth={null}
              inputIconPosition="after"
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepFocusOnInput={false}
              keepOpenOnDateSelect={false}
              monthFormat="MMMM YYYY"
              navNext="âº"
              navPosition="navPositionTop"
              navPrev="â¹"
              noBorder={false}
              numberOfMonths={1}
              onClose={[Function]}
              onDateChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              openDirection="down"
              orientation="horizontal"
              phrases={
                Object {
                  "calendarLabel": "Calendar",
                  "chooseAvailableDate": [Function],
                  "clearDate": "Clear Date",
                  "closeDatePicker": "Close",
                  "dateIsSelected": [Function],
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month.",
                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                  "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                  "moveFocusByOneMonth": "Switch months.",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                  "openThisPanel": "Open this panel.",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field.",
                  "roleDescription": "datepicker",
                  "selectFocusedDate": "Select the date in focus.",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              placeholder="Date"
              readOnly={false}
              regular={false}
              renderCalendarInfo={null}
              renderDayContents={null}
              renderMonthElement={null}
              renderMonthText={null}
              renderNavNextButton={null}
              renderNavPrevButton={null}
              renderWeekHeaderElement={null}
              reopenPickerOnClearDate={false}
              required={false}
              screenReaderInputMessage=""
              showClearDate={false}
              showDefaultInputIcon={false}
              small={false}
              verticalHeight={null}
              verticalSpacing={22}
              weekDayFormat="dd"
              withFullScreenPortal={false}
              withPortal={false}
            >
              <WithStyles
                anchorDirection="left"
                appendToBody={false}
                block={false}
                calendarInfoPosition="bottom"
                customCloseIcon={null}
                customInputIcon={
                  <img
                    alt="dropdown indicator"
                    src="https://assets.quill.org/images/icons/dropdown.svg"
                    style={null}
                  />
                }
                date={"2019-05-10T18:45:06.000Z"}
                dayPickerNavigationInlineStyles={null}
                daySize={39}
                disableScroll={false}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                firstDayOfWeek={null}
                focused={false}
                forwardedRef={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                horizontalMonthPadding={13}
                id="date-picker"
                initialVisibleMonth={null}
                inputIconPosition="after"
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepFocusOnInput={false}
                keepOpenOnDateSelect={false}
                monthFormat="MMMM YYYY"
                navNext="âº"
                navPosition="navPositionTop"
                navPrev="â¹"
                noBorder={false}
                numberOfMonths={1}
                onClose={[Function]}
                onDateChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                openDirection="down"
                orientation="horizontal"
                phrases={
                  Object {
                    "calendarLabel": "Calendar",
                    "chooseAvailableDate": [Function],
                    "clearDate": "Clear Date",
                    "closeDatePicker": "Close",
                    "dateIsSelected": [Function],
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month.",
                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                    "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                    "moveFocusByOneMonth": "Switch months.",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                    "openThisPanel": "Open this panel.",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field.",
                    "roleDescription": "datepicker",
                    "selectFocusedDate": "Select the date in focus.",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                placeholder="Date"
                readOnly={false}
                regular={false}
                renderCalendarInfo={null}
                renderDayContents={null}
                renderMonthElement={null}
                renderMonthText={null}
                renderNavNextButton={null}
                renderNavPrevButton={null}
                renderWeekHeaderElement={null}
                reopenPickerOnClearDate={false}
                required={false}
                screenReaderInputMessage=""
                showClearDate={false}
                showDefaultInputIcon={false}
                small={false}
                verticalHeight={null}
                verticalSpacing={22}
                weekDayFormat="dd"
                withFullScreenPortal={false}
                withPortal={false}
              >
                <SingleDatePicker
                  anchorDirection="left"
                  appendToBody={false}
                  block={false}
                  calendarInfoPosition="bottom"
                  css={[Function]}
                  customCloseIcon={null}
                  customInputIcon={
                    <img
                      alt="dropdown indicator"
                      src="https://assets.quill.org/images/icons/dropdown.svg"
                      style={null}
                    />
                  }
                  date={"2019-05-10T18:45:06.000Z"}
                  dayPickerNavigationInlineStyles={null}
                  daySize={39}
                  disableScroll={false}
                  disabled={false}
                  displayFormat={[Function]}
                  enableOutsideDays={false}
                  firstDayOfWeek={null}
                  focused={false}
                  hideKeyboardShortcutsPanel={false}
                  horizontalMargin={0}
                  horizontalMonthPadding={13}
                  id="date-picker"
                  initialVisibleMonth={null}
                  inputIconPosition="after"
                  isDayBlocked={[Function]}
                  isDayHighlighted={[Function]}
                  isOutsideRange={[Function]}
                  isRTL={false}
                  keepFocusOnInput={false}
                  keepOpenOnDateSelect={false}
                  monthFormat="MMMM YYYY"
                  navNext="âº"
                  navPosition="navPositionTop"
                  navPrev="â¹"
                  noBorder={false}
                  numberOfMonths={1}
                  onClose={[Function]}
                  onDateChange={[Function]}
                  onFocusChange={[Function]}
                  onNextMonthClick={[Function]}
                  onPrevMonthClick={[Function]}
                  openDirection="down"
                  orientation="horizontal"
                  phrases={
                    Object {
                      "calendarLabel": "Calendar",
                      "chooseAvailableDate": [Function],
                      "clearDate": "Clear Date",
                      "closeDatePicker": "Close",
                      "dateIsSelected": [Function],
                      "dateIsUnavailable": [Function],
                      "enterKey": "Enter key",
                      "escape": "Escape key",
                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                      "homeEnd": "Home and end keys",
                      "jumpToNextMonth": "Move forward to switch to the next month.",
                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                      "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                      "keyboardShortcuts": "Keyboard Shortcuts",
                      "leftArrowRightArrow": "Right and left arrow keys",
                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                      "moveFocusByOneMonth": "Switch months.",
                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                      "openThisPanel": "Open this panel.",
                      "pageUpPageDown": "page up and page down keys",
                      "questionMark": "Question mark",
                      "returnFocusToInput": "Return to the date input field.",
                      "roleDescription": "datepicker",
                      "selectFocusedDate": "Select the date in focus.",
                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                      "upArrowDownArrow": "up and down arrow keys",
                    }
                  }
                  placeholder="Date"
                  readOnly={false}
                  regular={false}
                  renderCalendarInfo={null}
                  renderDayContents={null}
                  renderMonthElement={null}
                  renderMonthText={null}
                  renderNavNextButton={null}
                  renderNavPrevButton={null}
                  renderWeekHeaderElement={null}
                  reopenPickerOnClearDate={false}
                  required={false}
                  screenReaderInputMessage=""
                  showClearDate={false}
                  showDefaultInputIcon={false}
                  small={false}
                  styles={
                    Object {
                      "SingleDatePicker": "SingleDatePicker",
                      "SingleDatePicker__block": "SingleDatePicker__block",
                      "SingleDatePicker_closeButton": "SingleDatePicker_closeButton",
                      "SingleDatePicker_closeButton_svg": "SingleDatePicker_closeButton_svg",
                      "SingleDatePicker_picker": "SingleDatePicker_picker",
                      "SingleDatePicker_picker__directionLeft": "SingleDatePicker_picker__directionLeft",
                      "SingleDatePicker_picker__directionRight": "SingleDatePicker_picker__directionRight",
                      "SingleDatePicker_picker__fullScreenPortal": "SingleDatePicker_picker__fullScreenPortal",
                      "SingleDatePicker_picker__portal": "SingleDatePicker_picker__portal",
                      "SingleDatePicker_picker__rtl": "SingleDatePicker_picker__rtl",
                    }
                  }
                  theme={
                    Object {
                      "reactDates": Object {
                        "border": Object {
                          "input": Object {
                            "border": 0,
                            "borderBottom": "2px solid transparent",
                            "borderBottomFocused": "2px solid #008489",
                            "borderFocused": 0,
                            "borderLeft": 0,
                            "borderLeftFocused": 0,
                            "borderRadius": 0,
                            "borderRight": 0,
                            "borderRightFocused": 0,
                            "borderTop": 0,
                            "borderTopFocused": 0,
                            "outlineFocused": 0,
                          },
                          "pickerInput": Object {
                            "borderRadius": 2,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                          },
                        },
                        "color": Object {
                          "background": "#fff",
                          "backgroundDark": "#f2f2f2",
                          "backgroundFocused": "#fff",
                          "blocked_calendar": Object {
                            "backgroundColor": "#cacccd",
                            "backgroundColor_active": "#cacccd",
                            "backgroundColor_hover": "#cacccd",
                            "borderColor": "#cacccd",
                            "borderColor_active": "#cacccd",
                            "borderColor_hover": "#cacccd",
                            "color": "#82888a",
                            "color_active": "#82888a",
                            "color_hover": "#82888a",
                          },
                          "blocked_out_of_range": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "borderColor": "#e4e7e7",
                            "borderColor_active": "#e4e7e7",
                            "borderColor_hover": "#e4e7e7",
                            "color": "#cacccd",
                            "color_active": "#cacccd",
                            "color_hover": "#cacccd",
                          },
                          "border": "rgb(219, 219, 219)",
                          "core": Object {
                            "border": "#dbdbdb",
                            "borderBright": "#f4f5f5",
                            "borderLight": "#e4e7e7",
                            "borderLighter": "#eceeee",
                            "borderMedium": "#c4c4c4",
                            "gray": "#484848",
                            "grayLight": "#82888a",
                            "grayLighter": "#cacccd",
                            "grayLightest": "#f2f2f2",
                            "primary": "#00a699",
                            "primaryShade_1": "#33dacd",
                            "primaryShade_2": "#66e2da",
                            "primaryShade_3": "#80e8e0",
                            "primaryShade_4": "#b2f1ec",
                            "primary_dark": "#008489",
                            "secondary": "#007a87",
                            "white": "#fff",
                            "yellow": "#ffe8bc",
                            "yellow_dark": "#ffce71",
                          },
                          "disabled": "#f2f2f2",
                          "highlighted": Object {
                            "backgroundColor": "#ffe8bc",
                            "backgroundColor_active": "#ffce71",
                            "backgroundColor_hover": "#ffce71",
                            "color": "#484848",
                            "color_active": "#484848",
                            "color_hover": "#484848",
                          },
                          "hoveredSpan": Object {
                            "backgroundColor": "#b2f1ec",
                            "backgroundColor_active": "#80e8e0",
                            "backgroundColor_hover": "#b2f1ec",
                            "borderColor": "#80e8e0",
                            "borderColor_active": "#80e8e0",
                            "borderColor_hover": "#80e8e0",
                            "color": "#007a87",
                            "color_active": "#007a87",
                            "color_hover": "#007a87",
                          },
                          "minimumNights": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "borderColor": "#eceeee",
                            "color": "#cacccd",
                            "color_active": "#cacccd",
                            "color_hover": "#cacccd",
                          },
                          "outside": Object {
                            "backgroundColor": "#fff",
                            "backgroundColor_active": "#fff",
                            "backgroundColor_hover": "#fff",
                            "color": "#484848",
                            "color_active": "#484848",
                            "color_hover": "#484848",
                          },
                          "placeholderText": "#757575",
                          "selected": Object {
                            "backgroundColor": "#00a699",
                            "backgroundColor_active": "#00a699",
                            "backgroundColor_hover": "#00a699",
                            "borderColor": "#00a699",
                            "borderColor_active": "#00a699",
                            "borderColor_hover": "#00a699",
                            "color": "#fff",
                            "color_active": "#fff",
                            "color_hover": "#fff",
                          },
                          "selectedSpan": Object {
                            "backgroundColor": "#66e2da",
                            "backgroundColor_active": "#33dacd",
                            "backgroundColor_hover": "#33dacd",
                            "borderColor": "#33dacd",
                            "borderColor_active": "#00a699",
                            "borderColor_hover": "#00a699",
                            "color": "#fff",
                            "color_active": "#fff",
                            "color_hover": "#fff",
                          },
                          "text": "#484848",
                          "textDisabled": "#dbdbdb",
                          "textFocused": "#007a87",
                        },
                        "font": Object {
                          "captionSize": 18,
                          "input": Object {
                            "letterSpacing_small": "0.2px",
                            "lineHeight": "24px",
                            "lineHeight_small": "18px",
                            "size": 19,
                            "size_small": 15,
                            "styleDisabled": "italic",
                            "weight": 200,
                          },
                          "size": 14,
                        },
                        "noScrollBarOnVerticalScrollable": false,
                        "sizing": Object {
                          "arrowWidth": 24,
                          "inputWidth": 130,
                          "inputWidth_small": 97,
                        },
                        "spacing": Object {
                          "captionPaddingBottom": 37,
                          "captionPaddingTop": 22,
                          "dayPickerHorizontalPadding": 9,
                          "displayTextPaddingBottom": 9,
                          "displayTextPaddingBottom_small": 5,
                          "displayTextPaddingHorizontal": undefined,
                          "displayTextPaddingHorizontal_small": undefined,
                          "displayTextPaddingLeft": 11,
                          "displayTextPaddingLeft_small": 7,
                          "displayTextPaddingRight": 11,
                          "displayTextPaddingRight_small": 7,
                          "displayTextPaddingTop": 11,
                          "displayTextPaddingTop_small": 7,
                          "displayTextPaddingVertical": undefined,
                          "displayTextPaddingVertical_small": undefined,
                          "inputPadding": 0,
                        },
                        "zIndex": 0,
                      },
                    }
                  }
                  verticalHeight={null}
                  verticalSpacing={22}
                  weekDayFormat="dd"
                  withFullScreenPortal={false}
                  withPortal={false}
                >
                  <div
                    className="SingleDatePicker SingleDatePicker_1"
                  >
                    <OutsideClickHandler
                      disabled={false}
                      display="block"
                      onOutsideClick={[Function]}
                      useCapture={true}
                    >
                      <div>
                        <SingleDatePickerInputController
                          block={false}
                          customCloseIcon={null}
                          customInputIcon={
                            <img
                              alt="dropdown indicator"
                              src="https://assets.quill.org/images/icons/dropdown.svg"
                              style={null}
                            />
                          }
                          date={"2019-05-10T18:45:06.000Z"}
                          disabled={false}
                          displayFormat={[Function]}
                          focused={false}
                          id="date-picker"
                          inputIconPosition="after"
                          isFocused={false}
                          isOutsideRange={[Function]}
                          isRTL={false}
                          keepOpenOnDateSelect={false}
                          noBorder={false}
                          onClose={[Function]}
                          onDateChange={[Function]}
                          onFocusChange={[Function]}
                          onKeyDownArrowDown={[Function]}
                          onKeyDownQuestionMark={[Function]}
                          openDirection="down"
                          phrases={
                            Object {
                              "calendarLabel": "Calendar",
                              "chooseAvailableDate": [Function],
                              "clearDate": "Clear Date",
                              "closeDatePicker": "Close",
                              "dateIsSelected": [Function],
                              "dateIsUnavailable": [Function],
                              "enterKey": "Enter key",
                              "escape": "Escape key",
                              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                              "homeEnd": "Home and end keys",
                              "jumpToNextMonth": "Move forward to switch to the next month.",
                              "jumpToPrevMonth": "Move backward to switch to the previous month.",
                              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                              "keyboardShortcuts": "Keyboard Shortcuts",
                              "leftArrowRightArrow": "Right and left arrow keys",
                              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                              "moveFocusByOneMonth": "Switch months.",
                              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                              "openThisPanel": "Open this panel.",
                              "pageUpPageDown": "page up and page down keys",
                              "questionMark": "Question mark",
                              "returnFocusToInput": "Return to the date input field.",
                              "roleDescription": "datepicker",
                              "selectFocusedDate": "Select the date in focus.",
                              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                              "upArrowDownArrow": "up and down arrow keys",
                            }
                          }
                          placeholder="Date"
                          readOnly={false}
                          regular={false}
                          reopenPickerOnClearDate={false}
                          required={false}
                          screenReaderMessage=""
                          showCaret={true}
                          showClearDate={false}
                          showDefaultInputIcon={false}
                          small={false}
                          verticalSpacing={22}
                        >
                          <withStyles(SingleDatePickerInput)
                            block={false}
                            customCloseIcon={null}
                            customInputIcon={
                              <img
                                alt="dropdown indicator"
                                src="https://assets.quill.org/images/icons/dropdown.svg"
                                style={null}
                              />
                            }
                            disabled={false}
                            displayValue="05/10/2019"
                            focused={false}
                            id="date-picker"
                            inputIconPosition="after"
                            isFocused={false}
                            isRTL={false}
                            noBorder={false}
                            onChange={[Function]}
                            onClearDate={[Function]}
                            onFocus={[Function]}
                            onKeyDownArrowDown={[Function]}
                            onKeyDownQuestionMark={[Function]}
                            onKeyDownShiftTab={[Function]}
                            onKeyDownTab={[Function]}
                            openDirection="down"
                            phrases={
                              Object {
                                "calendarLabel": "Calendar",
                                "chooseAvailableDate": [Function],
                                "clearDate": "Clear Date",
                                "closeDatePicker": "Close",
                                "dateIsSelected": [Function],
                                "dateIsUnavailable": [Function],
                                "enterKey": "Enter key",
                                "escape": "Escape key",
                                "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                "homeEnd": "Home and end keys",
                                "jumpToNextMonth": "Move forward to switch to the next month.",
                                "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                "keyboardShortcuts": "Keyboard Shortcuts",
                                "leftArrowRightArrow": "Right and left arrow keys",
                                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                "moveFocusByOneMonth": "Switch months.",
                                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                "openThisPanel": "Open this panel.",
                                "pageUpPageDown": "page up and page down keys",
                                "questionMark": "Question mark",
                                "returnFocusToInput": "Return to the date input field.",
                                "roleDescription": "datepicker",
                                "selectFocusedDate": "Select the date in focus.",
                                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                "upArrowDownArrow": "up and down arrow keys",
                              }
                            }
                            placeholder="Date"
                            readOnly={false}
                            regular={false}
                            required={false}
                            screenReaderMessage=""
                            showCaret={true}
                            showClearDate={false}
                            showDefaultInputIcon={false}
                            small={false}
                            verticalSpacing={22}
                          >
                            <WithStyles
                              block={false}
                              customCloseIcon={null}
                              customInputIcon={
                                <img
                                  alt="dropdown indicator"
                                  src="https://assets.quill.org/images/icons/dropdown.svg"
                                  style={null}
                                />
                              }
                              disabled={false}
                              displayValue="05/10/2019"
                              focused={false}
                              forwardedRef={null}
                              id="date-picker"
                              inputIconPosition="after"
                              isFocused={false}
                              isRTL={false}
                              noBorder={false}
                              onChange={[Function]}
                              onClearDate={[Function]}
                              onFocus={[Function]}
                              onKeyDownArrowDown={[Function]}
                              onKeyDownQuestionMark={[Function]}
                              onKeyDownShiftTab={[Function]}
                              onKeyDownTab={[Function]}
                              openDirection="down"
                              phrases={
                                Object {
                                  "calendarLabel": "Calendar",
                                  "chooseAvailableDate": [Function],
                                  "clearDate": "Clear Date",
                                  "closeDatePicker": "Close",
                                  "dateIsSelected": [Function],
                                  "dateIsUnavailable": [Function],
                                  "enterKey": "Enter key",
                                  "escape": "Escape key",
                                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                  "homeEnd": "Home and end keys",
                                  "jumpToNextMonth": "Move forward to switch to the next month.",
                                  "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                  "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                  "keyboardShortcuts": "Keyboard Shortcuts",
                                  "leftArrowRightArrow": "Right and left arrow keys",
                                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                  "moveFocusByOneMonth": "Switch months.",
                                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                  "openThisPanel": "Open this panel.",
                                  "pageUpPageDown": "page up and page down keys",
                                  "questionMark": "Question mark",
                                  "returnFocusToInput": "Return to the date input field.",
                                  "roleDescription": "datepicker",
                                  "selectFocusedDate": "Select the date in focus.",
                                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                  "upArrowDownArrow": "up and down arrow keys",
                                }
                              }
                              placeholder="Date"
                              readOnly={false}
                              regular={false}
                              required={false}
                              screenReaderMessage=""
                              showCaret={true}
                              showClearDate={false}
                              showDefaultInputIcon={false}
                              small={false}
                              verticalSpacing={22}
                            >
                              <SingleDatePickerInput
                                block={false}
                                css={[Function]}
                                customCloseIcon={null}
                                customInputIcon={
                                  <img
                                    alt="dropdown indicator"
                                    src="https://assets.quill.org/images/icons/dropdown.svg"
                                    style={null}
                                  />
                                }
                                disabled={false}
                                displayValue="05/10/2019"
                                focused={false}
                                id="date-picker"
                                inputIconPosition="after"
                                isFocused={false}
                                isRTL={false}
                                noBorder={false}
                                onChange={[Function]}
                                onClearDate={[Function]}
                                onFocus={[Function]}
                                onKeyDownArrowDown={[Function]}
                                onKeyDownQuestionMark={[Function]}
                                onKeyDownShiftTab={[Function]}
                                onKeyDownTab={[Function]}
                                openDirection="down"
                                phrases={
                                  Object {
                                    "calendarLabel": "Calendar",
                                    "chooseAvailableDate": [Function],
                                    "clearDate": "Clear Date",
                                    "closeDatePicker": "Close",
                                    "dateIsSelected": [Function],
                                    "dateIsUnavailable": [Function],
                                    "enterKey": "Enter key",
                                    "escape": "Escape key",
                                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                    "homeEnd": "Home and end keys",
                                    "jumpToNextMonth": "Move forward to switch to the next month.",
                                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                    "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                    "keyboardShortcuts": "Keyboard Shortcuts",
                                    "leftArrowRightArrow": "Right and left arrow keys",
                                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                    "moveFocusByOneMonth": "Switch months.",
                                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                    "openThisPanel": "Open this panel.",
                                    "pageUpPageDown": "page up and page down keys",
                                    "questionMark": "Question mark",
                                    "returnFocusToInput": "Return to the date input field.",
                                    "roleDescription": "datepicker",
                                    "selectFocusedDate": "Select the date in focus.",
                                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                    "upArrowDownArrow": "up and down arrow keys",
                                  }
                                }
                                placeholder="Date"
                                readOnly={false}
                                regular={false}
                                required={false}
                                screenReaderMessage=""
                                showCaret={true}
                                showClearDate={false}
                                showDefaultInputIcon={false}
                                small={false}
                                styles={
                                  Object {
                                    "SingleDatePickerInput": "SingleDatePickerInput",
                                    "SingleDatePickerInput__block": "SingleDatePickerInput__block",
                                    "SingleDatePickerInput__disabled": "SingleDatePickerInput__disabled",
                                    "SingleDatePickerInput__rtl": "SingleDatePickerInput__rtl",
                                    "SingleDatePickerInput__showClearDate": "SingleDatePickerInput__showClearDate",
                                    "SingleDatePickerInput__withBorder": "SingleDatePickerInput__withBorder",
                                    "SingleDatePickerInput_calendarIcon": "SingleDatePickerInput_calendarIcon",
                                    "SingleDatePickerInput_calendarIcon_svg": "SingleDatePickerInput_calendarIcon_svg",
                                    "SingleDatePickerInput_clearDate": "SingleDatePickerInput_clearDate",
                                    "SingleDatePickerInput_clearDate__default": "SingleDatePickerInput_clearDate__default",
                                    "SingleDatePickerInput_clearDate__hide": "SingleDatePickerInput_clearDate__hide",
                                    "SingleDatePickerInput_clearDate__small": "SingleDatePickerInput_clearDate__small",
                                    "SingleDatePickerInput_clearDate_svg": "SingleDatePickerInput_clearDate_svg",
                                    "SingleDatePickerInput_clearDate_svg__small": "SingleDatePickerInput_clearDate_svg__small",
                                  }
                                }
                                theme={
                                  Object {
                                    "reactDates": Object {
                                      "border": Object {
                                        "input": Object {
                                          "border": 0,
                                          "borderBottom": "2px solid transparent",
                                          "borderBottomFocused": "2px solid #008489",
                                          "borderFocused": 0,
                                          "borderLeft": 0,
                                          "borderLeftFocused": 0,
                                          "borderRadius": 0,
                                          "borderRight": 0,
                                          "borderRightFocused": 0,
                                          "borderTop": 0,
                                          "borderTopFocused": 0,
                                          "outlineFocused": 0,
                                        },
                                        "pickerInput": Object {
                                          "borderRadius": 2,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                        },
                                      },
                                      "color": Object {
                                        "background": "#fff",
                                        "backgroundDark": "#f2f2f2",
                                        "backgroundFocused": "#fff",
                                        "blocked_calendar": Object {
                                          "backgroundColor": "#cacccd",
                                          "backgroundColor_active": "#cacccd",
                                          "backgroundColor_hover": "#cacccd",
                                          "borderColor": "#cacccd",
                                          "borderColor_active": "#cacccd",
                                          "borderColor_hover": "#cacccd",
                                          "color": "#82888a",
                                          "color_active": "#82888a",
                                          "color_hover": "#82888a",
                                        },
                                        "blocked_out_of_range": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#e4e7e7",
                                          "borderColor_active": "#e4e7e7",
                                          "borderColor_hover": "#e4e7e7",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "border": "rgb(219, 219, 219)",
                                        "core": Object {
                                          "border": "#dbdbdb",
                                          "borderBright": "#f4f5f5",
                                          "borderLight": "#e4e7e7",
                                          "borderLighter": "#eceeee",
                                          "borderMedium": "#c4c4c4",
                                          "gray": "#484848",
                                          "grayLight": "#82888a",
                                          "grayLighter": "#cacccd",
                                          "grayLightest": "#f2f2f2",
                                          "primary": "#00a699",
                                          "primaryShade_1": "#33dacd",
                                          "primaryShade_2": "#66e2da",
                                          "primaryShade_3": "#80e8e0",
                                          "primaryShade_4": "#b2f1ec",
                                          "primary_dark": "#008489",
                                          "secondary": "#007a87",
                                          "white": "#fff",
                                          "yellow": "#ffe8bc",
                                          "yellow_dark": "#ffce71",
                                        },
                                        "disabled": "#f2f2f2",
                                        "highlighted": Object {
                                          "backgroundColor": "#ffe8bc",
                                          "backgroundColor_active": "#ffce71",
                                          "backgroundColor_hover": "#ffce71",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "hoveredSpan": Object {
                                          "backgroundColor": "#b2f1ec",
                                          "backgroundColor_active": "#80e8e0",
                                          "backgroundColor_hover": "#b2f1ec",
                                          "borderColor": "#80e8e0",
                                          "borderColor_active": "#80e8e0",
                                          "borderColor_hover": "#80e8e0",
                                          "color": "#007a87",
                                          "color_active": "#007a87",
                                          "color_hover": "#007a87",
                                        },
                                        "minimumNights": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "borderColor": "#eceeee",
                                          "color": "#cacccd",
                                          "color_active": "#cacccd",
                                          "color_hover": "#cacccd",
                                        },
                                        "outside": Object {
                                          "backgroundColor": "#fff",
                                          "backgroundColor_active": "#fff",
                                          "backgroundColor_hover": "#fff",
                                          "color": "#484848",
                                          "color_active": "#484848",
                                          "color_hover": "#484848",
                                        },
                                        "placeholderText": "#757575",
                                        "selected": Object {
                                          "backgroundColor": "#00a699",
                                          "backgroundColor_active": "#00a699",
                                          "backgroundColor_hover": "#00a699",
                                          "borderColor": "#00a699",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "selectedSpan": Object {
                                          "backgroundColor": "#66e2da",
                                          "backgroundColor_active": "#33dacd",
                                          "backgroundColor_hover": "#33dacd",
                                          "borderColor": "#33dacd",
                                          "borderColor_active": "#00a699",
                                          "borderColor_hover": "#00a699",
                                          "color": "#fff",
                                          "color_active": "#fff",
                                          "color_hover": "#fff",
                                        },
                                        "text": "#484848",
                                        "textDisabled": "#dbdbdb",
                                        "textFocused": "#007a87",
                                      },
                                      "font": Object {
                                        "captionSize": 18,
                                        "input": Object {
                                          "letterSpacing_small": "0.2px",
                                          "lineHeight": "24px",
                                          "lineHeight_small": "18px",
                                          "size": 19,
                                          "size_small": 15,
                                          "styleDisabled": "italic",
                                          "weight": 200,
                                        },
                                        "size": 14,
                                      },
                                      "noScrollBarOnVerticalScrollable": false,
                                      "sizing": Object {
                                        "arrowWidth": 24,
                                        "inputWidth": 130,
                                        "inputWidth_small": 97,
                                      },
                                      "spacing": Object {
                                        "captionPaddingBottom": 37,
                                        "captionPaddingTop": 22,
                                        "dayPickerHorizontalPadding": 9,
                                        "displayTextPaddingBottom": 9,
                                        "displayTextPaddingBottom_small": 5,
                                        "displayTextPaddingHorizontal": undefined,
                                        "displayTextPaddingHorizontal_small": undefined,
                                        "displayTextPaddingLeft": 11,
                                        "displayTextPaddingLeft_small": 7,
                                        "displayTextPaddingRight": 11,
                                        "displayTextPaddingRight_small": 7,
                                        "displayTextPaddingTop": 11,
                                        "displayTextPaddingTop_small": 7,
                                        "displayTextPaddingVertical": undefined,
                                        "displayTextPaddingVertical_small": undefined,
                                        "inputPadding": 0,
                                      },
                                      "zIndex": 0,
                                    },
                                  }
                                }
                                verticalSpacing={22}
                              >
                                <div
                                  className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__withBorder SingleDatePickerInput__withBorder_2"
                                >
                                  <withStyles(DateInput)
                                    block={false}
                                    disabled={false}
                                    displayValue="05/10/2019"
                                    focused={false}
                                    id="date-picker"
                                    isFocused={false}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDownArrowDown={[Function]}
                                    onKeyDownQuestionMark={[Function]}
                                    onKeyDownShiftTab={[Function]}
                                    onKeyDownTab={[Function]}
                                    openDirection="down"
                                    placeholder="Date"
                                    readOnly={false}
                                    regular={false}
                                    required={false}
                                    screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                    showCaret={true}
                                    small={false}
                                    verticalSpacing={22}
                                  >
                                    <WithStyles
                                      block={false}
                                      disabled={false}
                                      displayValue="05/10/2019"
                                      focused={false}
                                      forwardedRef={null}
                                      id="date-picker"
                                      isFocused={false}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDownArrowDown={[Function]}
                                      onKeyDownQuestionMark={[Function]}
                                      onKeyDownShiftTab={[Function]}
                                      onKeyDownTab={[Function]}
                                      openDirection="down"
                                      placeholder="Date"
                                      readOnly={false}
                                      regular={false}
                                      required={false}
                                      screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                      showCaret={true}
                                      small={false}
                                      verticalSpacing={22}
                                    >
                                      <DateInput
                                        block={false}
                                        css={[Function]}
                                        disabled={false}
                                        displayValue="05/10/2019"
                                        focused={false}
                                        id="date-picker"
                                        isFocused={false}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDownArrowDown={[Function]}
                                        onKeyDownQuestionMark={[Function]}
                                        onKeyDownShiftTab={[Function]}
                                        onKeyDownTab={[Function]}
                                        openDirection="down"
                                        placeholder="Date"
                                        readOnly={false}
                                        regular={false}
                                        required={false}
                                        screenReaderMessage="Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                        showCaret={true}
                                        small={false}
                                        styles={
                                          Object {
                                            "DateInput": "DateInput",
                                            "DateInput__block": "DateInput__block",
                                            "DateInput__disabled": "DateInput__disabled",
                                            "DateInput__small": "DateInput__small",
                                            "DateInput_fang": "DateInput_fang",
                                            "DateInput_fangShape": "DateInput_fangShape",
                                            "DateInput_fangStroke": "DateInput_fangStroke",
                                            "DateInput_input": "DateInput_input",
                                            "DateInput_input__disabled": "DateInput_input__disabled",
                                            "DateInput_input__focused": "DateInput_input__focused",
                                            "DateInput_input__readOnly": "DateInput_input__readOnly",
                                            "DateInput_input__regular": "DateInput_input__regular",
                                            "DateInput_input__small": "DateInput_input__small",
                                            "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                          }
                                        }
                                        theme={
                                          Object {
                                            "reactDates": Object {
                                              "border": Object {
                                                "input": Object {
                                                  "border": 0,
                                                  "borderBottom": "2px solid transparent",
                                                  "borderBottomFocused": "2px solid #008489",
                                                  "borderFocused": 0,
                                                  "borderLeft": 0,
                                                  "borderLeftFocused": 0,
                                                  "borderRadius": 0,
                                                  "borderRight": 0,
                                                  "borderRightFocused": 0,
                                                  "borderTop": 0,
                                                  "borderTopFocused": 0,
                                                  "outlineFocused": 0,
                                                },
                                                "pickerInput": Object {
                                                  "borderRadius": 2,
                                                  "borderStyle": "solid",
                                                  "borderWidth": 1,
                                                },
                                              },
                                              "color": Object {
                                                "background": "#fff",
                                                "backgroundDark": "#f2f2f2",
                                                "backgroundFocused": "#fff",
                                                "blocked_calendar": Object {
                                                  "backgroundColor": "#cacccd",
                                                  "backgroundColor_active": "#cacccd",
                                                  "backgroundColor_hover": "#cacccd",
                                                  "borderColor": "#cacccd",
                                                  "borderColor_active": "#cacccd",
                                                  "borderColor_hover": "#cacccd",
                                                  "color": "#82888a",
                                                  "color_active": "#82888a",
                                                  "color_hover": "#82888a",
                                                },
                                                "blocked_out_of_range": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "borderColor": "#e4e7e7",
                                                  "borderColor_active": "#e4e7e7",
                                                  "borderColor_hover": "#e4e7e7",
                                                  "color": "#cacccd",
                                                  "color_active": "#cacccd",
                                                  "color_hover": "#cacccd",
                                                },
                                                "border": "rgb(219, 219, 219)",
                                                "core": Object {
                                                  "border": "#dbdbdb",
                                                  "borderBright": "#f4f5f5",
                                                  "borderLight": "#e4e7e7",
                                                  "borderLighter": "#eceeee",
                                                  "borderMedium": "#c4c4c4",
                                                  "gray": "#484848",
                                                  "grayLight": "#82888a",
                                                  "grayLighter": "#cacccd",
                                                  "grayLightest": "#f2f2f2",
                                                  "primary": "#00a699",
                                                  "primaryShade_1": "#33dacd",
                                                  "primaryShade_2": "#66e2da",
                                                  "primaryShade_3": "#80e8e0",
                                                  "primaryShade_4": "#b2f1ec",
                                                  "primary_dark": "#008489",
                                                  "secondary": "#007a87",
                                                  "white": "#fff",
                                                  "yellow": "#ffe8bc",
                                                  "yellow_dark": "#ffce71",
                                                },
                                                "disabled": "#f2f2f2",
                                                "highlighted": Object {
                                                  "backgroundColor": "#ffe8bc",
                                                  "backgroundColor_active": "#ffce71",
                                                  "backgroundColor_hover": "#ffce71",
                                                  "color": "#484848",
                                                  "color_active": "#484848",
                                                  "color_hover": "#484848",
                                                },
                                                "hoveredSpan": Object {
                                                  "backgroundColor": "#b2f1ec",
                                                  "backgroundColor_active": "#80e8e0",
                                                  "backgroundColor_hover": "#b2f1ec",
                                                  "borderColor": "#80e8e0",
                                                  "borderColor_active": "#80e8e0",
                                                  "borderColor_hover": "#80e8e0",
                                                  "color": "#007a87",
                                                  "color_active": "#007a87",
                                                  "color_hover": "#007a87",
                                                },
                                                "minimumNights": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "borderColor": "#eceeee",
                                                  "color": "#cacccd",
                                                  "color_active": "#cacccd",
                                                  "color_hover": "#cacccd",
                                                },
                                                "outside": Object {
                                                  "backgroundColor": "#fff",
                                                  "backgroundColor_active": "#fff",
                                                  "backgroundColor_hover": "#fff",
                                                  "color": "#484848",
                                                  "color_active": "#484848",
                                                  "color_hover": "#484848",
                                                },
                                                "placeholderText": "#757575",
                                                "selected": Object {
                                                  "backgroundColor": "#00a699",
                                                  "backgroundColor_active": "#00a699",
                                                  "backgroundColor_hover": "#00a699",
                                                  "borderColor": "#00a699",
                                                  "borderColor_active": "#00a699",
                                                  "borderColor_hover": "#00a699",
                                                  "color": "#fff",
                                                  "color_active": "#fff",
                                                  "color_hover": "#fff",
                                                },
                                                "selectedSpan": Object {
                                                  "backgroundColor": "#66e2da",
                                                  "backgroundColor_active": "#33dacd",
                                                  "backgroundColor_hover": "#33dacd",
                                                  "borderColor": "#33dacd",
                                                  "borderColor_active": "#00a699",
                                                  "borderColor_hover": "#00a699",
                                                  "color": "#fff",
                                                  "color_active": "#fff",
                                                  "color_hover": "#fff",
                                                },
                                                "text": "#484848",
                                                "textDisabled": "#dbdbdb",
                                                "textFocused": "#007a87",
                                              },
                                              "font": Object {
                                                "captionSize": 18,
                                                "input": Object {
                                                  "letterSpacing_small": "0.2px",
                                                  "lineHeight": "24px",
                                                  "lineHeight_small": "18px",
                                                  "size": 19,
                                                  "size_small": 15,
                                                  "styleDisabled": "italic",
                                                  "weight": 200,
                                                },
                                                "size": 14,
                                              },
                                              "noScrollBarOnVerticalScrollable": false,
                                              "sizing": Object {
                                                "arrowWidth": 24,
                                                "inputWidth": 130,
                                                "inputWidth_small": 97,
                                              },
                                              "spacing": Object {
                                                "captionPaddingBottom": 37,
                                                "captionPaddingTop": 22,
                                                "dayPickerHorizontalPadding": 9,
                                                "displayTextPaddingBottom": 9,
                                                "displayTextPaddingBottom_small": 5,
                                                "displayTextPaddingHorizontal": undefined,
                                                "displayTextPaddingHorizontal_small": undefined,
                                                "displayTextPaddingLeft": 11,
                                                "displayTextPaddingLeft_small": 7,
                                                "displayTextPaddingRight": 11,
                                                "displayTextPaddingRight_small": 7,
                                                "displayTextPaddingTop": 11,
                                                "displayTextPaddingTop_small": 7,
                                                "displayTextPaddingVertical": undefined,
                                                "displayTextPaddingVertical_small": undefined,
                                                "inputPadding": 0,
                                              },
                                              "zIndex": 0,
                                            },
                                          }
                                        }
                                        verticalSpacing={22}
                                      >
                                        <div
                                          className="DateInput DateInput_1"
                                        >
                                          <input
                                            aria-describedby="DateInput__screen-reader-message-date-picker"
                                            aria-label="Date"
                                            autoComplete="off"
                                            className="DateInput_input DateInput_input_1"
                                            disabled={false}
                                            id="date-picker"
                                            name="date-picker"
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Date"
                                            readOnly={false}
                                            required={false}
                                            type="text"
                                            value="05/10/2019"
                                          />
                                          <p
                                            className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                            id="DateInput__screen-reader-message-date-picker"
                                          >
                                            Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                          </p>
                                        </div>
                                      </DateInput>
                                    </WithStyles>
                                  </withStyles(DateInput)>
                                  <button
                                    className="SingleDatePickerInput_calendarIcon SingleDatePickerInput_calendarIcon_1"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <img
                                      alt="dropdown indicator"
                                      src="https://assets.quill.org/images/icons/dropdown.svg"
                                      style={null}
                                    />
                                  </button>
                                </div>
                              </SingleDatePickerInput>
                            </WithStyles>
                          </withStyles(SingleDatePickerInput)>
                        </SingleDatePickerInputController>
                      </div>
                    </OutsideClickHandler>
                  </div>
                </SingleDatePicker>
              </WithStyles>
            </withStyles(SingleDatePicker)>
          </div>
        </div>
        <div>
          <label>
            External Link: (Optional, use only if this card should point to another website)
          </label>
          <input
            onChange={[Function]}
            value=""
          />
        </div>
        <div
          className="media-upload-container"
        >
          <label>
            Click the square below or drag an image into it to upload an image or video:
          </label>
          <div
            className="dropzone-container"
          >
            <t
              disableClick={false}
              disablePreview={false}
              disabled={false}
              getDataTransferItems={[Function]}
              inputProps={Object {}}
              maxSize={Infinity}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
            >
              <div
                aria-disabled={false}
                className=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                style={
                  Object {
                    "borderColor": "#666",
                    "borderRadius": 5,
                    "borderStyle": "dashed",
                    "borderWidth": 2,
                    "height": 200,
                    "position": "relative",
                    "width": 200,
                  }
                }
              >
                <input
                  autoComplete="off"
                  disabled={false}
                  multiple={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0.00001,
                      "pointerEvents": "none",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                  type="file"
                />
              </div>
            </t>
          </div>
          <label
            style={
              Object {
                "marginTop": "10px",
              }
            }
          >
            Here is the link to your uploaded image or video:
          </label>
          <input />
          <a
            className="quill-button fun secondary outlined focus-on-light"
            href="/cms/images"
            target="_blank"
          >
            All Uploaded Media
          </a>
        </div>
        <div
          className="checkbox-wrapper"
        >
          <button
            aria-label="Unchecked checkbox"
            className="quill-checkbox unselected"
            onClick={[Function]}
            type="button"
          />
          <label
            className="premium-label"
          >
            Center Images
          </label>
        </div>
        <div
          className="checkbox-wrapper"
        >
          <button
            aria-label="Unchecked checkbox"
            className="quill-checkbox unselected"
            onClick={[Function]}
            type="button"
          />
          <label
            className="premium-label"
          >
            Show only to Premium Members
          </label>
        </div>
        <div>
          <div
            className="article-content-container"
          >
            <div
              id="article-preview-bar"
            >
              <div
                className="toolbar-left"
              >
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H1
                </button>
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H2
                </button>
                <button
                  className="interactive-wrapper"
                  onClick={[Function]}
                  type="button"
                >
                  H3
                </button>
                <i
                  className="fas fa-bold"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-italic"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-list-ul"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-list-ol"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-quote-left"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-link"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-file-image"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-video"
                  onClick={[Function]}
                />
                <i
                  className="fas fa-square"
                  onClick={[Function]}
                />
                <i
                  className="far fa-square"
                  onClick={[Function]}
                />
              </div>
              <div>
                <span
                  className="article-tab active"
                  onClick={[Function]}
                >
                  Edit
                </span>
                <span
                  className="article-tab null"
                  onClick={[Function]}
                >
                  Preview
                </span>
              </div>
            </div>
            <textarea
              id="markdown-content"
              onChange={[Function]}
              rows={20}
              type="text"
              value="Brandon Reynolds, a middle school writing teacher at Milano Jr. High School in Milano, Texas, has witnessed his students make significant writing gains since introducing Quill in the classroom. âI noticed that even simple things like capitalization would sometimes throw them off. Whenever I noticed something like that, Quillâs a really easy resource just to go back and say âLook, there are so many different activities, so weâre going to work on this for a little while and just see how it goes.ââ\\\\n\\\\nIn addition to his middle school classes, Reynolds also teaches a remedial high school class. âIâve primarily been just a middle school teacher, so I didnât know some high school students really do struggle with some of these basic writing skills. I really noticed while Iâve been here âthey have gotten so much better about how sentences actually look, the structure of them, and putting things in place, so thatâs been one of the big success stories Iâve seen this year.â \\\\n\\\\nReynolds uses Quill Proofreader to help his students prepare for state standardized tests. âI really think that helps them because theyâre able to just identify, âHey, thereâs a mistake right here,â and I really guide them on those.â\\\\n\\\\nQuill Diagnostics gave Reynolds a good starting point to assess where his students were in terms of their writing level, which helped him determine the best plan of action for each individual student. âI think whatâs really good is to start off with the diagnostic. And I start every class off with the beginner diagnostic no matter where they are.â He then re-assigns the diagnostic later in the year to see how far his students have come. âWhat I do is at the beginning of the next six-week quarter, Iâll give them the same diagnostic again to see how they do on that and compare their results.â\\\\n\\\\n![](http://s3.amazonaws.com/quill-image-uploads/uploads/files/brandonteacherstory1.jpg)\\\\n\\\\nReynolds also recommends sifting through the diagnostic recommendations for each student and being strategic about what to assign for the moment, instead of assigning everything at once, which can be âreally overwhelmingâ for students. He says, pick âone thing, so you can look and see âokay thereâs checkmarks all the way down adjectives. We can work on that.â So I would just say âchunk by chunk,â going down.â\\\\n\\\\nReynolds found Quill Lessons ultimately helpful for finding and pinpointing those who need the most help, making it easy for him to work more closely with them. âWhatâs really nice is I can work with many of them individually.â Because of the interactive nature of Lessons, heâs been able to clearly and easily see which students are participating and then find ways to increase the participation of those who may be struggling more with the material, and flag them for more guided instruction afterward. âEven as theyâre working on their own, Iâll call on different students and say, âOkay whatâs this adjective? What adjectives can we put here?,â so I really try to take advantage of everything thatâs there.â\\\\nReynolds uses Quill to provide his students with skills that they can incorporate into their writing assignments afterwards. âI often challenge them, especially my eighth graders, whenever we do a higher level activity combining sentences together, to put that into their next essay. Itâll be something specific that I look for, and for the most part it becomes second nature to them.â He has noticed that students are taking the concepts theyâve learned through Quillâs activities and putting them into practice in essays, which further reinforces the material.\\\\n\\\\n**Brandon Reynoldâs Best Practices**\\\\n\\\\n* Give students a Diagnostic at the beginning and end of each quarter/semester to see the progress theyâve made between the first and second attempts. \\\\n* Use Lessons to determine which students need the most help, and flag those who may be struggling and could use extra support around the material. \\\\n* Assign Diagnostic Recommendations concept-by-concept, so that students arenât overwhelmed by everything on their dashboards and can focus on what the teacher deems most important at the moment. \\\\n\\\\nTo find more Teacher Stories like Brandon Reynold's, click [**here!**](https://www.quill.org/teacher-center/topic/teacher-stories)"
            />
          </div>
          <a
            className="quill-button fun outlined secondary focus-on-light"
            href="http://commonmark.org/help/"
            rel="noopener noreferrer"
            target="_blank"
          >
            Markdown Cheatsheet
          </a>
        </div>
        <div
          className="save-buttons"
        >
          <input
            className="quill-button large outlined secondary focus-on-light"
            onClick={[Function]}
            type="button"
            value="Unpublish & Save Draft"
          />
          <input
            className="quill-button large outlined secondary focus-on-light"
            onClick={[Function]}
            type="button"
            value="Save and Preview"
          />
          <input
            className="quill-button contained large primary focus-on-light"
            onClick={[Function]}
            type="button"
            value="Publish"
          />
        </div>
      </div>
      <div
        className="right-column"
      >
        <div>
          <label>
            Card Preview:
          </label>
          <PreviewCard
            color="purple"
            content=""
          >
            <a
              className="preview-card-link purple"
              target="_self"
            >
              <ReactMarkdown
                className="preview-card"
                containerTagName="div"
                parserOptions={Object {}}
                source=""
              >
                <div
                  className="preview-card"
                />
              </ReactMarkdown>
              <a
                className="quill-button fun contained primary focus-on-light"
                target="_self"
              >
                Read
              </a>
            </a>
          </PreviewCard>
        </div>
        <div
          className="preview-card-container"
        >
          <label>
            Preview Card Content:
          </label>
          <div
            id="preview-card-content-fields"
          >
            <label
              key="custom-html-label"
            >
              Custom HTML:
            </label>
            <textarea
              id="preview-markdown-content"
              key="custom-html"
              onChange={[Function]}
              rows={4}
              type="text"
              value=""
            />
            <i
              key="info"
            >
              If no author is supposed to show, please delete "&lt;p class=author&gt;" through the next "&lt;/p&gt;".
            </i>
          </div>
        </div>
      </div>
    </form>
  </div>
</CreateOrEditBlogPost>
`;
