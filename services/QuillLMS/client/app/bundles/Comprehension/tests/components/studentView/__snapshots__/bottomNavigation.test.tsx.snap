// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BottomNavigation component when the student has made at least two highlights renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={false}
    scrolledToEndOfPassage={true}
    studentHighlights={
      Array [
        "blah blah",
        "blue blue",
      ]
    }
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light"
        onClick={[Function]}
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Highlight
             at least
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has made at least two highlights renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={true}
    scrolledToEndOfPassage={true}
    studentHighlights={
      Array [
        "blah blah",
        "blue blue",
      ]
    }
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light"
        onClick={[Function]}
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Highlight
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has not started the read passage step yet renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={false}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={[Function]}
  studentHighlights={Array []}
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button outlined secondary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Start
    </button>
  </div>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has not started the read passage step yet renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={false}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={[Function]}
  studentHighlights={Array []}
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button outlined secondary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Start
    </button>
  </div>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has scrolled to the end of the passage but not yet started highlighting renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={true}
  studentHighlights={Array []}
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={false}
    scrolledToEndOfPassage={true}
    studentHighlights={Array []}
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             at least
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has scrolled to the end of the passage but not yet started highlighting renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={true}
  studentHighlights={Array []}
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={true}
    scrolledToEndOfPassage={true}
    studentHighlights={Array []}
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has started highlighting renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
    ]
  }
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={false}
    scrolledToEndOfPassage={true}
    studentHighlights={
      Array [
        "blah blah",
      ]
    }
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             at least
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has started highlighting renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
    ]
  }
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={true}
    scrolledToEndOfPassage={true}
    studentHighlights={
      Array [
        "blah blah",
      ]
    }
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has started the read passage step but not yet scrolled to the end of the passage renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={[Function]}
  studentHighlights={Array []}
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={false}
    scrolledToEndOfPassage={[Function]}
    studentHighlights={Array []}
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             at least
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student has started the read passage step but not yet scrolled to the end of the passage renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={false}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={[Function]}
  studentHighlights={Array []}
>
  <ReadAndHighlightTracker
    handleClickDoneHighlighting={[Function]}
    onMobile={true}
    scrolledToEndOfPassage={[Function]}
    studentHighlights={Array []}
  >
    <div
      className="read-and-highlight-tracker bottom-navigation"
    >
      <button
        className="quill-button contained primary large focus-on-light disabled"
        type="button"
      >
        Done
      </button>
      <div
        className="read-and-highlight-steps"
      >
        <div
          className="read-and-highlight-step"
        >
          <img
            alt="Green check icon"
            className="check-icon"
            src="undefined/images/icons/icons-check-big.svg"
          />
          <span>
            Read the entire passage
          </span>
        </div>
        <div
          className="read-and-highlight-step"
        >
          <div
            className="incomplete-indicator"
          />
          <span>
            Highlight
             two sentences
          </span>
        </div>
      </div>
    </div>
  </ReadAndHighlightTracker>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student is done reflecting renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={true}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={false}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button outlined secondary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Next
    </button>
  </div>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student is done reflecting renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={true}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={false}
  onMobile={true}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button outlined secondary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Next
    </button>
  </div>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student is in reflection renders on desktop 1`] = `
<BottomNavigation
  doneHighlighting={true}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={true}
  onMobile={false}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button contained primary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Next
    </button>
  </div>
</BottomNavigation>
`;

exports[`BottomNavigation component when the student is in reflection renders on mobile 1`] = `
<BottomNavigation
  doneHighlighting={true}
  handleClickDoneHighlighting={[Function]}
  handleDoneReadingClick={[Function]}
  handleStartPromptStepsClick={[Function]}
  handleStartReadingPassageClick={[Function]}
  hasStartedPromptSteps={false}
  hasStartedReadPassageStep={true}
  inReflection={true}
  onMobile={true}
  scrolledToEndOfPassage={true}
  studentHighlights={
    Array [
      "blah blah",
      "blue blue",
    ]
  }
>
  <div
    className="bottom-navigation"
  >
    <button
      className="quill-button contained primary large focus-on-light"
      onClick={[Function]}
      type="button"
    >
      Next
    </button>
  </div>
</BottomNavigation>
`;
