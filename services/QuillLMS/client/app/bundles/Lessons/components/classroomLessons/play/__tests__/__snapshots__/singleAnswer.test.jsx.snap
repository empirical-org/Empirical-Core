// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SingleAnswer component projector view inactive renders 1`] = `
<SingleAnswer
  data={
    Object {
      "play": Object {
        "cues": Array [
          "",
        ],
        "instructions": "Complete the sentence.",
        "prompt": "<p>Yesterday, riding my bike through the town.</p>",
      },
      "teach": Object {
        "script": Array [
          Object {
            "data": Object {
              "body": "<p><strong>Say:</strong> You’ve seen two ways you can correct an incomplete sentence that has an -ing word. Now try correcting one with your partner. You can use either method as long as you write a complete sentence.&nbsp;</p>",
              "heading": "Ask pairs to complete the sentence.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "type": "T-REVIEW",
          },
          Object {
            "data": Object {
              "body": "<p><em>Read the responses out loud.</em></p>
<p><strong>Say: </strong>Are there any responses that are still incomplete sentences?</p>",
              "heading": "Select 2-3 correct responses and 1-2 incorrect responses to display and discuss.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "data": Object {
              "body": "<p><em>Ask the following questions about the incorrect responses:</em></p>
<ul>
  <li>How could we revise this sentence to make it a complete sentence?</li>
  <li>What information is needed to finish the idea?</li>
  <li>Is there anything else we need to change to make the sentence correct?</li>
</ul>",
              "heading": "Discuss responses that are incomplete sentences.",
            },
            "type": "STEP-HTML",
          },
        ],
        "title": "Paired Practice",
      },
    }
  }
  mode={null}
  projector={true}
  selected_submission_order={null}
  selected_submissions={null}
  studentCount={1}
  submissions={null}
>
  <div
    className="student-slide-wrapper single-answer projector "
  >
    <div
      className="all-but-submitted-bar"
    >
      <ProjectorHeader
        studentCount={1}
        submissions={null}
      >
        <div
          className="projector-header-section"
        >
          <div
            className="students-type-tag tag"
          >
            <img
              alt="Laptop Icon"
              src="undefined/images/icons/laptop-glyph.svg"
            />
            <span>
              Students type response
            </span>
          </div>
          <p
            className="answered-count"
          >
            0 of 1 have responded
          </p>
        </div>
      </ProjectorHeader>
      <PromptSection
        mode={null}
        promptElement={
          <SentenceFragments
            prompt="<p>Yesterday, riding my bike through the town.</p>"
          />
        }
      >
        <SentenceFragments
          prompt="<p>Yesterday, riding my bike through the town.</p>"
        >
          <div
            className="draft-js sentence-fragments"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<p>Yesterday, riding my bike through the town.</p>",
              }
            }
          />
        </SentenceFragments>
      </PromptSection>
      <Cues
        cues={
          Array [
            "",
          ]
        }
        displayArrowAndText={false}
      >
        <span />
      </Cues>
      <Feedback
        feedback={
          <p
            dangerouslySetInnerHTML={
              Object {
                "__html": "Complete the sentence.",
              }
            }
          />
        }
        feedbackType="default"
      >
        <div
          aria-live="assertive"
          className="student-feedback-container default"
          role="status"
        >
          <div
            className="feedback-row student-feedback-inner-container"
          >
            <img
              alt="Directions Icon"
              className="info"
              src="https://assets.quill.org/images/icons/direction.svg"
            />
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Complete the sentence.",
                }
              }
            />
          </div>
        </div>
      </Feedback>
      <RenderTextEditor
        checkAnswer={[Function]}
        defaultValue=""
        disabled={true}
        handleChange={[Function]}
        placeholder="Type your response here"
        value="Students type responses here"
      >
        <TextareaAutosize
          autoCapitalize="off"
          autoCorrect="off"
          className="student text-editor card is-fullwidth disabled-editor"
          disabled={true}
          onChange={[Function]}
          onHeightChange={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your response here"
          spellCheck={false}
          useCacheForDOMMeasurements={false}
          value="Students type responses here"
        >
          <textarea
            autoCapitalize="off"
            autoCorrect="off"
            className="student text-editor card is-fullwidth disabled-editor"
            disabled={true}
            onChange={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            placeholder="Type your response here"
            spellCheck={false}
            style={
              Object {
                "height": 0,
              }
            }
            value="Students type responses here"
          />
        </TextareaAutosize>
      </RenderTextEditor>
      <SubmitButton
        disabled={true}
        onClick={[Function]}
      >
        <div
          className="question-button-group"
        >
          <button
            className="quill-button primary contained large focus-on-light disabled"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Submit
          </button>
        </div>
      </SubmitButton>
    </div>
  </div>
</SingleAnswer>
`;

exports[`SingleAnswer component projector view when an answer is being displayed renders 1`] = `
<SingleAnswer
  data={
    Object {
      "play": Object {
        "cues": Array [
          "",
        ],
        "instructions": "Complete the sentence.",
        "prompt": "<p>Yesterday, riding my bike through the town.</p>",
      },
      "teach": Object {
        "script": Array [
          Object {
            "data": Object {
              "body": "<p><strong>Say:</strong> You’ve seen two ways you can correct an incomplete sentence that has an -ing word. Now try correcting one with your partner. You can use either method as long as you write a complete sentence.&nbsp;</p>",
              "heading": "Ask pairs to complete the sentence.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "type": "T-REVIEW",
          },
          Object {
            "data": Object {
              "body": "<p><em>Read the responses out loud.</em></p>
<p><strong>Say: </strong>Are there any responses that are still incomplete sentences?</p>",
              "heading": "Select 2-3 correct responses and 1-2 incorrect responses to display and discuss.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "data": Object {
              "body": "<p><em>Ask the following questions about the incorrect responses:</em></p>
<ul>
  <li>How could we revise this sentence to make it a complete sentence?</li>
  <li>What information is needed to finish the idea?</li>
  <li>Is there anything else we need to change to make the sentence correct?</li>
</ul>",
              "heading": "Discuss responses that are incomplete sentences.",
            },
            "type": "STEP-HTML",
          },
        ],
        "title": "Paired Practice",
      },
    }
  }
  projector={true}
  selected_submission_order={
    Array [
      "student",
    ]
  }
  selected_submissions={
    Object {
      "student": true,
    }
  }
  studentCount={1}
  submissions={
    Object {
      "student": Object {
        "data": "Blah",
        "timestamp": "2020-06-15T20:02:41.677Z",
      },
    }
  }
>
  <div
    className="student-slide-wrapper single-answer projector "
  >
    <div
      className="all-but-submitted-bar"
    >
      <ProjectorHeader
        studentCount={1}
        submissions={
          Object {
            "student": Object {
              "data": "Blah",
              "timestamp": "2020-06-15T20:02:41.677Z",
            },
          }
        }
      >
        <div
          className="projector-header-section"
        >
          <div
            className="students-type-tag tag"
          >
            <img
              alt="Laptop Icon"
              src="undefined/images/icons/laptop-glyph.svg"
            />
            <span>
              Students type response
            </span>
          </div>
          <p
            className="answered-count"
          >
            1 of 1 have responded
          </p>
        </div>
      </ProjectorHeader>
      <PromptSection
        promptElement={
          <SentenceFragments
            prompt="<p>Yesterday, riding my bike through the town.</p>"
          />
        }
      >
        <SentenceFragments
          prompt="<p>Yesterday, riding my bike through the town.</p>"
        >
          <div
            className="draft-js sentence-fragments"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<p>Yesterday, riding my bike through the town.</p>",
              }
            }
          />
        </SentenceFragments>
      </PromptSection>
      <Cues
        cues={
          Array [
            "",
          ]
        }
        displayArrowAndText={false}
      >
        <span />
      </Cues>
      <Feedback
        feedback={
          <p
            dangerouslySetInnerHTML={
              Object {
                "__html": "Complete the sentence.",
              }
            }
          />
        }
        feedbackType="default"
      >
        <div
          aria-live="assertive"
          className="student-feedback-container default"
          role="status"
        >
          <div
            className="feedback-row student-feedback-inner-container"
          >
            <img
              alt="Directions Icon"
              className="info"
              src="https://assets.quill.org/images/icons/direction.svg"
            />
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Complete the sentence.",
                }
              }
            />
          </div>
        </div>
      </Feedback>
      <RenderTextEditor
        checkAnswer={[Function]}
        defaultValue=""
        disabled={true}
        handleChange={[Function]}
        placeholder="Type your response here"
        value="Students type responses here"
      >
        <TextareaAutosize
          autoCapitalize="off"
          autoCorrect="off"
          className="student text-editor card is-fullwidth disabled-editor"
          disabled={true}
          onChange={[Function]}
          onHeightChange={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your response here"
          spellCheck={false}
          useCacheForDOMMeasurements={false}
          value="Students type responses here"
        >
          <textarea
            autoCapitalize="off"
            autoCorrect="off"
            className="student text-editor card is-fullwidth disabled-editor"
            disabled={true}
            onChange={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            placeholder="Type your response here"
            spellCheck={false}
            style={
              Object {
                "height": 0,
              }
            }
            value="Students type responses here"
          />
        </TextareaAutosize>
      </RenderTextEditor>
      <SubmitButton
        disabled={true}
        onClick={[Function]}
      >
        <div
          className="question-button-group"
        >
          <button
            className="quill-button primary contained large focus-on-light disabled"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Submit
          </button>
        </div>
      </SubmitButton>
    </div>
  </div>
</SingleAnswer>
`;

exports[`SingleAnswer component student view inactive renders 1`] = `
<SingleAnswer
  data={
    Object {
      "play": Object {
        "cues": Array [
          "",
        ],
        "instructions": "Complete the sentence.",
        "prompt": "<p>Yesterday, riding my bike through the town.</p>",
      },
      "teach": Object {
        "script": Array [
          Object {
            "data": Object {
              "body": "<p><strong>Say:</strong> You’ve seen two ways you can correct an incomplete sentence that has an -ing word. Now try correcting one with your partner. You can use either method as long as you write a complete sentence.&nbsp;</p>",
              "heading": "Ask pairs to complete the sentence.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "type": "T-REVIEW",
          },
          Object {
            "data": Object {
              "body": "<p><em>Read the responses out loud.</em></p>
<p><strong>Say: </strong>Are there any responses that are still incomplete sentences?</p>",
              "heading": "Select 2-3 correct responses and 1-2 incorrect responses to display and discuss.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "data": Object {
              "body": "<p><em>Ask the following questions about the incorrect responses:</em></p>
<ul>
  <li>How could we revise this sentence to make it a complete sentence?</li>
  <li>What information is needed to finish the idea?</li>
  <li>Is there anything else we need to change to make the sentence correct?</li>
</ul>",
              "heading": "Discuss responses that are incomplete sentences.",
            },
            "type": "STEP-HTML",
          },
        ],
        "title": "Paired Practice",
      },
    }
  }
  mode={null}
  selected_submission_order={null}
  selected_submissions={null}
  studentCount={1}
  submissions={null}
>
  <div
    className="student-slide-wrapper single-answer "
  >
    <div
      className="all-but-submitted-bar"
    >
      <PromptSection
        mode={null}
        promptElement={
          <SentenceFragments
            prompt="<p>Yesterday, riding my bike through the town.</p>"
          />
        }
      >
        <SentenceFragments
          prompt="<p>Yesterday, riding my bike through the town.</p>"
        >
          <div
            className="draft-js sentence-fragments"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<p>Yesterday, riding my bike through the town.</p>",
              }
            }
          />
        </SentenceFragments>
      </PromptSection>
      <Cues
        cues={
          Array [
            "",
          ]
        }
        displayArrowAndText={false}
      >
        <span />
      </Cues>
      <Feedback
        feedback={
          <p
            dangerouslySetInnerHTML={
              Object {
                "__html": "Complete the sentence.",
              }
            }
          />
        }
        feedbackType="default"
      >
        <div
          aria-live="assertive"
          className="student-feedback-container default"
          role="status"
        >
          <div
            className="feedback-row student-feedback-inner-container"
          >
            <img
              alt="Directions Icon"
              className="info"
              src="https://assets.quill.org/images/icons/direction.svg"
            />
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Complete the sentence.",
                }
              }
            />
          </div>
        </div>
      </Feedback>
      <RenderTextEditor
        checkAnswer={[Function]}
        defaultValue=""
        handleChange={[Function]}
        placeholder="Type your response here"
      >
        <TextareaAutosize
          autoCapitalize="off"
          autoCorrect="off"
          className="student text-editor card is-fullwidth null"
          onChange={[Function]}
          onHeightChange={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your response here"
          spellCheck={false}
          useCacheForDOMMeasurements={false}
        >
          <textarea
            autoCapitalize="off"
            autoCorrect="off"
            className="student text-editor card is-fullwidth null"
            onChange={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            placeholder="Type your response here"
            spellCheck={false}
            style={
              Object {
                "height": 0,
              }
            }
          />
        </TextareaAutosize>
      </RenderTextEditor>
      <SubmitButton
        disabled={true}
        onClick={[Function]}
      >
        <div
          className="question-button-group"
        >
          <button
            className="quill-button primary contained large focus-on-light disabled"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Submit
          </button>
        </div>
      </SubmitButton>
    </div>
  </div>
</SingleAnswer>
`;

exports[`SingleAnswer component student view when an answer is being displayed renders 1`] = `
<SingleAnswer
  data={
    Object {
      "play": Object {
        "cues": Array [
          "",
        ],
        "instructions": "Complete the sentence.",
        "prompt": "<p>Yesterday, riding my bike through the town.</p>",
      },
      "teach": Object {
        "script": Array [
          Object {
            "data": Object {
              "body": "<p><strong>Say:</strong> You’ve seen two ways you can correct an incomplete sentence that has an -ing word. Now try correcting one with your partner. You can use either method as long as you write a complete sentence.&nbsp;</p>",
              "heading": "Ask pairs to complete the sentence.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "type": "T-REVIEW",
          },
          Object {
            "data": Object {
              "body": "<p><em>Read the responses out loud.</em></p>
<p><strong>Say: </strong>Are there any responses that are still incomplete sentences?</p>",
              "heading": "Select 2-3 correct responses and 1-2 incorrect responses to display and discuss.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "data": Object {
              "body": "<p><em>Ask the following questions about the incorrect responses:</em></p>
<ul>
  <li>How could we revise this sentence to make it a complete sentence?</li>
  <li>What information is needed to finish the idea?</li>
  <li>Is there anything else we need to change to make the sentence correct?</li>
</ul>",
              "heading": "Discuss responses that are incomplete sentences.",
            },
            "type": "STEP-HTML",
          },
        ],
        "title": "Paired Practice",
      },
    }
  }
  selected_submission_order={
    Array [
      "student",
    ]
  }
  selected_submissions={
    Object {
      "student": true,
    }
  }
  studentCount={1}
  submissions={
    Object {
      "student": Object {
        "data": "Blah",
        "timestamp": "2020-06-15T20:02:41.677Z",
      },
    }
  }
>
  <div
    className="student-slide-wrapper single-answer "
  >
    <div
      className="all-but-submitted-bar"
    >
      <PromptSection
        promptElement={
          <SentenceFragments
            prompt="<p>Yesterday, riding my bike through the town.</p>"
          />
        }
      >
        <SentenceFragments
          prompt="<p>Yesterday, riding my bike through the town.</p>"
        >
          <div
            className="draft-js sentence-fragments"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<p>Yesterday, riding my bike through the town.</p>",
              }
            }
          />
        </SentenceFragments>
      </PromptSection>
      <Cues
        cues={
          Array [
            "",
          ]
        }
        displayArrowAndText={false}
      >
        <span />
      </Cues>
      <Feedback
        feedback={
          <p
            dangerouslySetInnerHTML={
              Object {
                "__html": "Complete the sentence.",
              }
            }
          />
        }
        feedbackType="default"
      >
        <div
          aria-live="assertive"
          className="student-feedback-container default"
          role="status"
        >
          <div
            className="feedback-row student-feedback-inner-container"
          >
            <img
              alt="Directions Icon"
              className="info"
              src="https://assets.quill.org/images/icons/direction.svg"
            />
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Complete the sentence.",
                }
              }
            />
          </div>
        </div>
      </Feedback>
      <RenderTextEditor
        checkAnswer={[Function]}
        defaultValue=""
        handleChange={[Function]}
        placeholder="Type your response here"
      >
        <TextareaAutosize
          autoCapitalize="off"
          autoCorrect="off"
          className="student text-editor card is-fullwidth null"
          onChange={[Function]}
          onHeightChange={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your response here"
          spellCheck={false}
          useCacheForDOMMeasurements={false}
        >
          <textarea
            autoCapitalize="off"
            autoCorrect="off"
            className="student text-editor card is-fullwidth null"
            onChange={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            placeholder="Type your response here"
            spellCheck={false}
            style={
              Object {
                "height": 0,
              }
            }
          />
        </TextareaAutosize>
      </RenderTextEditor>
      <SubmitButton
        disabled={true}
        onClick={[Function]}
      >
        <div
          className="question-button-group"
        >
          <button
            className="quill-button primary contained large focus-on-light disabled"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Submit
          </button>
        </div>
      </SubmitButton>
    </div>
  </div>
</SingleAnswer>
`;

exports[`SingleAnswer component student view when the student has submitted an answer renders 1`] = `
<SingleAnswer
  data={
    Object {
      "play": Object {
        "cues": Array [
          "",
        ],
        "instructions": "Complete the sentence.",
        "prompt": "<p>Yesterday, riding my bike through the town.</p>",
      },
      "teach": Object {
        "script": Array [
          Object {
            "data": Object {
              "body": "<p><strong>Say:</strong> You’ve seen two ways you can correct an incomplete sentence that has an -ing word. Now try correcting one with your partner. You can use either method as long as you write a complete sentence.&nbsp;</p>",
              "heading": "Ask pairs to complete the sentence.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "type": "T-REVIEW",
          },
          Object {
            "data": Object {
              "body": "<p><em>Read the responses out loud.</em></p>
<p><strong>Say: </strong>Are there any responses that are still incomplete sentences?</p>",
              "heading": "Select 2-3 correct responses and 1-2 incorrect responses to display and discuss.",
            },
            "type": "STEP-HTML",
          },
          Object {
            "data": Object {
              "body": "<p><em>Ask the following questions about the incorrect responses:</em></p>
<ul>
  <li>How could we revise this sentence to make it a complete sentence?</li>
  <li>What information is needed to finish the idea?</li>
  <li>Is there anything else we need to change to make the sentence correct?</li>
</ul>",
              "heading": "Discuss responses that are incomplete sentences.",
            },
            "type": "STEP-HTML",
          },
        ],
        "title": "Paired Practice",
      },
    }
  }
  mode={null}
  selected_submission_order={null}
  selected_submissions={null}
  studentCount={1}
  submissions={
    Object {
      "student": Object {
        "data": "Blah",
        "timestamp": "2020-06-15T20:02:41.677Z",
      },
    }
  }
>
  <div
    className="student-slide-wrapper single-answer "
  >
    <div
      className="all-but-submitted-bar"
    >
      <PromptSection
        mode={null}
        promptElement={
          <SentenceFragments
            prompt="<p>Yesterday, riding my bike through the town.</p>"
          />
        }
      >
        <SentenceFragments
          prompt="<p>Yesterday, riding my bike through the town.</p>"
        >
          <div
            className="draft-js sentence-fragments"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<p>Yesterday, riding my bike through the town.</p>",
              }
            }
          />
        </SentenceFragments>
      </PromptSection>
      <Cues
        cues={
          Array [
            "",
          ]
        }
        displayArrowAndText={false}
      >
        <span />
      </Cues>
      <Feedback
        feedback={
          <p
            dangerouslySetInnerHTML={
              Object {
                "__html": "Complete the sentence.",
              }
            }
          />
        }
        feedbackType="default"
      >
        <div
          aria-live="assertive"
          className="student-feedback-container default"
          role="status"
        >
          <div
            className="feedback-row student-feedback-inner-container"
          >
            <img
              alt="Directions Icon"
              className="info"
              src="https://assets.quill.org/images/icons/direction.svg"
            />
            <p
              dangerouslySetInnerHTML={
                Object {
                  "__html": "Complete the sentence.",
                }
              }
            />
          </div>
        </div>
      </Feedback>
      <RenderTextEditor
        checkAnswer={[Function]}
        defaultValue=""
        handleChange={[Function]}
        placeholder="Type your response here"
      >
        <TextareaAutosize
          autoCapitalize="off"
          autoCorrect="off"
          className="student text-editor card is-fullwidth null"
          onChange={[Function]}
          onHeightChange={[Function]}
          onInput={[Function]}
          onKeyDown={[Function]}
          placeholder="Type your response here"
          spellCheck={false}
          useCacheForDOMMeasurements={false}
        >
          <textarea
            autoCapitalize="off"
            autoCorrect="off"
            className="student text-editor card is-fullwidth null"
            onChange={[Function]}
            onInput={[Function]}
            onKeyDown={[Function]}
            placeholder="Type your response here"
            spellCheck={false}
            style={
              Object {
                "height": 0,
              }
            }
          />
        </TextareaAutosize>
      </RenderTextEditor>
      <SubmitButton
        disabled={true}
        onClick={[Function]}
      >
        <div
          className="question-button-group"
        >
          <button
            className="quill-button primary contained large focus-on-light disabled"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Submit
          </button>
        </div>
      </SubmitButton>
    </div>
  </div>
</SingleAnswer>
`;
