// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PromptStep component active state before any responses have been submitted matches snapshot 1`] = `
<PromptStep
  active={true}
  activityIsComplete={false}
  className="step active"
  completeStep={[Function]}
  everyOtherStepCompleted={false}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={Array []}
>
  <div
    className="step active"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor"
            disabled={false}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>"
            innerRef={[Function]}
            isResettable={false}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor"
                data-gramm={false}
                disabled={false}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              0
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="Get feedback"
              className="quill-button focus-on-light disabled"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              <span>
                Get feedback
              </span>
            </button>
          </div>
        </div>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;

exports[`PromptStep component active state when a suboptimal response has been submitted matches snapshot 1`] = `
<PromptStep
  active={true}
  activityIsComplete={false}
  className="step active"
  completeStep={[Function]}
  everyOtherStepCompleted={false}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={
    Array [
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
    ]
  }
>
  <div
    className="step active"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor suboptimal"
            disabled={false}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>"
            innerRef={[Function]}
            isResettable={true}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor suboptimal"
                data-gramm={false}
                disabled={false}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor suboptimal"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              1
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="You already submitted this response. You must edit it before you can submit it again."
              className="quill-button focus-on-light disabled"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              <span>
                Get feedback
              </span>
            </button>
          </div>
        </div>
        <Feedback
          customFeedback={null}
          customFeedbackKey={null}
          lastSubmittedResponse={
            Object {
              "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
              "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
              "feedback_type": "semantic",
              "optimal": false,
            }
          }
          prompt={
            Object {
              "conjunction": "because",
              "max_attempts": 5,
              "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
              "prompt_id": 1,
              "text": "Governments should make voting compulsory because",
            }
          }
          submittedResponses={
            Array [
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
            ]
          }
        >
          <div
            className="feedback-section "
          >
            <ReactCSSTransitionReplace
              changeWidth={false}
              childComponent="span"
              component="div"
              notifyLeaving={false}
              overflowHidden={true}
              transitionAppear={false}
              transitionEnter={true}
              transitionEnterTimeout={1000}
              transitionLeave={true}
              transitionLeaveTimeout={400}
              transitionName="fade"
            >
              <div
                style={Object {}}
              >
                <span
                  key="1"
                  style={null}
                >
                  <CSSTransitionGroupChild
                    appear={false}
                    enter={true}
                    enterTimeout={1000}
                    leave={true}
                    leaveTimeout={400}
                    name="fade"
                  >
                    <div
                      className="feedback"
                      key="1"
                    >
                      <div
                        className="label-section"
                      >
                        <img
                          alt="Revise icon"
                          src="undefined/images/icons/loop.svg"
                        />
                        <p>
                          Feedback
                        </p>
                      </div>
                      <div
                        className="feedback-wrapper"
                        tabIndex={-1}
                      >
                        <p
                          className="feedback-text"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                            }
                          }
                        />
                      </div>
                      <div
                        className="report-a-problem-button-container"
                      >
                        <button
                          className="report-a-problem-button interactive-wrapper"
                          onClick={[Function]}
                          type="button"
                        >
                          Report a problem
                        </button>
                      </div>
                    </div>
                    <span />
                  </CSSTransitionGroupChild>
                </span>
              </div>
            </ReactCSSTransitionReplace>
          </div>
        </Feedback>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;

exports[`PromptStep component active state when an optimal response has been submitted matches snapshot 1`] = `
<PromptStep
  active={true}
  activityIsComplete={false}
  className="step active"
  completeStep={[Function]}
  everyOtherStepCompleted={false}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={
    Array [
      Object {
        "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
        "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
        "feedback_type": "semantic",
        "optimal": true,
      },
    ]
  }
>
  <div
    className="step active"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor optimal disabled"
            disabled={true}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>"
            innerRef={[Function]}
            isResettable={true}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor optimal disabled"
                data-gramm={false}
                disabled={true}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor optimal disabled"
                  contentEditable={false}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              1
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="Get feedback"
              className="quill-button focus-on-light"
              disabled={false}
              onClick={[Function]}
              type="submit"
            >
              <span>
                Next
              </span>
            </button>
          </div>
        </div>
        <Feedback
          customFeedback={null}
          customFeedbackKey={null}
          lastSubmittedResponse={
            Object {
              "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
              "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
              "feedback_type": "semantic",
              "optimal": true,
            }
          }
          prompt={
            Object {
              "conjunction": "because",
              "max_attempts": 5,
              "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
              "prompt_id": 1,
              "text": "Governments should make voting compulsory because",
            }
          }
          submittedResponses={
            Array [
              Object {
                "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
                "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
                "feedback_type": "semantic",
                "optimal": true,
              },
            ]
          }
        >
          <div
            className="feedback-section "
          >
            <ReactCSSTransitionReplace
              changeWidth={false}
              childComponent="span"
              component="div"
              notifyLeaving={false}
              overflowHidden={true}
              transitionAppear={false}
              transitionEnter={true}
              transitionEnterTimeout={1000}
              transitionLeave={true}
              transitionLeaveTimeout={400}
              transitionName="fade"
            >
              <div
                style={Object {}}
              >
                <span
                  key="1"
                  style={null}
                >
                  <CSSTransitionGroupChild
                    appear={false}
                    enter={true}
                    enterTimeout={1000}
                    leave={true}
                    leaveTimeout={400}
                    name="fade"
                  >
                    <div
                      className="feedback optimal"
                      key="1"
                    >
                      <div
                        className="label-section"
                      >
                        <img
                          alt="Check icon"
                          src="undefined/images/icons/check-circle-small.svg"
                        />
                        <p>
                          Feedback
                        </p>
                      </div>
                      <div
                        className="feedback-wrapper"
                        tabIndex={-1}
                      >
                        <p
                          className="feedback-text"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
                            }
                          }
                        />
                      </div>
                      <div
                        className="report-a-problem-button-container"
                      >
                        <button
                          className="report-a-problem-button interactive-wrapper"
                          onClick={[Function]}
                          type="button"
                        >
                          Report a problem
                        </button>
                      </div>
                    </div>
                    <span />
                  </CSSTransitionGroupChild>
                </span>
              </div>
            </ReactCSSTransitionReplace>
          </div>
        </Feedback>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;

exports[`PromptStep component active state when the max attempts have been reached matches snapshot 1`] = `
<PromptStep
  active={true}
  activityIsComplete={false}
  className="step active"
  completeStep={[Function]}
  everyOtherStepCompleted={false}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={
    Array [
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
      Object {
        "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
        "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
        "feedback_type": "semantic",
        "optimal": false,
      },
    ]
  }
>
  <div
    className="step active"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor suboptimal disabled"
            disabled={true}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>"
            innerRef={[Function]}
            isResettable={true}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor suboptimal disabled"
                data-gramm={false}
                disabled={true}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor suboptimal disabled"
                  contentEditable={false}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that more voices are heard in elections.</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              5
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="Get feedback"
              className="quill-button focus-on-light"
              disabled={false}
              onClick={[Function]}
              type="submit"
            >
              <span>
                Next
              </span>
            </button>
          </div>
        </div>
        <Feedback
          customFeedback={null}
          customFeedbackKey={null}
          lastSubmittedResponse={
            Object {
              "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
              "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
              "feedback_type": "semantic",
              "optimal": false,
            }
          }
          prompt={
            Object {
              "conjunction": "because",
              "max_attempts": 5,
              "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
              "prompt_id": 1,
              "text": "Governments should make voting compulsory because",
            }
          }
          submittedResponses={
            Array [
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
              Object {
                "entry": "Governments should make voting compulsory, so that more voices are heard in elections.",
                "feedback": "Good start! You stated that compulsory voting will ensure that more voices are heard. Now take it one step further—according to the passage, why is it important that more voices are heard?",
                "feedback_type": "semantic",
                "optimal": false,
              },
            ]
          }
        >
          <div
            className="feedback-section "
          >
            <ReactCSSTransitionReplace
              changeWidth={false}
              childComponent="span"
              component="div"
              notifyLeaving={false}
              overflowHidden={true}
              transitionAppear={false}
              transitionEnter={true}
              transitionEnterTimeout={1000}
              transitionLeave={true}
              transitionLeaveTimeout={400}
              transitionName="fade"
            >
              <div
                style={Object {}}
              >
                <span
                  key="1"
                  style={null}
                >
                  <CSSTransitionGroupChild
                    appear={false}
                    enter={true}
                    enterTimeout={1000}
                    leave={true}
                    leaveTimeout={400}
                    name="fade"
                  >
                    <div
                      className="feedback"
                      key="5"
                    >
                      <div
                        className="label-section"
                      >
                        <img
                          alt="Revise icon"
                          src="undefined/images/icons/loop.svg"
                        />
                        <p>
                          Feedback
                        </p>
                      </div>
                      <div
                        className="feedback-wrapper"
                        tabIndex={-1}
                      >
                        <p
                          className="feedback-text"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
                            }
                          }
                        />
                      </div>
                      <div
                        className="report-a-problem-button-container"
                      >
                        <button
                          className="report-a-problem-button interactive-wrapper"
                          onClick={[Function]}
                          type="button"
                        >
                          Report a problem
                        </button>
                      </div>
                    </div>
                    <span />
                  </CSSTransitionGroupChild>
                </span>
              </div>
            </ReactCSSTransitionReplace>
            <div
              className="heads-up"
            >
              <div
                className="label-section"
              >
                <img
                  alt="Information icon"
                  src="undefined/images/pages/evidence/icons-information-small.svg"
                />
                <p>
                  Heads up
                </p>
              </div>
              <p>
                Our feedback bot is not perfect, and it sometimes might be wrong. If you think the feedback is inaccurate, please click on the “Report a problem” button above.
              </p>
              <br />
              <p>
                This activity is just for practice, and it is not graded. By practicing and revising on Quill, you are strengthening your writing skills.
              </p>
            </div>
          </div>
        </Feedback>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;

exports[`PromptStep component active state when the max attempts have been reached or the last answer is optimal and every other question has been completed matches snapshot 1`] = `
<PromptStep
  active={true}
  activityIsComplete={true}
  className="step active"
  completeStep={[Function]}
  everyOtherStepCompleted={true}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={
    Array [
      Object {
        "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
        "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
        "feedback_type": "semantic",
        "optimal": true,
      },
    ]
  }
>
  <div
    className="step active"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor optimal disabled"
            disabled={true}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>"
            innerRef={[Function]}
            isResettable={true}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor optimal disabled"
                data-gramm={false}
                disabled={true}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor optimal disabled"
                  contentEditable={false}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;Governments should make voting compulsory, so that the elected government represents the majority of the population.</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              1
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="Get feedback"
              className="quill-button focus-on-light"
              disabled={false}
              type="submit"
            >
              <span>
                Done
              </span>
            </button>
          </div>
        </div>
        <Feedback
          customFeedback={null}
          customFeedbackKey={null}
          lastSubmittedResponse={
            Object {
              "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
              "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
              "feedback_type": "semantic",
              "optimal": true,
            }
          }
          prompt={
            Object {
              "conjunction": "because",
              "max_attempts": 5,
              "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
              "prompt_id": 1,
              "text": "Governments should make voting compulsory because",
            }
          }
          submittedResponses={
            Array [
              Object {
                "entry": "Governments should make voting compulsory, so that the elected government represents the majority of the population.",
                "feedback": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
                "feedback_type": "semantic",
                "optimal": true,
              },
            ]
          }
        >
          <div
            className="feedback-section "
          >
            <ReactCSSTransitionReplace
              changeWidth={false}
              childComponent="span"
              component="div"
              notifyLeaving={false}
              overflowHidden={true}
              transitionAppear={false}
              transitionEnter={true}
              transitionEnterTimeout={1000}
              transitionLeave={true}
              transitionLeaveTimeout={400}
              transitionName="fade"
            >
              <div
                style={Object {}}
              >
                <span
                  key="1"
                  style={null}
                >
                  <CSSTransitionGroupChild
                    appear={false}
                    enter={true}
                    enterTimeout={1000}
                    leave={true}
                    leaveTimeout={400}
                    name="fade"
                  >
                    <div
                      className="feedback optimal"
                      key="1"
                    >
                      <div
                        className="label-section"
                      >
                        <img
                          alt="Check icon"
                          src="undefined/images/icons/check-circle-small.svg"
                        />
                        <p>
                          Feedback
                        </p>
                      </div>
                      <div
                        className="feedback-wrapper"
                        tabIndex={-1}
                      >
                        <p
                          className="feedback-text"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "That's a really strong sentence! You used evidence from the text to identify why governments should make voting compulsory.",
                            }
                          }
                        />
                      </div>
                      <div
                        className="report-a-problem-button-container"
                      >
                        <button
                          className="report-a-problem-button interactive-wrapper"
                          onClick={[Function]}
                          type="button"
                        >
                          Report a problem
                        </button>
                      </div>
                    </div>
                    <span />
                  </CSSTransitionGroupChild>
                </span>
              </div>
            </ReactCSSTransitionReplace>
          </div>
        </Feedback>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;

exports[`PromptStep component inactive state renders 1`] = `
<PromptStep
  activityIsComplete={false}
  className="step"
  completeStep={[Function]}
  everyOtherStepCompleted={false}
  onClick={[Function]}
  passedRef={[Function]}
  prompt={
    Object {
      "conjunction": "because",
      "max_attempts": 5,
      "max_attempts_feedback": "Nice effort! You made some strong revisions. Here is an example of a strong response. What is similar or different about your response? 

 Governments should make voting compulsory because otherwise not everyone will vote.",
      "prompt_id": 1,
      "text": "Governments should make voting compulsory because",
    }
  }
  submitResponse={[Function]}
  submittedResponses={Array []}
>
  <div
    className="step"
  >
    <div
      className="step-content"
    >
      <div
        className="active-content-container"
      >
        <div>
          <EditorContainer
            className="editor"
            disabled={false}
            handleFocus={[Function]}
            handleKeyDown={[Function]}
            handleTextChange={[Function]}
            html="<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>"
            innerRef={[Function]}
            isResettable={false}
            promptText="Governments should make voting compulsory because"
            resetText={[Function]}
            stripHtml={[Function]}
          >
            <div
              className="editor-container"
            >
              <ContentEditable
                className="editor"
                data-gramm={false}
                disabled={false}
                html="<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>"
                innerRef={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                spellCheck={true}
              >
                <div
                  className="editor"
                  contentEditable={true}
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Governments should make voting compulsory <u>because</u>&nbsp;</p>",
                    }
                  }
                  data-gramm={false}
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onInput={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  spellCheck={true}
                />
              </ContentEditable>
            </div>
          </EditorContainer>
        </div>
        <div
          className="attempts-and-button-container"
        >
          <div
            className="attempts-container"
          >
            <p
              className="number-of-attempts"
            >
              0
            </p>
            <p>
              of 5 attempts
            </p>
          </div>
          <div
            className="feedback-details-section"
          >
            <span />
            <button
              aria-label="Get feedback"
              className="quill-button focus-on-light disabled"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              <span>
                Get feedback
              </span>
            </button>
          </div>
        </div>
        <button
          className="skip-main"
          onClick={[Function]}
          type="button"
        >
          Return to editor
        </button>
      </div>
    </div>
  </div>
</PromptStep>
`;
