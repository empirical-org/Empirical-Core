// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown input component should render when it is multi-option 1`] = `
<div
  className="dropdown-container input-container inactive has-text  undefined  checkbox-dropdown"
  onClick={[Function]}
  onKeyDown={[Function]}
  role="button"
  tabIndex={0}
>
  <label />
  <ForwardRef
    className="dropdown"
    classNamePrefix="dropdown"
    closeMenuOnSelect={false}
    components={
      Object {
        "Option": [Function],
        "ValueContainer": [Function],
      }
    }
    cursor={null}
    filterOption={null}
    hideSelectedOptions={false}
    inputValue=""
    isClearable={false}
    isMulti={true}
    menuIsOpen={false}
    onChange={[Function]}
    onInputChange={[Function]}
    onKeyDown={[Function]}
    optionType="option"
    options={
      Array [
        Object {
          "label": "All options",
          "value": "All",
        },
        Object {
          "label": "One",
          "value": 1,
        },
        Object {
          "label": "Two",
          "value": 2,
        },
        Object {
          "label": "Three",
          "value": 3,
        },
        Object {
          "label": "Four",
          "value": 4,
        },
      ]
    }
    placeholder=""
    tabIndex={-1}
    updateCursor={[Function]}
    value={Array []}
  />
</div>
`;

exports[`Dropdown input component should render when it is not searchable 1`] = `
<div
  className="dropdown-container input-container inactive has-text not-editable undefined  "
  onClick={[Function]}
  onKeyDown={[Function]}
  role="button"
  tabIndex={0}
>
  <label>
    Label
  </label>
  <ForwardRef
    className="dropdown"
    classNamePrefix="dropdown"
    components={
      Object {
        "Option": [Function],
      }
    }
    cursor={null}
    filterOption={null}
    inputValue=""
    isClearable={false}
    isSearchable={false}
    menuIsOpen={false}
    onInputChange={[Function]}
    onKeyDown={[Function]}
    options={
      Array [
        Object {
          "label": "One",
          "value": 1,
        },
        Object {
          "label": "Two",
          "value": 2,
        },
        Object {
          "label": "Three",
          "value": 3,
        },
        Object {
          "label": "Four",
          "value": 4,
        },
      ]
    }
    placeholder=""
    tabIndex={-1}
    updateCursor={[Function]}
    value={
      Object {
        "label": "One",
        "value": 1,
      }
    }
  />
</div>
`;

exports[`Dropdown input component should render when it is searchable 1`] = `
<div
  className="dropdown-container input-container inactive has-text  undefined searchable "
  onClick={[Function]}
  onKeyDown={[Function]}
  role="button"
  tabIndex={0}
>
  <label>
    Label
  </label>
  <ForwardRef
    className="dropdown"
    classNamePrefix="dropdown"
    components={
      Object {
        "Option": [Function],
      }
    }
    cursor={null}
    filterOption={null}
    inputValue=""
    isClearable={false}
    isSearchable={true}
    menuIsOpen={false}
    onInputChange={[Function]}
    onKeyDown={[Function]}
    options={
      Array [
        Object {
          "label": "One",
          "value": 1,
        },
        Object {
          "label": "Two",
          "value": 2,
        },
        Object {
          "label": "Three",
          "value": 3,
        },
        Object {
          "label": "Four",
          "value": 4,
        },
      ]
    }
    placeholder="Value goes here"
    tabIndex={0}
    updateCursor={[Function]}
    value={
      Object {
        "label": "Two",
        "value": 2,
      }
    }
  />
</div>
`;
