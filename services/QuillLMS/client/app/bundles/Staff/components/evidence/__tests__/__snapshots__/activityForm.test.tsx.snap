// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Activity Form component should render Activities 1`] = `
<div
  className="activity-form-container"
>
  <UpperFormSection
    activity={
      Object {
        "notes": "Could Capybaras Create Chaos? [student testing]",
        "parent_activity_id": "17",
        "passages": Array [
          Object {
            "text": "...",
          },
        ],
        "prompt_attributes": Array [
          Object {
            "conjunction": "because",
            "first_strong_example": "",
            "id": 7,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "1",
          },
          Object {
            "conjunction": "but",
            "first_strong_example": "",
            "id": 8,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "2",
          },
          Object {
            "conjunction": "so",
            "first_strong_example": "",
            "id": 9,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "3",
          },
        ],
        "prompts": Array [
          Object {
            "conjunction": "because",
            "first_strong_example": "",
            "id": 7,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "1",
          },
          Object {
            "conjunction": "but",
            "first_strong_example": "",
            "id": 8,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "2",
          },
          Object {
            "conjunction": "so",
            "first_strong_example": "",
            "id": 9,
            "max_attempts": 5,
            "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
            "second_strong_example": "",
            "text": "3",
          },
        ],
        "scored_level": "7",
        "target_level": 7,
        "title": "Could Capybaras Create Chaos?",
      }
    }
    activityFlag="alpha"
    activityNotes="Could Capybaras Create Chaos? [student testing]"
    activityTitle="Could Capybaras Create Chaos?"
    aiType="GenAI"
    errors={Object {}}
    formErrorsPresent={false}
    handleSetAIType={[Function]}
    handleSetActivityFlag={[Function]}
    handleSetActivityNotes={[Function]}
    handleSetActivityTitle={[Function]}
    handleSubmitActivity={[Function]}
    parentActivityId="17"
    requestErrors={Array []}
    showErrorsContainer={false}
  />
  <DataTable
    averageFontWidth={7}
    className="activity-fields-table"
    defaultSortAttribute=""
    headers={
      Array [
        Object {
          "attribute": "component",
          "name": "",
          "width": "800px",
        },
        Object {
          "attribute": "added",
          "name": "Added?",
          "width": "50px",
        },
      ]
    }
    rows={
      Array [
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/green_check.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <React.Fragment>
                  <p
                    className="text-editor-label has-text"
                  >
                    <span>
                      Passage
                    </span>
                    <button
                      className="quill-button-archived fun primary outlined focus-on-light"
                      onClick={[Function]}
                      type="button"
                    >
                      Hide highlights
                    </button>
                  </p>
                  <div
                    className=""
                  >
                    <TextEditor
                      handleTextChange={[Function]}
                      text="..."
                    />
                  </div>
                </React.Fragment>,
              ]
            }
            label="Text"
          />,
          "id": 0,
        },
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/red_x.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <PromptsForm
                  activityBecausePrompt={
                    Object {
                      "conjunction": "because",
                      "first_strong_example": "",
                      "id": 7,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "1",
                    }
                  }
                  activityButPrompt={
                    Object {
                      "conjunction": "but",
                      "first_strong_example": "",
                      "id": 8,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "2",
                    }
                  }
                  activitySoPrompt={
                    Object {
                      "conjunction": "so",
                      "first_strong_example": "",
                      "id": 9,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "3",
                    }
                  }
                  errors={Object {}}
                  handleSetPrompt={[Function]}
                />,
              ]
            }
            label="Stems"
          />,
          "id": 1,
        },
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/red_x.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <Input
                  autoComplete="on"
                  className="highlight-prompt-input"
                  handleChange={[Function]}
                  label="Highlight Prompt: \\"As you read, highlight two sentences ...\\""
                  value="As you read, highlight two sentences "
                />,
              ]
            }
            label="Highlight Prompt"
          />,
          "id": 2,
        },
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/red_x.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <ImageSection
                  activityPassages={
                    Array [
                      Object {
                        "text": "...",
                      },
                    ]
                  }
                  errors={Object {}}
                  handleSetImageAltText={[Function]}
                  handleSetImageAttribution={[Function]}
                  handleSetImageCaption={[Function]}
                  handleSetImageLink={[Function]}
                  imageAttributionGuideLink="https://www.notion.so/quill/Activity-Images-9bc3993400da46a6af445a8a0d2d9d3f#11e9a01b071e41bc954e1182d56e93e8"
                  imageAttributionStyle=""
                />,
              ]
            }
            label="Image"
          />,
          "id": 3,
        },
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/green_check.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <MaxAttemptsEditor
                  conjunction="because"
                  handleSetPrompt={[Function]}
                  prompt={
                    Object {
                      "conjunction": "because",
                      "first_strong_example": "",
                      "id": 7,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "1",
                    }
                  }
                />,
                <MaxAttemptsEditor
                  conjunction="but"
                  handleSetPrompt={[Function]}
                  prompt={
                    Object {
                      "conjunction": "but",
                      "first_strong_example": "",
                      "id": 8,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "2",
                    }
                  }
                />,
                <MaxAttemptsEditor
                  conjunction="so"
                  handleSetPrompt={[Function]}
                  prompt={
                    Object {
                      "conjunction": "so",
                      "first_strong_example": "",
                      "id": 9,
                      "max_attempts": 5,
                      "max_attempts_feedback": "At no point in your rambling, incoherent response were you even close to anything that could be considered a rational thought. I award you no points, and may God have mercy on your soul.",
                      "second_strong_example": "",
                      "text": "3",
                    }
                  }
                />,
              ]
            }
            label="Max Attempts Feedback"
          />,
          "id": 4,
        },
        Object {
          "added": <img
            alt="quill-circle-checkmark"
            src="/images/red_x.svg"
          />,
          "component": <ToggleComponentSection
            components={
              Array [
                <React.Fragment>
                  <p
                    className="text-editor-label "
                  >
                    Building Essential Knowledge Text
                  </p>
                  <TextEditor
                    handleTextChange={[Function]}
                  />
                </React.Fragment>,
              ]
            }
            label="Building Essential Knowledge"
          />,
          "id": 5,
        },
      ]
    }
  />
</div>
`;
