<%= link_to 'Back to Dataset', @dataset %>

<h1>Trial Runner</h1>

<%= form_for @trial, url: research_gen_ai_dataset_trials_path(@dataset) do |f| %>
  <%= render 'errors', object: @trial %>

  <div class="field-spacing">
    <label>LLM:</label>
    <%= link_to 'new', new_research_gen_ai_llm_path, class: 'new-link', target: '_blank' %>
    <br>

    <%= f.collection_select :llm_id, @llms, :id, :to_s, { required: true } %>
  </div>

  <div class="field-spacing">
    <label>LLM Prompt Template:</label>
    <%= link_to 'new', new_research_gen_ai_llm_prompt_template_path, class: 'new-link', target: '_blank' %>
    <br>

    <%= f.collection_select :llm_prompt_template_id, @llm_prompt_templates, :id, :to_s, { required: true } %>
  </div>

  <div class="field-spacing">
    <label>G-Eval:</label>
    <%= link_to 'new', new_research_gen_ai_auto_chain_of_thought_path, class: 'new-link', target: '_blank' %>
    <br>

    <%= f.collection_select :g_eval_id, @g_evals, :id, :to_s, { required: true } %>
  </div>

  <div class="field-spacing">
    <label>Optimal Guidelines</label>
    <input type="checkbox" id="select-all-optimal-guidelines" /> Select all
    <button type="button" id="randomize-optimal-guidelines">Randomize</button>
    <ul id="optimal-guidelines-list" style="list-style-type: none; padding-left: 0;">
      <% @guidelines.optimal.each do |guideline| %>
        <li>
          <%= f.check_box :guideline_ids, { multiple: true }, guideline.id, nil %>
          <%= guideline.text %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="field-spacing">
    <label>Sub-Optimal Guidelines</label>
    <input type="checkbox" id="select-all-suboptimal-guidelines" /> Select all
    <button type="button" id="randomize-suboptimal-guidelines">Randomize</button>
    <ul id="suboptimal-guidelines-list" style="list-style-type: none; padding-left: 0;">
      <% @guidelines.suboptimal.each do |guideline| %>
        <li>
          <%= f.check_box :guideline_ids, { multiple: true }, guideline.id, nil %>
          <%= guideline.text %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="field-spacing">
    <label>Optimal Examples</label>
    <input type="checkbox" id="select-all-optimal-examples" /> Select all
    <button type="button" id="randomize-optimal-examples">Randomize</button>
    <ul id="optimal-examples-list" style="list-style-type: none; padding-left: 0;">
      <% @prompt_examples.optimal.each do |prompt_example| %>
        <li>
          <%= f.check_box :prompt_example_ids, { multiple: true }, prompt_example.id, nil %>
          <%= prompt_example.student_response %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="field-spacing">
    <label>Sub-optimal Responses with Feedback</label>
    <input type="checkbox" id="select-all-suboptimal-responses" /> Select all
    <button type="button" id="randomize-suboptimal-responses">Randomize</button>
    <ul id="suboptimal-responses-list" style="list-style-type: none; padding-left: 0;">
      <% @prompt_examples.suboptimal.each do |prompt_example| %>
        <li>
          <%= f.check_box :prompt_example_ids, { multiple: true }, prompt_example.id, nil %>
          <%= prompt_example.student_response %>
        </li>
      <% end %>
    </ul>
  </div>

  <div class="actions">
    <%= f.submit "run" %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function handleSelectAll(selectAllCheckboxId, listId) {
      const selectAllCheckbox = document.getElementById(selectAllCheckboxId);
      const list = document.getElementById(listId);

      selectAllCheckbox.addEventListener('change', function() {
        const checkboxes = list.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach(checkbox => {
          checkbox.checked = selectAllCheckbox.checked;
        });
      });
    }

    function handleRandomize(randomizeButtonId, listId) {
      const randomizeButton = document.getElementById(randomizeButtonId);
      const list = document.getElementById(listId);

      randomizeButton.addEventListener('click', function() {
        const checkboxes = Array.from(list.querySelectorAll('input[type="checkbox"]'));
        const randomCount = Math.floor(Math.random() * checkboxes.length) + 1;
        checkboxes.forEach(checkbox => checkbox.checked = false);
        for (let i = 0; i < randomCount; i++) {
          const randomIndex = Math.floor(Math.random() * checkboxes.length);
          checkboxes[randomIndex].checked = true;
          checkboxes.splice(randomIndex, 1);
        }
      });
    }

    handleSelectAll('select-all-optimal-guidelines', 'optimal-guidelines-list');
    handleSelectAll('select-all-suboptimal-guidelines', 'suboptimal-guidelines-list');
    handleSelectAll('select-all-optimal-examples', 'optimal-examples-list');
    handleSelectAll('select-all-suboptimal-responses', 'suboptimal-responses-list');

    handleRandomize('randomize-optimal-guidelines', 'optimal-guidelines-list');
    handleRandomize('randomize-suboptimal-guidelines', 'suboptimal-guidelines-list');
    handleRandomize('randomize-optimal-examples', 'optimal-examples-list');
    handleRandomize('randomize-suboptimal-responses', 'suboptimal-responses-list');
  });
</script>
