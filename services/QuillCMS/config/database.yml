# Setting the variables, statement_timeone based on this
# https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts#postgresql
default: &default
  adapter: postgresql
  user: <%= ENV["DEV_POSTGRES_USER"] || "root" %>
  password: <%= ENV["DEV_POSTGRES_PASSWORD"] || "password" %>
  host: localhost
  port: 5433
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000
  variables:
    statement_timeout: <%= ENV["STATEMENT_TIMEOUT"] || "180s" %>

development:
  primary:
    <<: *default
    database: quill_cms_development
  replica:
    <<: *default
    database: quill_cms_development
    replica: true

test:
  primary:
    <<: *default
    database: quill_cms_test
  replica:
    <<: *default
    database: quill_cms_test
    replica: true

elastic_beanstalk_primary_env: &elastic_beanstalk_primary_env
  <<: *default
  database: <%= ENV['RDS_DB_NAME'] %>
  user: <%= ENV['RDS_DB_USERNAME'] %>
  password: <%= ENV['RDS_DB_PASSWORD'] %>
  host: <%= ENV['RDS_HOSTNAME'] %>
  port: <%= ENV['RDS_PORT'] %>

elastic_beanstalk_replica_env: &elastic_beanstalk_replica_env
  <<: *default
  database: <%= ENV['RDS_REPLICA_NAME'] %>
  user: <%= ENV['RDS_REPLICA_USERNAME'] %>
  password: <%= ENV['RDS_REPLICA_PASSWORD'] %>
  host: <%= ENV['RDS_REPLICA_HOSTNAME'] %>
  port: <%= ENV['RDS_REPLICA_PORT'] %>
  replica: true

production_env: &production_env
  primary:
    <<: *elastic_beanstalk_primary_env
  replica:
    <<: *elastic_beanstalk_replica_env

staging:
  <<: *production_env

production:
  <<: *production_env
